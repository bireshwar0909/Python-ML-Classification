From: <Saved by Blink>
Snapshot-Content-Location: https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html
Subject: =?utf-8?Q?sklearn.neighbors.KNeighborsClassifier=20=E2=80=94=20scikit-lea?=
 =?utf-8?Q?rn=201.0.2=20documentation?=
Date: Wed, 16 Feb 2022 05:59:53 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----"


------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/html
Content-ID: <frame-AA37CF8B394517413C57AF2A44325EEE@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html

<!DOCTYPE html><!--[if IE 8]><html class=3D"no-js lt-ie9" lang=3D"en" > <![=
endif]--><!--[if gt IE 8]><!--><html class=3D"no-js" lang=3D"en"><!--<![end=
if]--><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-0987b4=
1b-4fbe-4eb2-a7cf-06d1a434a2d3@mhtml.blink" /><link rel=3D"stylesheet" type=
=3D"text/css" href=3D"cid:css-32ecf887-8332-4f35-af29-41507b5a430c@mhtml.bl=
ink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-11ed4ec3-=
6547-43a1-9f36-e4264d9bf765@mhtml.blink" /><link rel=3D"stylesheet" type=3D=
"text/css" href=3D"cid:css-dee828a7-9fab-4886-9d66-6730f8bc6630@mhtml.blink=
" />
 =20
  <meta name=3D"generator" content=3D"Docutils 0.17.1: http://docutils.sour=
ceforge.net/">

  <meta property=3D"og:title" content=3D"sklearn.neighbors.KNeighborsClassi=
fier">
  <meta property=3D"og:type" content=3D"website">
  <meta property=3D"og:url" content=3D"https://scikit-learn/stable/modules/=
generated/sklearn.neighbors.KNeighborsClassifier.html">
  <meta property=3D"og:site_name" content=3D"scikit-learn">
  <meta property=3D"og:description" content=3D"Examples using sklearn.neigh=
bors.KNeighborsClassifier: Release Highlights for scikit-learn 0.24 Release=
 Highlights for scikit-learn 0.24, Classifier comparison Classifier compari=
son, Plot the decis...">
  <meta property=3D"og:image" content=3D"https://scikit-learn/_images/sphx_=
glr_plot_release_highlights_0_24_0_thumb.png">
  <meta property=3D"og:image:alt" content=3D"Release Highlights for scikit-=
learn 0.24">
 =20
  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1.0">

 =20
  <title>sklearn.neighbors.KNeighborsClassifier =E2=80=94 scikit-learn 1.0.=
2 documentation</title>
 =20
  <link rel=3D"canonical" href=3D"http://scikit-learn.org/stable/modules/ge=
nerated/sklearn.neighbors.KNeighborsClassifier.html">

 =20
  <link rel=3D"shortcut icon" href=3D"https://scikit-learn.org/stable/_stat=
ic/favicon.ico">
 =20

  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
css/vendor/bootstrap.min.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
pygments.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
css/theme.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
plot_directive.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
sg_gallery.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
sg_gallery-binder.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
sg_gallery-dataframe.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
sg_gallery-rendered-html.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
css/theme.css" type=3D"text/css">

=20
</head>
<body>
<nav id=3D"navbar" class=3D"sk-docs-navbar navbar navbar-expand-md navbar-l=
ight bg-light py-0" style=3D"top: 0px;">
  <div class=3D"container-fluid sk-docs-container px-0">
      <a class=3D"navbar-brand py-0" href=3D"https://scikit-learn.org/stabl=
e/index.html">
        <img class=3D"sk-brand-img" src=3D"https://scikit-learn.org/stable/=
_static/scikit-learn-logo-small.png" alt=3D"logo">
      </a>
    <button id=3D"sk-navbar-toggler" class=3D"navbar-toggler" type=3D"butto=
n" data-toggle=3D"collapse" data-target=3D"#navbarSupportedContent" aria-co=
ntrols=3D"navbarSupportedContent" aria-expanded=3D"false" aria-label=3D"Tog=
gle navigation">
      <span class=3D"navbar-toggler-icon"></span>
    </button>

    <div class=3D"sk-navbar-collapse collapse navbar-collapse" id=3D"navbar=
SupportedContent">
      <ul class=3D"navbar-nav mr-auto">
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link" href=3D"https://scikit-learn.or=
g/stable/install.html">Install</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link" href=3D"https://scikit-learn.or=
g/stable/user_guide.html">User Guide</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link" href=3D"https://scikit-learn.or=
g/stable/modules/classes.html">API</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link" href=3D"https://scikit-learn.or=
g/stable/auto_examples/index.html">Examples</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/getting_started.html">Getting Started</=
a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/tutorial/index.html">Tutorial</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/whats_new/v1.0.html">What's new</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/glossary.html">Glossary</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/developers/index.html">Development</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/faq.html">FAQ</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/support.html">Support</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/related_projects.html">Related packages=
</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/roadmap.html">Roadmap</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/about.html">About us</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://github.com/scikit-learn/scikit-learn">GitHub</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/dev/versions.html">Other Versions and Download=
</a>
        </li>
        <li class=3D"nav-item dropdown nav-more-item-dropdown">
          <a class=3D"sk-nav-link nav-link dropdown-toggle" href=3D"https:/=
/scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClas=
sifier.html#" id=3D"navbarDropdown" role=3D"button" data-toggle=3D"dropdown=
" aria-haspopup=3D"true" aria-expanded=3D"false">More</a>
          <div class=3D"dropdown-menu" aria-labelledby=3D"navbarDropdown">
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/getting_started.html">Getting Started</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/tutorial/index.html">Tutorial</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/whats_new/v1.0.html">What's new</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/glossary.html">Glossary</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/developers/index.html">Development</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/faq.html">FAQ</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/support.html">Support</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/related_projects.html">Related packages</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/roadmap.html">Roadmap</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/about.html">About us</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://github.com/scikit-learn/scikit-learn">GitHub</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/dev/versions.html">Other Versions and Download</a>
          </div>
        </li>
      </ul>
      <div id=3D"searchbox" role=3D"search">
          <div class=3D"searchformwrapper">
          <form class=3D"search" action=3D"https://scikit-learn.org/stable/=
search.html" method=3D"get">
            <input class=3D"sk-search-text-input" type=3D"text" name=3D"q" =
aria-labelledby=3D"searchlabel">
            <input class=3D"sk-search-text-btn" type=3D"submit" value=3D"Go=
">
          </form>
          </div>
      </div>
    </div>
  </div>
</nav>
<div class=3D"d-flex" id=3D"sk-doc-wrapper">
    <input type=3D"checkbox" name=3D"sk-toggle-checkbox" id=3D"sk-toggle-ch=
eckbox">
    <label id=3D"sk-sidemenu-toggle" class=3D"sk-btn-toggle-toc btn sk-btn-=
primary" for=3D"sk-toggle-checkbox">Toggle Menu</label>
    <div id=3D"sk-sidebar-wrapper" class=3D"border-right">
      <div class=3D"sk-sidebar-toc-wrapper">
        <div class=3D"sk-sidebar-toc-logo">
          <a href=3D"https://scikit-learn.org/stable/index.html">
            <img class=3D"sk-brand-img" src=3D"https://scikit-learn.org/sta=
ble/_static/scikit-learn-logo-small.png" alt=3D"logo">
          </a>
        </div>
        <div class=3D"btn-group w-100 mb-2" role=3D"group" aria-label=3D"re=
llinks">
            <a href=3D"https://scikit-learn.org/stable/modules/generated/sk=
learn.neighbors.KernelDensity.html" role=3D"button" class=3D"btn sk-btn-rel=
link py-1" sk-rellink-tooltip=3D"sklearn.neighbors.KernelDensity">Prev</a><=
a href=3D"https://scikit-learn.org/stable/modules/classes.html" role=3D"but=
ton" class=3D"btn sk-btn-rellink py-1" sk-rellink-tooltip=3D"API Reference"=
>Up</a>
            <a href=3D"https://scikit-learn.org/stable/modules/generated/sk=
learn.neighbors.KNeighborsRegressor.html" role=3D"button" class=3D"btn sk-b=
tn-rellink py-1" sk-rellink-tooltip=3D"sklearn.neighbors.KNeighborsRegresso=
r">Next</a>
        </div>
        <div class=3D"alert alert-danger p-1 mb-2" role=3D"alert">
          <p class=3D"text-center mb-0">
          <strong>scikit-learn 1.0.2</strong><br>
          <a href=3D"http://scikit-learn.org/dev/versions.html">Other versi=
ons</a>
          </p>
        </div>
        <div class=3D"alert alert-warning p-1 mb-2" role=3D"alert">
          <p class=3D"text-center mb-0">
            Please <a class=3D"font-weight-bold" href=3D"https://scikit-lea=
rn.org/stable/about.html#citing-scikit-learn"><string>cite us</string></a> =
if you use the software.
          </p>
        </div>
            <div class=3D"sk-sidebar-toc">
              <ul>
<li><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.neighbors.KNeighborsClassifier.html#"><code clas=
s=3D"xref py py-mod docutils literal notranslate"><span class=3D"pre">sklea=
rn.neighbors</span></code>.KNeighborsClassifier</a><ul>
<li><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.neighbors.KNeighborsClassifier.html#examples-usi=
ng-sklearn-neighbors-kneighborsclassifier">Examples using <code class=3D"do=
cutils literal notranslate"><span class=3D"pre">sklearn.neighbors.KNeighbor=
sClassifier</span></code></a></li>
</ul>
</li>
</ul>

            </div>
      </div>
    </div>
    <div id=3D"sk-page-content-wrapper">
      <div class=3D"sk-page-content container-fluid body px-md-3" role=3D"m=
ain">
       =20
  <section id=3D"sklearn-neighbors-kneighborsclassifier">
<h1><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/classes.html#module-sklearn.neighbors" title=3D"sklearn.neighbors"=
><code class=3D"xref py py-mod docutils literal notranslate"><span class=3D=
"pre">sklearn.neighbors</span></code></a>.KNeighborsClassifier<a class=3D"h=
eaderlink" href=3D"https://scikit-learn.org/stable/modules/generated/sklear=
n.neighbors.KNeighborsClassifier.html#sklearn-neighbors-kneighborsclassifie=
r" title=3D"Permalink to this headline">=C2=B6</a></h1>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"sklearn.neighbors.KNeighborsClassifie=
r">
<em class=3D"property"><span class=3D"pre">class</span> </em><span class=3D=
"sig-prename descclassname"><span class=3D"pre">sklearn.neighbors.</span></=
span><span class=3D"sig-name descname"><span class=3D"pre">KNeighborsClassi=
fier</span></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"=
><span class=3D"n"><span class=3D"pre">n_neighbors</span></span><span class=
=3D"o"><span class=3D"pre">=3D</span></span><span class=3D"default_value"><=
span class=3D"pre">5</span></span></em>, <em class=3D"sig-param"><span clas=
s=3D"o"><span class=3D"pre">*</span></span></em>, <em class=3D"sig-param"><=
span class=3D"n"><span class=3D"pre">weights</span></span><span class=3D"o"=
><span class=3D"pre">=3D</span></span><span class=3D"default_value"><span c=
lass=3D"pre">'uniform'</span></span></em>, <em class=3D"sig-param"><span cl=
ass=3D"n"><span class=3D"pre">algorithm</span></span><span class=3D"o"><spa=
n class=3D"pre">=3D</span></span><span class=3D"default_value"><span class=
=3D"pre">'auto'</span></span></em>, <em class=3D"sig-param"><span class=3D"=
n"><span class=3D"pre">leaf_size</span></span><span class=3D"o"><span class=
=3D"pre">=3D</span></span><span class=3D"default_value"><span class=3D"pre"=
>30</span></span></em>, <em class=3D"sig-param"><span class=3D"n"><span cla=
ss=3D"pre">p</span></span><span class=3D"o"><span class=3D"pre">=3D</span><=
/span><span class=3D"default_value"><span class=3D"pre">2</span></span></em=
>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">metric</sp=
an></span><span class=3D"o"><span class=3D"pre">=3D</span></span><span clas=
s=3D"default_value"><span class=3D"pre">'minkowski'</span></span></em>, <em=
 class=3D"sig-param"><span class=3D"n"><span class=3D"pre">metric_params</s=
pan></span><span class=3D"o"><span class=3D"pre">=3D</span></span><span cla=
ss=3D"default_value"><span class=3D"pre">None</span></span></em>, <em class=
=3D"sig-param"><span class=3D"n"><span class=3D"pre">n_jobs</span></span><s=
pan class=3D"o"><span class=3D"pre">=3D</span></span><span class=3D"default=
_value"><span class=3D"pre">None</span></span></em><span class=3D"sig-paren=
">)</span><a class=3D"reference external" href=3D"https://github.com/scikit=
-learn/scikit-learn/blob/7e1e6d09b/sklearn/neighbors/_classification.py#L22=
"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span><=
/a><a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/=
generated/sklearn.neighbors.KNeighborsClassifier.html#sklearn.neighbors.KNe=
ighborsClassifier" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Classifier implementing the k-nearest neighbors vote.</p>
<p>Read more in the <a class=3D"reference internal" href=3D"https://scikit-=
learn.org/stable/modules/neighbors.html#classification"><span class=3D"std =
std-ref">User Guide</span></a>.</p>
<dl class=3D"field-list">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl>
<dt><strong>n_neighbors</strong><span class=3D"classifier">int, default=3D5=
</span></dt><dd><p>Number of neighbors to use by default for <a class=3D"re=
ference internal" href=3D"https://scikit-learn.org/stable/modules/generated=
/sklearn.neighbors.KNeighborsClassifier.html#sklearn.neighbors.KNeighborsCl=
assifier.kneighbors" title=3D"sklearn.neighbors.KNeighborsClassifier.kneigh=
bors"><code class=3D"xref py py-meth docutils literal notranslate"><span cl=
ass=3D"pre">kneighbors</span></code></a> queries.</p>
</dd>
<dt><strong>weights</strong><span class=3D"classifier">{=E2=80=98uniform=E2=
=80=99, =E2=80=98distance=E2=80=99} or callable, default=3D=E2=80=99uniform=
=E2=80=99</span></dt><dd><p>Weight function used in prediction.  Possible v=
alues:</p>
<ul class=3D"simple">
<li><p>=E2=80=98uniform=E2=80=99 : uniform weights.  All points in each nei=
ghborhood
are weighted equally.</p></li>
<li><p>=E2=80=98distance=E2=80=99 : weight points by the inverse of their d=
istance.
in this case, closer neighbors of a query point will have a
greater influence than neighbors which are further away.</p></li>
<li><p>[callable] : a user-defined function which accepts an
array of distances, and returns an array of the same shape
containing the weights.</p></li>
</ul>
</dd>
<dt><strong>algorithm</strong><span class=3D"classifier">{=E2=80=98auto=E2=
=80=99, =E2=80=98ball_tree=E2=80=99, =E2=80=98kd_tree=E2=80=99, =E2=80=98br=
ute=E2=80=99}, default=3D=E2=80=99auto=E2=80=99</span></dt><dd><p>Algorithm=
 used to compute the nearest neighbors:</p>
<ul class=3D"simple">
<li><p>=E2=80=98ball_tree=E2=80=99 will use <a class=3D"reference internal"=
 href=3D"https://scikit-learn.org/stable/modules/generated/sklearn.neighbor=
s.BallTree.html#sklearn.neighbors.BallTree" title=3D"sklearn.neighbors.Ball=
Tree"><code class=3D"xref py py-class docutils literal notranslate"><span c=
lass=3D"pre">BallTree</span></code></a></p></li>
<li><p>=E2=80=98kd_tree=E2=80=99 will use <a class=3D"reference internal" h=
ref=3D"https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.=
KDTree.html#sklearn.neighbors.KDTree" title=3D"sklearn.neighbors.KDTree"><c=
ode class=3D"xref py py-class docutils literal notranslate"><span class=3D"=
pre">KDTree</span></code></a></p></li>
<li><p>=E2=80=98brute=E2=80=99 will use a brute-force search.</p></li>
<li><p>=E2=80=98auto=E2=80=99 will attempt to decide the most appropriate a=
lgorithm
based on the values passed to <a class=3D"reference internal" href=3D"https=
://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsCl=
assifier.html#sklearn.neighbors.KNeighborsClassifier.fit" title=3D"sklearn.=
neighbors.KNeighborsClassifier.fit"><code class=3D"xref py py-meth docutils=
 literal notranslate"><span class=3D"pre">fit</span></code></a> method.</p>=
</li>
</ul>
<p>Note: fitting on sparse input will override the setting of
this parameter, using brute force.</p>
</dd>
<dt><strong>leaf_size</strong><span class=3D"classifier">int, default=3D30<=
/span></dt><dd><p>Leaf size passed to BallTree or KDTree.  This can affect =
the
speed of the construction and query, as well as the memory
required to store the tree.  The optimal value depends on the
nature of the problem.</p>
</dd>
<dt><strong>p</strong><span class=3D"classifier">int, default=3D2</span></d=
t><dd><p>Power parameter for the Minkowski metric. When p =3D 1, this is
equivalent to using manhattan_distance (l1), and euclidean_distance
(l2) for p =3D 2. For arbitrary p, minkowski_distance (l_p) is used.</p>
</dd>
<dt><strong>metric</strong><span class=3D"classifier">str or callable, defa=
ult=3D=E2=80=99minkowski=E2=80=99</span></dt><dd><p>The distance metric to =
use for the tree.  The default metric is
minkowski, and with p=3D2 is equivalent to the standard Euclidean
metric. For a list of available metrics, see the documentation of
<a class=3D"reference internal" href=3D"https://scikit-learn.org/stable/mod=
ules/generated/sklearn.metrics.DistanceMetric.html#sklearn.metrics.Distance=
Metric" title=3D"sklearn.metrics.DistanceMetric"><code class=3D"xref py py-=
class docutils literal notranslate"><span class=3D"pre">DistanceMetric</spa=
n></code></a>.
If metric is =E2=80=9Cprecomputed=E2=80=9D, X is assumed to be a distance m=
atrix and
must be square during fit. X may be a <a class=3D"reference internal" href=
=3D"https://scikit-learn.org/stable/glossary.html#term-sparse-graph"><span =
class=3D"xref std std-term">sparse graph</span></a>,
in which case only =E2=80=9Cnonzero=E2=80=9D elements may be considered nei=
ghbors.</p>
</dd>
<dt><strong>metric_params</strong><span class=3D"classifier">dict, default=
=3DNone</span></dt><dd><p>Additional keyword arguments for the metric funct=
ion.</p>
</dd>
<dt><strong>n_jobs</strong><span class=3D"classifier">int, default=3DNone</=
span></dt><dd><p>The number of parallel jobs to run for neighbors search.
<code class=3D"docutils literal notranslate"><span class=3D"pre">None</span=
></code> means 1 unless in a <a class=3D"reference external" href=3D"https:=
//joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend" ti=
tle=3D"(in joblib v1.2.0.dev0)"><code class=3D"xref py py-obj docutils lite=
ral notranslate"><span class=3D"pre">joblib.parallel_backend</span></code><=
/a> context.
<code class=3D"docutils literal notranslate"><span class=3D"pre">-1</span><=
/code> means using all processors. See <a class=3D"reference internal" href=
=3D"https://scikit-learn.org/stable/glossary.html#term-n_jobs"><span class=
=3D"xref std std-term">Glossary</span></a>
for more details.
Doesn=E2=80=99t affect <a class=3D"reference internal" href=3D"https://scik=
it-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifie=
r.html#sklearn.neighbors.KNeighborsClassifier.fit" title=3D"sklearn.neighbo=
rs.KNeighborsClassifier.fit"><code class=3D"xref py py-meth docutils litera=
l notranslate"><span class=3D"pre">fit</span></code></a> method.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Attributes</dt>
<dd class=3D"field-even"><dl>
<dt><strong>classes_</strong><span class=3D"classifier">array of shape (n_c=
lasses,)</span></dt><dd><p>Class labels known to the classifier</p>
</dd>
<dt><strong>effective_metric_</strong><span class=3D"classifier">str or cal=
lble</span></dt><dd><p>The distance metric used. It will be same as the <co=
de class=3D"docutils literal notranslate"><span class=3D"pre">metric</span>=
</code> parameter
or a synonym of it, e.g. =E2=80=98euclidean=E2=80=99 if the <code class=3D"=
docutils literal notranslate"><span class=3D"pre">metric</span></code> para=
meter set to
=E2=80=98minkowski=E2=80=99 and <code class=3D"docutils literal notranslate=
"><span class=3D"pre">p</span></code> parameter set to 2.</p>
</dd>
<dt><strong>effective_metric_params_</strong><span class=3D"classifier">dic=
t</span></dt><dd><p>Additional keyword arguments for the metric function. F=
or most metrics
will be same with <code class=3D"docutils literal notranslate"><span class=
=3D"pre">metric_params</span></code> parameter, but may also contain the
<code class=3D"docutils literal notranslate"><span class=3D"pre">p</span></=
code> parameter value if the <code class=3D"docutils literal notranslate"><=
span class=3D"pre">effective_metric_</span></code> attribute is set to
=E2=80=98minkowski=E2=80=99.</p>
</dd>
<dt><strong>n_features_in_</strong><span class=3D"classifier">int</span></d=
t><dd><p>Number of features seen during <a class=3D"reference internal" hre=
f=3D"https://scikit-learn.org/stable/glossary.html#term-fit"><span class=3D=
"xref std std-term">fit</span></a>.</p>
<div class=3D"versionadded">
<p><span class=3D"versionmodified added">New in version 0.24.</span></p>
</div>
</dd>
<dt><strong>feature_names_in_</strong><span class=3D"classifier">ndarray of=
 shape (<code class=3D"docutils literal notranslate"><span class=3D"pre">n_=
features_in_</span></code>,)</span></dt><dd><p>Names of features seen durin=
g <a class=3D"reference internal" href=3D"https://scikit-learn.org/stable/g=
lossary.html#term-fit"><span class=3D"xref std std-term">fit</span></a>. De=
fined only when <code class=3D"docutils literal notranslate"><span class=3D=
"pre">X</span></code>
has feature names that are all strings.</p>
<div class=3D"versionadded">
<p><span class=3D"versionmodified added">New in version 1.0.</span></p>
</div>
</dd>
<dt><strong>n_samples_fit_</strong><span class=3D"classifier">int</span></d=
t><dd><p>Number of samples in the fitted data.</p>
</dd>
<dt><strong>outputs_2d_</strong><span class=3D"classifier">bool</span></dt>=
<dd><p>False when <code class=3D"docutils literal notranslate"><span class=
=3D"pre">y</span></code>=E2=80=99s shape is (n_samples, ) or (n_samples, 1)=
 during fit
otherwise True.</p>
</dd>
</dl>
</dd>
</dl>
<div class=3D"admonition seealso">
<p class=3D"admonition-title">See also</p>
<dl class=3D"simple">
<dt><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.neighbors.RadiusNeighborsClassifier.html#sklearn=
.neighbors.RadiusNeighborsClassifier" title=3D"sklearn.neighbors.RadiusNeig=
hborsClassifier"><code class=3D"xref py py-obj docutils literal notranslate=
"><span class=3D"pre">RadiusNeighborsClassifier</span></code></a></dt><dd><=
p>Classifier based on neighbors within a fixed radius.</p>
</dd>
<dt><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.neighbors.KNeighborsRegressor.html#sklearn.neigh=
bors.KNeighborsRegressor" title=3D"sklearn.neighbors.KNeighborsRegressor"><=
code class=3D"xref py py-obj docutils literal notranslate"><span class=3D"p=
re">KNeighborsRegressor</span></code></a></dt><dd><p>Regression based on k-=
nearest neighbors.</p>
</dd>
<dt><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.neighbors.RadiusNeighborsRegressor.html#sklearn.=
neighbors.RadiusNeighborsRegressor" title=3D"sklearn.neighbors.RadiusNeighb=
orsRegressor"><code class=3D"xref py py-obj docutils literal notranslate"><=
span class=3D"pre">RadiusNeighborsRegressor</span></code></a></dt><dd><p>Re=
gression based on neighbors within a fixed radius.</p>
</dd>
<dt><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.neighbors.NearestNeighbors.html#sklearn.neighbor=
s.NearestNeighbors" title=3D"sklearn.neighbors.NearestNeighbors"><code clas=
s=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">Neare=
stNeighbors</span></code></a></dt><dd><p>Unsupervised learner for implement=
ing neighbor searches.</p>
</dd>
</dl>
</div>
<p class=3D"rubric">Notes</p>
<p>See <a class=3D"reference internal" href=3D"https://scikit-learn.org/sta=
ble/modules/neighbors.html#neighbors"><span class=3D"std std-ref">Nearest N=
eighbors</span></a> in the online documentation
for a discussion of the choice of <code class=3D"docutils literal notransla=
te"><span class=3D"pre">algorithm</span></code> and <code class=3D"docutils=
 literal notranslate"><span class=3D"pre">leaf_size</span></code>.</p>
<div class=3D"admonition warning">
<p class=3D"admonition-title">Warning</p>
<p>Regarding the Nearest Neighbors algorithms, if it is found that two
neighbors, neighbor <code class=3D"docutils literal notranslate"><span clas=
s=3D"pre">k+1</span></code> and <code class=3D"docutils literal notranslate=
"><span class=3D"pre">k</span></code>, have identical distances
but different labels, the results will depend on the ordering of the
training data.</p>
</div>
<p><a class=3D"reference external" href=3D"https://en.wikipedia.org/wiki/K-=
nearest_neighbor_algorithm">https://en.wikipedia.org/wiki/K-nearest_neighbo=
r_algorithm</a></p>
<p class=3D"rubric">Examples</p>
<div class=3D"doctest highlight-default notranslate" style=3D"position: rel=
ative;"><div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide p=
rompts and outputs">&gt;&gt;&gt;</span><pre><span></span><span class=3D"gp"=
>&gt;&gt;&gt; </span><span class=3D"n">X</span> <span class=3D"o">=3D</span=
> <span class=3D"p">[[</span><span class=3D"mi">0</span><span class=3D"p">]=
,</span> <span class=3D"p">[</span><span class=3D"mi">1</span><span class=
=3D"p">],</span> <span class=3D"p">[</span><span class=3D"mi">2</span><span=
 class=3D"p">],</span> <span class=3D"p">[</span><span class=3D"mi">3</span=
><span class=3D"p">]]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">y</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"p">[</span><span class=3D"mi">0</span><s=
pan class=3D"p">,</span> <span class=3D"mi">0</span><span class=3D"p">,</sp=
an> <span class=3D"mi">1</span><span class=3D"p">,</span> <span class=3D"mi=
">1</span><span class=3D"p">]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"kn">from</span> <span=
 class=3D"nn">sklearn.neighbors</span> <span class=3D"kn">import</span> <sp=
an class=3D"n">KNeighborsClassifier</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">neigh</span> <span=
 class=3D"o">=3D</span> <span class=3D"n">KNeighborsClassifier</span><span =
class=3D"p">(</span><span class=3D"n">n_neighbors</span><span class=3D"o">=
=3D</span><span class=3D"mi">3</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">neigh</span><span =
class=3D"o">.</span><span class=3D"n">fit</span><span class=3D"p">(</span><=
span class=3D"n">X</span><span class=3D"p">,</span> <span class=3D"n">y</sp=
an><span class=3D"p">)</span>
<span class=3D"go">KNeighborsClassifier(...)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">print</span><span=
 class=3D"p">(</span><span class=3D"n">neigh</span><span class=3D"o">.</spa=
n><span class=3D"n">predict</span><span class=3D"p">([[</span><span class=
=3D"mf">1.1</span><span class=3D"p">]]))</span>
<span class=3D"go">[0]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">print</span><span=
 class=3D"p">(</span><span class=3D"n">neigh</span><span class=3D"o">.</spa=
n><span class=3D"n">predict_proba</span><span class=3D"p">([[</span><span c=
lass=3D"mf">0.9</span><span class=3D"p">]]))</span>
<span class=3D"go">[[0.666... 0.333...]]</span>
</pre></div>
</div>
<p class=3D"rubric">Methods</p>
<table class=3D"longtable docutils align-default">
<colgroup>
<col style=3D"width: 10%">
<col style=3D"width: 90%">
</colgroup>
<tbody>
<tr class=3D"row-odd"><td><p><a class=3D"reference internal" href=3D"https:=
//scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsCla=
ssifier.html#sklearn.neighbors.KNeighborsClassifier.fit" title=3D"sklearn.n=
eighbors.KNeighborsClassifier.fit"><code class=3D"xref py py-obj docutils l=
iteral notranslate"><span class=3D"pre">fit</span></code></a>(X,&nbsp;y)</p=
></td>
<td><p>Fit the k-nearest neighbors classifier from the training dataset.</p=
></td>
</tr>
<tr class=3D"row-even"><td><p><a class=3D"reference internal" href=3D"https=
://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsCl=
assifier.html#sklearn.neighbors.KNeighborsClassifier.get_params" title=3D"s=
klearn.neighbors.KNeighborsClassifier.get_params"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">get_params</span></c=
ode></a>([deep])</p></td>
<td><p>Get parameters for this estimator.</p></td>
</tr>
<tr class=3D"row-odd"><td><p><a class=3D"reference internal" href=3D"https:=
//scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsCla=
ssifier.html#sklearn.neighbors.KNeighborsClassifier.kneighbors" title=3D"sk=
learn.neighbors.KNeighborsClassifier.kneighbors"><code class=3D"xref py py-=
obj docutils literal notranslate"><span class=3D"pre">kneighbors</span></co=
de></a>([X,&nbsp;n_neighbors,&nbsp;return_distance])</p></td>
<td><p>Find the K-neighbors of a point.</p></td>
</tr>
<tr class=3D"row-even"><td><p><a class=3D"reference internal" href=3D"https=
://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsCl=
assifier.html#sklearn.neighbors.KNeighborsClassifier.kneighbors_graph" titl=
e=3D"sklearn.neighbors.KNeighborsClassifier.kneighbors_graph"><code class=
=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">kneigh=
bors_graph</span></code></a>([X,&nbsp;n_neighbors,&nbsp;mode])</p></td>
<td><p>Compute the (weighted) graph of k-Neighbors for points in X.</p></td=
>
</tr>
<tr class=3D"row-odd"><td><p><a class=3D"reference internal" href=3D"https:=
//scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsCla=
ssifier.html#sklearn.neighbors.KNeighborsClassifier.predict" title=3D"sklea=
rn.neighbors.KNeighborsClassifier.predict"><code class=3D"xref py py-obj do=
cutils literal notranslate"><span class=3D"pre">predict</span></code></a>(X=
)</p></td>
<td><p>Predict the class labels for the provided data.</p></td>
</tr>
<tr class=3D"row-even"><td><p><a class=3D"reference internal" href=3D"https=
://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsCl=
assifier.html#sklearn.neighbors.KNeighborsClassifier.predict_proba" title=
=3D"sklearn.neighbors.KNeighborsClassifier.predict_proba"><code class=3D"xr=
ef py py-obj docutils literal notranslate"><span class=3D"pre">predict_prob=
a</span></code></a>(X)</p></td>
<td><p>Return probability estimates for the test data X.</p></td>
</tr>
<tr class=3D"row-odd"><td><p><a class=3D"reference internal" href=3D"https:=
//scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsCla=
ssifier.html#sklearn.neighbors.KNeighborsClassifier.score" title=3D"sklearn=
.neighbors.KNeighborsClassifier.score"><code class=3D"xref py py-obj docuti=
ls literal notranslate"><span class=3D"pre">score</span></code></a>(X,&nbsp=
;y[,&nbsp;sample_weight])</p></td>
<td><p>Return the mean accuracy on the given test data and labels.</p></td>
</tr>
<tr class=3D"row-even"><td><p><a class=3D"reference internal" href=3D"https=
://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsCl=
assifier.html#sklearn.neighbors.KNeighborsClassifier.set_params" title=3D"s=
klearn.neighbors.KNeighborsClassifier.set_params"><code class=3D"xref py py=
-obj docutils literal notranslate"><span class=3D"pre">set_params</span></c=
ode></a>(**params)</p></td>
<td><p>Set the parameters of this estimator.</p></td>
</tr>
</tbody>
</table>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.neighbors.KNeighborsClassifie=
r.fit">
<span class=3D"sig-name descname"><span class=3D"pre">fit</span></span><spa=
n class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"><sp=
an class=3D"pre">X</span></span></em>, <em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">y</span></span></em><span class=3D"sig-paren">)<=
/span><a class=3D"reference external" href=3D"https://github.com/scikit-lea=
rn/scikit-learn/blob/7e1e6d09b/sklearn/neighbors/_classification.py#L178"><=
span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a>=
<a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/gen=
erated/sklearn.neighbors.KNeighborsClassifier.html#sklearn.neighbors.KNeigh=
borsClassifier.fit" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Fit the k-nearest neighbors classifier from the training dataset.</p=
>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">{array-like, sparse matrix=
} of shape (n_samples, n_features) or                 (n_samples, n_samples=
) if metric=3D=E2=80=99precomputed=E2=80=99</span></dt><dd><p>Training data=
.</p>
</dd>
<dt><strong>y</strong><span class=3D"classifier">{array-like, sparse matrix=
} of shape (n_samples,) or                 (n_samples, n_outputs)</span></d=
t><dd><p>Target values.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>self</strong><span class=3D"classifier">KNeighborsClassifier</s=
pan></dt><dd><p>The fitted k-nearest neighbors classifier.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.neighbors.KNeighborsClassifie=
r.get_params">
<span class=3D"sig-name descname"><span class=3D"pre">get_params</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"n"><span class=3D"pre">deep</span></span><span class=3D"o"><span class=3D"=
pre">=3D</span></span><span class=3D"default_value"><span class=3D"pre">Tru=
e</span></span></em><span class=3D"sig-paren">)</span><a class=3D"reference=
 external" href=3D"https://github.com/scikit-learn/scikit-learn/blob/7e1e6d=
09b/sklearn/base.py#L193"><span class=3D"viewcode-link"><span class=3D"pre"=
>[source]</span></span></a><a class=3D"headerlink" href=3D"https://scikit-l=
earn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.ht=
ml#sklearn.neighbors.KNeighborsClassifier.get_params" title=3D"Permalink to=
 this definition">=C2=B6</a></dt>
<dd><p>Get parameters for this estimator.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>deep</strong><span class=3D"classifier">bool, default=3DTrue</s=
pan></dt><dd><p>If True, will return the parameters for this estimator and
contained subobjects that are estimators.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>params</strong><span class=3D"classifier">dict</span></dt><dd><=
p>Parameter names mapped to their values.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.neighbors.KNeighborsClassifie=
r.kneighbors">
<span class=3D"sig-name descname"><span class=3D"pre">kneighbors</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"n"><span class=3D"pre">X</span></span><span class=3D"o"><span class=3D"pre=
">=3D</span></span><span class=3D"default_value"><span class=3D"pre">None</=
span></span></em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D=
"pre">n_neighbors</span></span><span class=3D"o"><span class=3D"pre">=3D</s=
pan></span><span class=3D"default_value"><span class=3D"pre">None</span></s=
pan></em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">re=
turn_distance</span></span><span class=3D"o"><span class=3D"pre">=3D</span>=
</span><span class=3D"default_value"><span class=3D"pre">True</span></span>=
</em><span class=3D"sig-paren">)</span><a class=3D"reference external" href=
=3D"https://github.com/scikit-learn/scikit-learn/blob/7e1e6d09b/sklearn/nei=
ghbors/_base.py#L647"><span class=3D"viewcode-link"><span class=3D"pre">[so=
urce]</span></span></a><a class=3D"headerlink" href=3D"https://scikit-learn=
.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html#s=
klearn.neighbors.KNeighborsClassifier.kneighbors" title=3D"Permalink to thi=
s definition">=C2=B6</a></dt>
<dd><p>Find the K-neighbors of a point.</p>
<p>Returns indices of and distances to the neighbors of each point.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">array-like, shape (n_queri=
es, n_features),             or (n_queries, n_indexed) if metric =3D=3D =E2=
=80=98precomputed=E2=80=99,                 default=3DNone</span></dt><dd><=
p>The query point or points.
If not provided, neighbors of each indexed point are returned.
In this case, the query point is not considered its own neighbor.</p>
</dd>
<dt><strong>n_neighbors</strong><span class=3D"classifier">int, default=3DN=
one</span></dt><dd><p>Number of neighbors required for each sample. The def=
ault is the
value passed to the constructor.</p>
</dd>
<dt><strong>return_distance</strong><span class=3D"classifier">bool, defaul=
t=3DTrue</span></dt><dd><p>Whether or not to return the distances.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>neigh_dist</strong><span class=3D"classifier">ndarray of shape =
(n_queries, n_neighbors)</span></dt><dd><p>Array representing the lengths t=
o points, only present if
return_distance=3DTrue.</p>
</dd>
<dt><strong>neigh_ind</strong><span class=3D"classifier">ndarray of shape (=
n_queries, n_neighbors)</span></dt><dd><p>Indices of the nearest points in =
the population matrix.</p>
</dd>
</dl>
</dd>
</dl>
<p class=3D"rubric">Examples</p>
<p>In the following example, we construct a NearestNeighbors
class from an array representing our data set and ask who=E2=80=99s
the closest point to [1,1,1]</p>
<div class=3D"doctest highlight-default notranslate" style=3D"position: rel=
ative;"><div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide p=
rompts and outputs">&gt;&gt;&gt;</span><pre><span></span><span class=3D"gp"=
>&gt;&gt;&gt; </span><span class=3D"n">samples</span> <span class=3D"o">=3D=
</span> <span class=3D"p">[[</span><span class=3D"mf">0.</span><span class=
=3D"p">,</span> <span class=3D"mf">0.</span><span class=3D"p">,</span> <spa=
n class=3D"mf">0.</span><span class=3D"p">],</span> <span class=3D"p">[</sp=
an><span class=3D"mf">0.</span><span class=3D"p">,</span> <span class=3D"mf=
">.5</span><span class=3D"p">,</span> <span class=3D"mf">0.</span><span cla=
ss=3D"p">],</span> <span class=3D"p">[</span><span class=3D"mf">1.</span><s=
pan class=3D"p">,</span> <span class=3D"mf">1.</span><span class=3D"p">,</s=
pan> <span class=3D"mf">.5</span><span class=3D"p">]]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"kn">from</span> <span=
 class=3D"nn">sklearn.neighbors</span> <span class=3D"kn">import</span> <sp=
an class=3D"n">NearestNeighbors</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">neigh</span> <span=
 class=3D"o">=3D</span> <span class=3D"n">NearestNeighbors</span><span clas=
s=3D"p">(</span><span class=3D"n">n_neighbors</span><span class=3D"o">=3D</=
span><span class=3D"mi">1</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">neigh</span><span =
class=3D"o">.</span><span class=3D"n">fit</span><span class=3D"p">(</span><=
span class=3D"n">samples</span><span class=3D"p">)</span>
<span class=3D"go">NearestNeighbors(n_neighbors=3D1)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"nb">print</span><span=
 class=3D"p">(</span><span class=3D"n">neigh</span><span class=3D"o">.</spa=
n><span class=3D"n">kneighbors</span><span class=3D"p">([[</span><span clas=
s=3D"mf">1.</span><span class=3D"p">,</span> <span class=3D"mf">1.</span><s=
pan class=3D"p">,</span> <span class=3D"mf">1.</span><span class=3D"p">]]))=
</span>
<span class=3D"go">(array([[0.5]]), array([[2]]))</span>
</pre></div>
</div>
<p>As you can see, it returns [[0.5]], and [[2]], which means that the
element is at distance 0.5 and is the third element of samples
(indexes start at 0). You can also query for multiple points:</p>
<div class=3D"doctest highlight-default notranslate" style=3D"position: rel=
ative;"><div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide p=
rompts and outputs">&gt;&gt;&gt;</span><pre><span></span><span class=3D"gp"=
>&gt;&gt;&gt; </span><span class=3D"n">X</span> <span class=3D"o">=3D</span=
> <span class=3D"p">[[</span><span class=3D"mf">0.</span><span class=3D"p">=
,</span> <span class=3D"mf">1.</span><span class=3D"p">,</span> <span class=
=3D"mf">0.</span><span class=3D"p">],</span> <span class=3D"p">[</span><spa=
n class=3D"mf">1.</span><span class=3D"p">,</span> <span class=3D"mf">0.</s=
pan><span class=3D"p">,</span> <span class=3D"mf">1.</span><span class=3D"p=
">]]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">neigh</span><span =
class=3D"o">.</span><span class=3D"n">kneighbors</span><span class=3D"p">(<=
/span><span class=3D"n">X</span><span class=3D"p">,</span> <span class=3D"n=
">return_distance</span><span class=3D"o">=3D</span><span class=3D"kc">Fals=
e</span><span class=3D"p">)</span>
<span class=3D"go">array([[1],</span>
<span class=3D"go">       [2]]...)</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.neighbors.KNeighborsClassifie=
r.kneighbors_graph">
<span class=3D"sig-name descname"><span class=3D"pre">kneighbors_graph</spa=
n></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span cl=
ass=3D"n"><span class=3D"pre">X</span></span><span class=3D"o"><span class=
=3D"pre">=3D</span></span><span class=3D"default_value"><span class=3D"pre"=
>None</span></span></em>, <em class=3D"sig-param"><span class=3D"n"><span c=
lass=3D"pre">n_neighbors</span></span><span class=3D"o"><span class=3D"pre"=
>=3D</span></span><span class=3D"default_value"><span class=3D"pre">None</s=
pan></span></em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"=
pre">mode</span></span><span class=3D"o"><span class=3D"pre">=3D</span></sp=
an><span class=3D"default_value"><span class=3D"pre">'connectivity'</span><=
/span></em><span class=3D"sig-paren">)</span><a class=3D"reference external=
" href=3D"https://github.com/scikit-learn/scikit-learn/blob/7e1e6d09b/sklea=
rn/neighbors/_base.py#L822"><span class=3D"viewcode-link"><span class=3D"pr=
e">[source]</span></span></a><a class=3D"headerlink" href=3D"https://scikit=
-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.=
html#sklearn.neighbors.KNeighborsClassifier.kneighbors_graph" title=3D"Perm=
alink to this definition">=C2=B6</a></dt>
<dd><p>Compute the (weighted) graph of k-Neighbors for points in X.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">array-like of shape (n_que=
ries, n_features),                 or (n_queries, n_indexed) if metric =3D=
=3D =E2=80=98precomputed=E2=80=99,                 default=3DNone</span></d=
t><dd><p>The query point or points.
If not provided, neighbors of each indexed point are returned.
In this case, the query point is not considered its own neighbor.
For <code class=3D"docutils literal notranslate"><span class=3D"pre">metric=
=3D'precomputed'</span></code> the shape should be
(n_queries, n_indexed). Otherwise the shape should be
(n_queries, n_features).</p>
</dd>
<dt><strong>n_neighbors</strong><span class=3D"classifier">int, default=3DN=
one</span></dt><dd><p>Number of neighbors for each sample. The default is t=
he value
passed to the constructor.</p>
</dd>
<dt><strong>mode</strong><span class=3D"classifier">{=E2=80=98connectivity=
=E2=80=99, =E2=80=98distance=E2=80=99}, default=3D=E2=80=99connectivity=E2=
=80=99</span></dt><dd><p>Type of returned matrix: =E2=80=98connectivity=E2=
=80=99 will return the
connectivity matrix with ones and zeros, in =E2=80=98distance=E2=80=99 the
edges are distances between points, type of distance
depends on the selected metric parameter in
NearestNeighbors class.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>A</strong><span class=3D"classifier">sparse-matrix of shape (n_=
queries, n_samples_fit)</span></dt><dd><p><code class=3D"docutils literal n=
otranslate"><span class=3D"pre">n_samples_fit</span></code> is the number o=
f samples in the fitted data.
<code class=3D"docutils literal notranslate"><span class=3D"pre">A[i,</span=
> <span class=3D"pre">j]</span></code> gives the weight of the edge connect=
ing <code class=3D"docutils literal notranslate"><span class=3D"pre">i</spa=
n></code> to <code class=3D"docutils literal notranslate"><span class=3D"pr=
e">j</span></code>.
The matrix is of CSR format.</p>
</dd>
</dl>
</dd>
</dl>
<div class=3D"admonition seealso">
<p class=3D"admonition-title">See also</p>
<dl class=3D"simple">
<dt><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.neighbors.NearestNeighbors.html#sklearn.neighbor=
s.NearestNeighbors.radius_neighbors_graph" title=3D"sklearn.neighbors.Neare=
stNeighbors.radius_neighbors_graph"><code class=3D"xref py py-obj docutils =
literal notranslate"><span class=3D"pre">NearestNeighbors.radius_neighbors_=
graph</span></code></a></dt><dd><p>Compute the (weighted) graph of Neighbor=
s for points in X.</p>
</dd>
</dl>
</div>
<p class=3D"rubric">Examples</p>
<div class=3D"doctest highlight-default notranslate" style=3D"position: rel=
ative;"><div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide p=
rompts and outputs">&gt;&gt;&gt;</span><pre><span></span><span class=3D"gp"=
>&gt;&gt;&gt; </span><span class=3D"n">X</span> <span class=3D"o">=3D</span=
> <span class=3D"p">[[</span><span class=3D"mi">0</span><span class=3D"p">]=
,</span> <span class=3D"p">[</span><span class=3D"mi">3</span><span class=
=3D"p">],</span> <span class=3D"p">[</span><span class=3D"mi">1</span><span=
 class=3D"p">]]</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"kn">from</span> <span=
 class=3D"nn">sklearn.neighbors</span> <span class=3D"kn">import</span> <sp=
an class=3D"n">NearestNeighbors</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">neigh</span> <span=
 class=3D"o">=3D</span> <span class=3D"n">NearestNeighbors</span><span clas=
s=3D"p">(</span><span class=3D"n">n_neighbors</span><span class=3D"o">=3D</=
span><span class=3D"mi">2</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">neigh</span><span =
class=3D"o">.</span><span class=3D"n">fit</span><span class=3D"p">(</span><=
span class=3D"n">X</span><span class=3D"p">)</span>
<span class=3D"go">NearestNeighbors(n_neighbors=3D2)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">A</span> <span cla=
ss=3D"o">=3D</span> <span class=3D"n">neigh</span><span class=3D"o">.</span=
><span class=3D"n">kneighbors_graph</span><span class=3D"p">(</span><span c=
lass=3D"n">X</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">A</span><span clas=
s=3D"o">.</span><span class=3D"n">toarray</span><span class=3D"p">()</span>
<span class=3D"go">array([[1., 0., 1.],</span>
<span class=3D"go">       [0., 1., 1.],</span>
<span class=3D"go">       [1., 0., 1.]])</span>
</pre></div>
</div>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.neighbors.KNeighborsClassifie=
r.predict">
<span class=3D"sig-name descname"><span class=3D"pre">predict</span></span>=
<span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"=
><span class=3D"pre">X</span></span></em><span class=3D"sig-paren">)</span>=
<a class=3D"reference external" href=3D"https://github.com/scikit-learn/sci=
kit-learn/blob/7e1e6d09b/sklearn/neighbors/_classification.py#L200"><span c=
lass=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a cla=
ss=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/generated=
/sklearn.neighbors.KNeighborsClassifier.html#sklearn.neighbors.KNeighborsCl=
assifier.predict" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Predict the class labels for the provided data.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">array-like of shape (n_que=
ries, n_features),                 or (n_queries, n_indexed) if metric =3D=
=3D =E2=80=98precomputed=E2=80=99</span></dt><dd><p>Test samples.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>y</strong><span class=3D"classifier">ndarray of shape (n_querie=
s,) or (n_queries, n_outputs)</span></dt><dd><p>Class labels for each data =
sample.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.neighbors.KNeighborsClassifie=
r.predict_proba">
<span class=3D"sig-name descname"><span class=3D"pre">predict_proba</span><=
/span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">X</span></span></em><span class=3D"sig-paren">)<=
/span><a class=3D"reference external" href=3D"https://github.com/scikit-lea=
rn/scikit-learn/blob/7e1e6d09b/sklearn/neighbors/_classification.py#L240"><=
span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a>=
<a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/gen=
erated/sklearn.neighbors.KNeighborsClassifier.html#sklearn.neighbors.KNeigh=
borsClassifier.predict_proba" title=3D"Permalink to this definition">=C2=B6=
</a></dt>
<dd><p>Return probability estimates for the test data X.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">array-like of shape (n_que=
ries, n_features),                 or (n_queries, n_indexed) if metric =3D=
=3D =E2=80=98precomputed=E2=80=99</span></dt><dd><p>Test samples.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>p</strong><span class=3D"classifier">ndarray of shape (n_querie=
s, n_classes), or a list of n_outputs                 of such arrays if n_o=
utputs &gt; 1.</span></dt><dd><p>The class probabilities of the input sampl=
es. Classes are ordered
by lexicographic order.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.neighbors.KNeighborsClassifie=
r.score">
<span class=3D"sig-name descname"><span class=3D"pre">score</span></span><s=
pan class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"><=
span class=3D"pre">X</span></span></em>, <em class=3D"sig-param"><span clas=
s=3D"n"><span class=3D"pre">y</span></span></em>, <em class=3D"sig-param"><=
span class=3D"n"><span class=3D"pre">sample_weight</span></span><span class=
=3D"o"><span class=3D"pre">=3D</span></span><span class=3D"default_value"><=
span class=3D"pre">None</span></span></em><span class=3D"sig-paren">)</span=
><a class=3D"reference external" href=3D"https://github.com/scikit-learn/sc=
ikit-learn/blob/7e1e6d09b/sklearn/base.py#L625"><span class=3D"viewcode-lin=
k"><span class=3D"pre">[source]</span></span></a><a class=3D"headerlink" hr=
ef=3D"https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.K=
NeighborsClassifier.html#sklearn.neighbors.KNeighborsClassifier.score" titl=
e=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Return the mean accuracy on the given test data and labels.</p>
<p>In multi-label classification, this is the subset accuracy
which is a harsh metric since you require for each sample that
each label set be correctly predicted.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">array-like of shape (n_sam=
ples, n_features)</span></dt><dd><p>Test samples.</p>
</dd>
<dt><strong>y</strong><span class=3D"classifier">array-like of shape (n_sam=
ples,) or (n_samples, n_outputs)</span></dt><dd><p>True labels for <code cl=
ass=3D"docutils literal notranslate"><span class=3D"pre">X</span></code>.</=
p>
</dd>
<dt><strong>sample_weight</strong><span class=3D"classifier">array-like of =
shape (n_samples,), default=3DNone</span></dt><dd><p>Sample weights.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>score</strong><span class=3D"classifier">float</span></dt><dd><=
p>Mean accuracy of <code class=3D"docutils literal notranslate"><span class=
=3D"pre">self.predict(X)</span></code> wrt. <code class=3D"docutils literal=
 notranslate"><span class=3D"pre">y</span></code>.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.neighbors.KNeighborsClassifie=
r.set_params">
<span class=3D"sig-name descname"><span class=3D"pre">set_params</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"o"><span class=3D"pre">**</span></span><span class=3D"n"><span class=3D"pr=
e">params</span></span></em><span class=3D"sig-paren">)</span><a class=3D"r=
eference external" href=3D"https://github.com/scikit-learn/scikit-learn/blo=
b/7e1e6d09b/sklearn/base.py#L217"><span class=3D"viewcode-link"><span class=
=3D"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"https://=
scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClass=
ifier.html#sklearn.neighbors.KNeighborsClassifier.set_params" title=3D"Perm=
alink to this definition">=C2=B6</a></dt>
<dd><p>Set the parameters of this estimator.</p>
<p>The method works on simple estimators as well as on nested objects
(such as <a class=3D"reference internal" href=3D"https://scikit-learn.org/s=
table/modules/generated/sklearn.pipeline.Pipeline.html#sklearn.pipeline.Pip=
eline" title=3D"sklearn.pipeline.Pipeline"><code class=3D"xref py py-class =
docutils literal notranslate"><span class=3D"pre">Pipeline</span></code></a=
>). The latter have
parameters of the form <code class=3D"docutils literal notranslate"><span c=
lass=3D"pre">&lt;component&gt;__&lt;parameter&gt;</span></code> so that it=
=E2=80=99s
possible to update each component of a nested object.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>**params</strong><span class=3D"classifier">dict</span></dt><dd=
><p>Estimator parameters.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>self</strong><span class=3D"classifier">estimator instance</spa=
n></dt><dd><p>Estimator instance.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

</dd></dl>

<section id=3D"examples-using-sklearn-neighbors-kneighborsclassifier">
<h2>Examples using <code class=3D"docutils literal notranslate"><span class=
=3D"pre">sklearn.neighbors.KNeighborsClassifier</span></code><a class=3D"he=
aderlink" href=3D"https://scikit-learn.org/stable/modules/generated/sklearn=
.neighbors.KNeighborsClassifier.html#examples-using-sklearn-neighbors-kneig=
hborsclassifier" title=3D"Permalink to this headline">=C2=B6</a></h2>
<div class=3D"sphx-glr-thumbcontainer" tooltip=3D"We are pleased to announc=
e the release of scikit-learn 0.24! Many bug fixes and improvements we...">=
<figure class=3D"align-default" id=3D"id1">
<img alt=3D"Release Highlights for scikit-learn 0.24" src=3D"https://scikit=
-learn.org/stable/_images/sphx_glr_plot_release_highlights_0_24_0_thumb.png=
">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/release_highlights/plot_release_=
highlights_0_24_0.html#sphx-glr-auto-examples-release-highlights-plot-relea=
se-highlights-0-24-0-py"><span class=3D"std std-ref">Release Highlights for=
 scikit-learn 0.24</span></a></span><a class=3D"headerlink" href=3D"https:/=
/scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClas=
sifier.html#id1" title=3D"Permalink to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"A comparison of a s=
everal classifiers in scikit-learn on synthetic datasets. The point of this=
 ..."><figure class=3D"align-default" id=3D"id2">
<img alt=3D"Classifier comparison" src=3D"https://scikit-learn.org/stable/_=
images/sphx_glr_plot_classifier_comparison_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/classification/plot_classifier_c=
omparison.html#sphx-glr-auto-examples-classification-plot-classifier-compar=
ison-py"><span class=3D"std std-ref">Classifier comparison</span></a></span=
><a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/ge=
nerated/sklearn.neighbors.KNeighborsClassifier.html#id2" title=3D"Permalink=
 to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"Plot the decision b=
oundaries of a VotingClassifier for two features of the Iris dataset."><fig=
ure class=3D"align-default" id=3D"id3">
<img alt=3D"Plot the decision boundaries of a VotingClassifier" src=3D"http=
s://scikit-learn.org/stable/_images/sphx_glr_plot_voting_decision_regions_t=
humb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/ensemble/plot_voting_decision_re=
gions.html#sphx-glr-auto-examples-ensemble-plot-voting-decision-regions-py"=
><span class=3D"std std-ref">Plot the decision boundaries of a VotingClassi=
fier</span></a></span><a class=3D"headerlink" href=3D"https://scikit-learn.=
org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html#id=
3" title=3D"Permalink to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"Sample usage of Nea=
rest Neighbors classification. It will plot the decision boundaries for eac=
h..."><figure class=3D"align-default" id=3D"id4">
<img alt=3D"Nearest Neighbors Classification" src=3D"https://scikit-learn.o=
rg/stable/_images/sphx_glr_plot_classification_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/neighbors/plot_classification.ht=
ml#sphx-glr-auto-examples-neighbors-plot-classification-py"><span class=3D"=
std std-ref">Nearest Neighbors Classification</span></a></span><a class=3D"=
headerlink" href=3D"https://scikit-learn.org/stable/modules/generated/sklea=
rn.neighbors.KNeighborsClassifier.html#id4" title=3D"Permalink to this imag=
e">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"This examples demon=
strates how to precompute the k nearest neighbors before using them in KNei=
g..."><figure class=3D"align-default" id=3D"id5">
<img alt=3D"Caching nearest neighbors" src=3D"https://scikit-learn.org/stab=
le/_images/sphx_glr_plot_caching_nearest_neighbors_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/neighbors/plot_caching_nearest_n=
eighbors.html#sphx-glr-auto-examples-neighbors-plot-caching-nearest-neighbo=
rs-py"><span class=3D"std std-ref">Caching nearest neighbors</span></a></sp=
an><a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/=
generated/sklearn.neighbors.KNeighborsClassifier.html#id5" title=3D"Permali=
nk to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"Sample usage of Nei=
ghborhood Components Analysis for dimensionality reduction."><figure class=
=3D"align-default" id=3D"id6">
<img alt=3D"Dimensionality Reduction with Neighborhood Components Analysis"=
 src=3D"https://scikit-learn.org/stable/_images/sphx_glr_plot_nca_dim_reduc=
tion_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/neighbors/plot_nca_dim_reduction=
.html#sphx-glr-auto-examples-neighbors-plot-nca-dim-reduction-py"><span cla=
ss=3D"std std-ref">Dimensionality Reduction with Neighborhood Components An=
alysis</span></a></span><a class=3D"headerlink" href=3D"https://scikit-lear=
n.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html#=
id6" title=3D"Permalink to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"An example comparin=
g nearest neighbors classification with and without Neighborhood Components=
 ..."><figure class=3D"align-default" id=3D"id7">
<img alt=3D"Comparing Nearest Neighbors with and without Neighborhood Compo=
nents Analysis" src=3D"https://scikit-learn.org/stable/_images/sphx_glr_plo=
t_nca_classification_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/neighbors/plot_nca_classificatio=
n.html#sphx-glr-auto-examples-neighbors-plot-nca-classification-py"><span c=
lass=3D"std std-ref">Comparing Nearest Neighbors with and without Neighborh=
ood Components Analysis</span></a></span><a class=3D"headerlink" href=3D"ht=
tps://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighbor=
sClassifier.html#id7" title=3D"Permalink to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"A tutorial exercise=
 regarding the use of classification techniques on the Digits dataset."><fi=
gure class=3D"align-default" id=3D"id8">
<img alt=3D"Digits Classification Exercise" src=3D"https://scikit-learn.org=
/stable/_images/sphx_glr_plot_digits_classification_exercise_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/exercises/plot_digits_classifica=
tion_exercise.html#sphx-glr-auto-examples-exercises-plot-digits-classificat=
ion-exercise-py"><span class=3D"std std-ref">Digits Classification Exercise=
</span></a></span><a class=3D"headerlink" href=3D"https://scikit-learn.org/=
stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html#id8" t=
itle=3D"Permalink to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"This is an example =
showing how scikit-learn can be used to classify documents by topics using =
a..."><figure class=3D"align-default" id=3D"id9">
<img alt=3D"Classification of text documents using sparse features" src=3D"=
https://scikit-learn.org/stable/_images/sphx_glr_plot_document_classificati=
on_20newsgroups_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/text/plot_document_classificatio=
n_20newsgroups.html#sphx-glr-auto-examples-text-plot-document-classificatio=
n-20newsgroups-py"><span class=3D"std std-ref">Classification of text docum=
ents using sparse features</span></a></span><a class=3D"headerlink" href=3D=
"https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeigh=
borsClassifier.html#id9" title=3D"Permalink to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"clearer"></div></section>
</section>


      </div>
    <div class=3D"container">
      <footer class=3D"sk-content-footer">
            =C2=A9 2007 - 2021, scikit-learn developers (BSD License).
          <a href=3D"https://scikit-learn.org/stable/_sources/modules/gener=
ated/sklearn.neighbors.KNeighborsClassifier.rst.txt" rel=3D"nofollow">Show =
this page source</a>
      </footer>
    </div>
  </div>
</div>







   =20

   =20
   =20

</body></html>
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-0987b41b-4fbe-4eb2-a7cf-06d1a434a2d3@mhtml.blink

@charset "utf-8";

.CtxtMenu_InfoClose { top: 0.2em; right: 0.2em; }

.CtxtMenu_InfoContent { overflow: auto; text-align: left; font-size: 80%; p=
adding: 0.4em 0.6em; border: 1px inset; margin: 1em 0px; max-height: 20em; =
max-width: 30em; background-color: rgb(238, 238, 238); white-space: normal;=
 }

.CtxtMenu_Info.CtxtMenu_MousePost { outline: none; }

.CtxtMenu_Info { position: fixed; left: 50%; width: auto; text-align: cente=
r; border: 3px outset; padding: 1em 2em; background-color: rgb(221, 221, 22=
1); color: black; cursor: default; font-family: message-box; font-size: 120=
%; font-style: normal; text-indent: 0px; text-transform: none; line-height:=
 normal; letter-spacing: normal; word-spacing: normal; overflow-wrap: norma=
l; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; box=
-shadow: rgb(128, 128, 128) 0px 10px 20px; }
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-32ecf887-8332-4f35-af29-41507b5a430c@mhtml.blink

@charset "utf-8";

.CtxtMenu_MenuClose { position: absolute; cursor: pointer; display: inline-=
block; border: 2px solid rgb(170, 170, 170); border-radius: 18px; font-fami=
ly: "Courier New", Courier; font-size: 24px; color: rgb(240, 240, 240); }

.CtxtMenu_MenuClose span { display: block; background-color: rgb(170, 170, =
170); border: 1.5px solid; border-radius: 18px; line-height: 0; padding: 8p=
x 0px 6px; }

.CtxtMenu_MenuClose:hover { color: white !important; border: 2px solid rgb(=
204, 204, 204) !important; }

.CtxtMenu_MenuClose:hover span { background-color: rgb(204, 204, 204) !impo=
rtant; }

.CtxtMenu_MenuClose:hover:focus { outline: none; }
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-11ed4ec3-6547-43a1-9f36-e4264d9bf765@mhtml.blink

@charset "utf-8";

.CtxtMenu_Menu { position: absolute; background-color: white; color: black;=
 width: auto; padding: 5px 0px; border: 1px solid rgb(204, 204, 204); margi=
n: 0px; cursor: default; font-style: ; font-variant: normal; font-weight: ;=
 font-stretch: ; font-size: ; font-family: ; text-align: left; text-indent:=
 0px; text-transform: none; line-height: normal; letter-spacing: normal; wo=
rd-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none=
; z-index: 201; border-radius: 5px; box-shadow: rgb(128, 128, 128) 0px 10px=
 20px; }

.CtxtMenu_MenuItem { padding: 1px 2em; background: transparent; }

.CtxtMenu_MenuArrow { position: absolute; right: 0.5em; padding-top: 0.25em=
; color: rgb(102, 102, 102); font-family: null; font-size: 0.75em; }

.CtxtMenu_MenuActive .CtxtMenu_MenuArrow { color: white; }

.CtxtMenu_MenuArrow.CtxtMenu_RTL { left: 0.5em; right: auto; }

.CtxtMenu_MenuCheck { position: absolute; left: 0.7em; font-family: null; }

.CtxtMenu_MenuCheck.CtxtMenu_RTL { right: 0.7em; left: auto; }

.CtxtMenu_MenuRadioCheck { position: absolute; left: 0.7em; }

.CtxtMenu_MenuRadioCheck.CtxtMenu_RTL { right: 0.7em; left: auto; }

.CtxtMenu_MenuInputBox { padding-left: 1em; right: 0.5em; color: rgb(102, 1=
02, 102); font-family: null; }

.CtxtMenu_MenuInputBox.CtxtMenu_RTL { left: 0.1em; }

.CtxtMenu_MenuComboBox { left: 0.1em; padding-bottom: 0.5em; }

.CtxtMenu_MenuSlider { left: 0.1em; }

.CtxtMenu_SliderValue { position: absolute; right: 0.1em; padding-top: 0.25=
em; color: rgb(51, 51, 51); font-size: 0.75em; }

.CtxtMenu_SliderBar { outline: none; background: rgb(211, 211, 211); }

.CtxtMenu_MenuLabel { padding: 1px 2em 3px 1.33em; font-style: italic; }

.CtxtMenu_MenuRule { border-top: 1px solid rgb(221, 221, 221); margin: 4px =
3px; }

.CtxtMenu_MenuDisabled { color: graytext; }

.CtxtMenu_MenuActive { background-color: rgb(96, 104, 114); color: white; }

.CtxtMenu_MenuDisabled:focus { background-color: rgb(232, 232, 232); }

.CtxtMenu_MenuLabel:focus { background-color: rgb(232, 232, 232); }

.CtxtMenu_ContextMenu:focus { outline: none; }

.CtxtMenu_ContextMenu .CtxtMenu_MenuItem:focus { outline: none; }

.CtxtMenu_SelectionMenu { position: relative; float: left; border-bottom: n=
one; box-shadow: none; border-radius: 0px; }

.CtxtMenu_SelectionItem { padding-right: 1em; }

.CtxtMenu_Selection { right: 40%; width: 50%; }

.CtxtMenu_SelectionBox { padding: 0em; max-height: 20em; max-width: none; b=
ackground-color: rgb(255, 255, 255); }

.CtxtMenu_SelectionDivider { clear: both; border-top: 2px solid rgb(0, 0, 0=
); }

.CtxtMenu_Menu .CtxtMenu_MenuClose { top: -10px; left: -10px; }
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-dee828a7-9fab-4886-9d66-6730f8bc6630@mhtml.blink

@charset "utf-8";

mjx-container[jax=3D"CHTML"] { line-height: 0; }

mjx-container [space=3D"1"] { margin-left: 0.111em; }

mjx-container [space=3D"2"] { margin-left: 0.167em; }

mjx-container [space=3D"3"] { margin-left: 0.222em; }

mjx-container [space=3D"4"] { margin-left: 0.278em; }

mjx-container [space=3D"5"] { margin-left: 0.333em; }

mjx-container [rspace=3D"1"] { margin-right: 0.111em; }

mjx-container [rspace=3D"2"] { margin-right: 0.167em; }

mjx-container [rspace=3D"3"] { margin-right: 0.222em; }

mjx-container [rspace=3D"4"] { margin-right: 0.278em; }

mjx-container [rspace=3D"5"] { margin-right: 0.333em; }

mjx-container [size=3D"s"] { font-size: 70.7%; }

mjx-container [size=3D"ss"] { font-size: 50%; }

mjx-container [size=3D"Tn"] { font-size: 60%; }

mjx-container [size=3D"sm"] { font-size: 85%; }

mjx-container [size=3D"lg"] { font-size: 120%; }

mjx-container [size=3D"Lg"] { font-size: 144%; }

mjx-container [size=3D"LG"] { font-size: 173%; }

mjx-container [size=3D"hg"] { font-size: 207%; }

mjx-container [size=3D"HG"] { font-size: 249%; }

mjx-container [width=3D"full"] { width: 100%; }

mjx-box { display: inline-block; }

mjx-block { display: block; }

mjx-itable { display: inline-table; }

mjx-row { display: table-row; }

mjx-row > * { display: table-cell; }

mjx-mtext { display: inline-block; }

mjx-mstyle { display: inline-block; }

mjx-merror { display: inline-block; color: red; background-color: yellow; }

mjx-mphantom { visibility: hidden; }

mjx-assistive-mml { top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); us=
er-select: none; position: absolute !important; padding: 1px 0px 0px !impor=
tant; border: 0px !important; display: block !important; width: auto !impor=
tant; overflow: hidden !important; }

mjx-assistive-mml[display=3D"block"] { width: 100% !important; }

mjx-c::before { display: block; width: 0px; }

.MJX-TEX { font-family: MJXZERO, MJXTEX; }

.TEX-B { font-family: MJXZERO, MJXTEX-B; }

.TEX-I { font-family: MJXZERO, MJXTEX-I; }

.TEX-MI { font-family: MJXZERO, MJXTEX-MI; }

.TEX-BI { font-family: MJXZERO, MJXTEX-BI; }

.TEX-S1 { font-family: MJXZERO, MJXTEX-S1; }

.TEX-S2 { font-family: MJXZERO, MJXTEX-S2; }

.TEX-S3 { font-family: MJXZERO, MJXTEX-S3; }

.TEX-S4 { font-family: MJXZERO, MJXTEX-S4; }

.TEX-A { font-family: MJXZERO, MJXTEX-A; }

.TEX-C { font-family: MJXZERO, MJXTEX-C; }

.TEX-CB { font-family: MJXZERO, MJXTEX-CB; }

.TEX-FR { font-family: MJXZERO, MJXTEX-FR; }

.TEX-FRB { font-family: MJXZERO, MJXTEX-FRB; }

.TEX-SS { font-family: MJXZERO, MJXTEX-SS; }

.TEX-SSB { font-family: MJXZERO, MJXTEX-SSB; }

.TEX-SSI { font-family: MJXZERO, MJXTEX-SSI; }

.TEX-SC { font-family: MJXZERO, MJXTEX-SC; }

.TEX-T { font-family: MJXZERO, MJXTEX-T; }

.TEX-V { font-family: MJXZERO, MJXTEX-V; }

.TEX-VB { font-family: MJXZERO, MJXTEX-VB; }

mjx-stretchy-v mjx-c, mjx-stretchy-h mjx-c { font-family: MJXZERO, MJXTEX-S=
1, MJXTEX-S4, MJXTEX, MJXTEX-A !important; }

@font-face { font-family: MJXZERO; src: url("https://cdn.jsdelivr.net/npm/m=
athjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Zero.woff") format("woff");=
 }

@font-face { font-family: MJXTEX; src: url("https://cdn.jsdelivr.net/npm/ma=
thjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Main-Regular.woff") format("=
woff"); }

@font-face { font-family: MJXTEX-B; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Main-Bold.woff") format("w=
off"); }

@font-face { font-family: MJXTEX-I; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Math-Italic.woff") format(=
"woff"); }

@font-face { font-family: MJXTEX-MI; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Main-Italic.woff") format=
("woff"); }

@font-face { font-family: MJXTEX-BI; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Math-BoldItalic.woff") fo=
rmat("woff"); }

@font-face { font-family: MJXTEX-S1; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Size1-Regular.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-S2; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Size2-Regular.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-S3; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Size3-Regular.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-S4; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Size4-Regular.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-A; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_AMS-Regular.woff") format(=
"woff"); }

@font-face { font-family: MJXTEX-C; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Calligraphic-Regular.woff"=
) format("woff"); }

@font-face { font-family: MJXTEX-CB; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Calligraphic-Bold.woff") =
format("woff"); }

@font-face { font-family: MJXTEX-FR; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Fraktur-Regular.woff") fo=
rmat("woff"); }

@font-face { font-family: MJXTEX-FRB; src: url("https://cdn.jsdelivr.net/np=
m/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Fraktur-Bold.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-SS; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_SansSerif-Regular.woff") =
format("woff"); }

@font-face { font-family: MJXTEX-SSB; src: url("https://cdn.jsdelivr.net/np=
m/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_SansSerif-Bold.woff") fo=
rmat("woff"); }

@font-face { font-family: MJXTEX-SSI; src: url("https://cdn.jsdelivr.net/np=
m/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_SansSerif-Italic.woff") =
format("woff"); }

@font-face { font-family: MJXTEX-SC; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Script-Regular.woff") for=
mat("woff"); }

@font-face { font-family: MJXTEX-T; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Typewriter-Regular.woff") =
format("woff"); }

@font-face { font-family: MJXTEX-V; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Vector-Regular.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-VB; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Vector-Bold.woff") format=
("woff"); }
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/css/vendor/bootstrap.min.css

@charset "utf-8";

:root { --blue:#007bff; --indigo:#6610f2; --purple:#6f42c1; --pink:#e83e8c;=
 --red:#dc3545; --orange:#fd7e14; --yellow:#ffc107; --green:#28a745; --teal=
:#20c997; --cyan:#17a2b8; --white:#fff; --gray:#6c757d; --gray-dark:#343a40=
; --primary:#007bff; --secondary:#6c757d; --success:#28a745; --info:#17a2b8=
; --warning:#ffc107; --danger:#dc3545; --light:#f8f9fa; --dark:#343a40; --b=
reakpoint-xs:0; --breakpoint-sm:576px; --breakpoint-md:768px; --breakpoint-=
lg:992px; --breakpoint-xl:1200px; --font-family-sans-serif:-apple-system,Bl=
inkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-=
serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Em=
oji"; --font-family-monospace:SFMono-Regular,Menlo,Monaco,Consolas,"Liberat=
ion Mono","Courier New",monospace; }

*, ::after, ::before { box-sizing: border-box; }

html { font-family: sans-serif; line-height: 1.15; text-size-adjust: 100%; =
-webkit-tap-highlight-color: transparent; }

article, aside, figcaption, figure, footer, header, hgroup, main, nav, sect=
ion { display: block; }

body { margin: 0px; font-family: -apple-system, BlinkMacSystemFont, "Segoe =
UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color=
 Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-size=
: 1rem; font-weight: 400; line-height: 1.5; color: rgb(33, 37, 41); text-al=
ign: left; background-color: rgb(255, 255, 255); }

[tabindex=3D"-1"]:focus { outline: 0px !important; }

hr { box-sizing: content-box; height: 0px; overflow: visible; }

h1, h2, h3, h4, h5, h6 { margin-top: 0px; margin-bottom: 0.5rem; }

p { margin-top: 0px; margin-bottom: 1rem; }

abbr[data-original-title], abbr[title] { text-decoration: underline dotted;=
 cursor: help; border-bottom: 0px; text-decoration-skip-ink: none; }

address { margin-bottom: 1rem; font-style: normal; line-height: inherit; }

dl, ol, ul { margin-top: 0px; margin-bottom: 1rem; }

ol ol, ol ul, ul ol, ul ul { margin-bottom: 0px; }

dt { font-weight: 700; }

dd { margin-bottom: 0.5rem; margin-left: 0px; }

blockquote { margin: 0px 0px 1rem; }

b, strong { font-weight: bolder; }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

a { color: rgb(0, 123, 255); text-decoration: none; background-color: trans=
parent; }

a:hover { color: rgb(0, 86, 179); text-decoration: underline; }

a:not([href]):not([tabindex]) { color: inherit; text-decoration: none; }

a:not([href]):not([tabindex]):focus, a:not([href]):not([tabindex]):hover { =
color: inherit; text-decoration: none; }

a:not([href]):not([tabindex]):focus { outline: 0px; }

code, kbd, pre, samp { font-family: SFMono-Regular, Menlo, Monaco, Consolas=
, "Liberation Mono", "Courier New", monospace; font-size: 1em; }

pre { margin-top: 0px; margin-bottom: 1rem; overflow: auto; }

figure { margin: 0px 0px 1rem; }

img { vertical-align: middle; border-style: none; }

svg { overflow: hidden; vertical-align: middle; }

table { border-collapse: collapse; }

caption { padding-top: 0.75rem; padding-bottom: 0.75rem; color: rgb(108, 11=
7, 125); text-align: left; caption-side: bottom; }

th { text-align: inherit; }

label { display: inline-block; margin-bottom: 0.5rem; }

button { border-radius: 0px; }

button:focus { outline: -webkit-focus-ring-color auto 5px; }

button, input, optgroup, select, textarea { margin: 0px; font-family: inher=
it; font-size: inherit; line-height: inherit; }

button, input { overflow: visible; }

button, select { text-transform: none; }

select { overflow-wrap: normal; }

[type=3D"button"], [type=3D"reset"], [type=3D"submit"], button { appearance=
: button; }

[type=3D"button"]:not(:disabled), [type=3D"reset"]:not(:disabled), [type=3D=
"submit"]:not(:disabled), button:not(:disabled) { cursor: pointer; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"date"], input[type=3D"datetime-local"], input[type=3D"month"]=
, input[type=3D"time"] { appearance: listbox; }

textarea { overflow: auto; resize: vertical; }

fieldset { min-width: 0px; padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; max-width: 100%; padding: 0px; margin=
-bottom: 0.5rem; font-size: 1.5rem; line-height: inherit; color: inherit; w=
hite-space: normal; }

progress { vertical-align: baseline; }

[type=3D"number"]::-webkit-inner-spin-button, [type=3D"number"]::-webkit-ou=
ter-spin-button { height: auto; }

[type=3D"search"] { outline-offset: -2px; appearance: none; }

[type=3D"search"]::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { font: inherit; appearance: button; }

output { display: inline-block; }

summary { display: list-item; cursor: pointer; }

template { display: none; }

[hidden] { display: none !important; }

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 { margin-bottom: 0.5re=
m; font-weight: 500; line-height: 1.2; }

.h1, h1 { font-size: 2.5rem; }

.h2, h2 { font-size: 2rem; }

.h3, h3 { font-size: 1.75rem; }

.h4, h4 { font-size: 1.5rem; }

.h5, h5 { font-size: 1.25rem; }

.h6, h6 { font-size: 1rem; }

.lead { font-size: 1.25rem; font-weight: 300; }

.display-1 { font-size: 6rem; font-weight: 300; line-height: 1.2; }

.display-2 { font-size: 5.5rem; font-weight: 300; line-height: 1.2; }

.display-3 { font-size: 4.5rem; font-weight: 300; line-height: 1.2; }

.display-4 { font-size: 3.5rem; font-weight: 300; line-height: 1.2; }

hr { margin-top: 1rem; margin-bottom: 1rem; border-width: 1px 0px 0px; bord=
er-right-style: initial; border-bottom-style: initial; border-left-style: i=
nitial; border-right-color: initial; border-bottom-color: initial; border-l=
eft-color: initial; border-image: initial; border-top-style: solid; border-=
top-color: rgba(0, 0, 0, 0.1); }

.small, small { font-size: 80%; font-weight: 400; }

.mark, mark { padding: 0.2em; background-color: rgb(252, 248, 227); }

.list-unstyled { padding-left: 0px; list-style: none; }

.list-inline { padding-left: 0px; list-style: none; }

.list-inline-item { display: inline-block; }

.list-inline-item:not(:last-child) { margin-right: 0.5rem; }

.initialism { font-size: 90%; text-transform: uppercase; }

.blockquote { margin-bottom: 1rem; font-size: 1.25rem; }

.blockquote-footer { display: block; font-size: 80%; color: rgb(108, 117, 1=
25); }

.blockquote-footer::before { content: "=E2=80=94=C2=A0"; }

.img-fluid { max-width: 100%; height: auto; }

.img-thumbnail { padding: 0.25rem; background-color: rgb(255, 255, 255); bo=
rder: 1px solid rgb(222, 226, 230); border-radius: 0.25rem; max-width: 100%=
; height: auto; }

.figure { display: inline-block; }

.figure-img { margin-bottom: 0.5rem; line-height: 1; }

.figure-caption { font-size: 90%; color: rgb(108, 117, 125); }

code { font-size: 87.5%; color: rgb(232, 62, 140); word-break: break-word; =
}

a > code { color: inherit; }

kbd { padding: 0.2rem 0.4rem; font-size: 87.5%; color: rgb(255, 255, 255); =
background-color: rgb(33, 37, 41); border-radius: 0.2rem; }

kbd kbd { padding: 0px; font-size: 100%; font-weight: 700; }

pre { display: block; font-size: 87.5%; color: rgb(33, 37, 41); }

pre code { font-size: inherit; color: inherit; word-break: normal; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { width: 100%; padding-right: 15px; padding-left: 15px; margin-r=
ight: auto; margin-left: auto; }

@media (min-width: 576px) {
  .container { max-width: 540px; }
}

@media (min-width: 768px) {
  .container { max-width: 720px; }
}

@media (min-width: 992px) {
  .container { max-width: 960px; }
}

@media (min-width: 1200px) {
  .container { max-width: 1140px; }
}

.container-fluid { width: 100%; padding-right: 15px; padding-left: 15px; ma=
rgin-right: auto; margin-left: auto; }

.row { display: flex; flex-wrap: wrap; margin-right: -15px; margin-left: -1=
5px; }

.no-gutters { margin-right: 0px; margin-left: 0px; }

.no-gutters > .col, .no-gutters > [class*=3D"col-"] { padding-right: 0px; p=
adding-left: 0px; }

.col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5, .c=
ol-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1, .col-lg-10, .c=
ol-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6=
, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto, .col-md, .col-md-1, .col-m=
d-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .=
col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-auto, .col-sm, .col-sm-1=
, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col=
-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .=
col-xl-1, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl=
-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto { p=
osition: relative; width: 100%; padding-right: 15px; padding-left: 15px; }

.col { flex-basis: 0px; flex-grow: 1; max-width: 100%; }

.col-auto { flex: 0 0 auto; width: auto; max-width: 100%; }

.col-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }

.col-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }

.col-3 { flex: 0 0 25%; max-width: 25%; }

.col-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }

.col-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }

.col-6 { flex: 0 0 50%; max-width: 50%; }

.col-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }

.col-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }

.col-9 { flex: 0 0 75%; max-width: 75%; }

.col-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }

.col-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }

.col-12 { flex: 0 0 100%; max-width: 100%; }

.order-first { order: -1; }

.order-last { order: 13; }

.order-0 { order: 0; }

.order-1 { order: 1; }

.order-2 { order: 2; }

.order-3 { order: 3; }

.order-4 { order: 4; }

.order-5 { order: 5; }

.order-6 { order: 6; }

.order-7 { order: 7; }

.order-8 { order: 8; }

.order-9 { order: 9; }

.order-10 { order: 10; }

.order-11 { order: 11; }

.order-12 { order: 12; }

.offset-1 { margin-left: 8.33333%; }

.offset-2 { margin-left: 16.6667%; }

.offset-3 { margin-left: 25%; }

.offset-4 { margin-left: 33.3333%; }

.offset-5 { margin-left: 41.6667%; }

.offset-6 { margin-left: 50%; }

.offset-7 { margin-left: 58.3333%; }

.offset-8 { margin-left: 66.6667%; }

.offset-9 { margin-left: 75%; }

.offset-10 { margin-left: 83.3333%; }

.offset-11 { margin-left: 91.6667%; }

@media (min-width: 576px) {
  .col-sm { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-sm-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-sm-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-sm-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-sm-3 { flex: 0 0 25%; max-width: 25%; }
  .col-sm-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-sm-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-sm-6 { flex: 0 0 50%; max-width: 50%; }
  .col-sm-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-sm-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-sm-9 { flex: 0 0 75%; max-width: 75%; }
  .col-sm-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-sm-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-sm-12 { flex: 0 0 100%; max-width: 100%; }
  .order-sm-first { order: -1; }
  .order-sm-last { order: 13; }
  .order-sm-0 { order: 0; }
  .order-sm-1 { order: 1; }
  .order-sm-2 { order: 2; }
  .order-sm-3 { order: 3; }
  .order-sm-4 { order: 4; }
  .order-sm-5 { order: 5; }
  .order-sm-6 { order: 6; }
  .order-sm-7 { order: 7; }
  .order-sm-8 { order: 8; }
  .order-sm-9 { order: 9; }
  .order-sm-10 { order: 10; }
  .order-sm-11 { order: 11; }
  .order-sm-12 { order: 12; }
  .offset-sm-0 { margin-left: 0px; }
  .offset-sm-1 { margin-left: 8.33333%; }
  .offset-sm-2 { margin-left: 16.6667%; }
  .offset-sm-3 { margin-left: 25%; }
  .offset-sm-4 { margin-left: 33.3333%; }
  .offset-sm-5 { margin-left: 41.6667%; }
  .offset-sm-6 { margin-left: 50%; }
  .offset-sm-7 { margin-left: 58.3333%; }
  .offset-sm-8 { margin-left: 66.6667%; }
  .offset-sm-9 { margin-left: 75%; }
  .offset-sm-10 { margin-left: 83.3333%; }
  .offset-sm-11 { margin-left: 91.6667%; }
}

@media (min-width: 768px) {
  .col-md { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-md-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-md-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-md-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-md-3 { flex: 0 0 25%; max-width: 25%; }
  .col-md-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-md-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-md-6 { flex: 0 0 50%; max-width: 50%; }
  .col-md-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-md-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-md-9 { flex: 0 0 75%; max-width: 75%; }
  .col-md-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-md-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-md-12 { flex: 0 0 100%; max-width: 100%; }
  .order-md-first { order: -1; }
  .order-md-last { order: 13; }
  .order-md-0 { order: 0; }
  .order-md-1 { order: 1; }
  .order-md-2 { order: 2; }
  .order-md-3 { order: 3; }
  .order-md-4 { order: 4; }
  .order-md-5 { order: 5; }
  .order-md-6 { order: 6; }
  .order-md-7 { order: 7; }
  .order-md-8 { order: 8; }
  .order-md-9 { order: 9; }
  .order-md-10 { order: 10; }
  .order-md-11 { order: 11; }
  .order-md-12 { order: 12; }
  .offset-md-0 { margin-left: 0px; }
  .offset-md-1 { margin-left: 8.33333%; }
  .offset-md-2 { margin-left: 16.6667%; }
  .offset-md-3 { margin-left: 25%; }
  .offset-md-4 { margin-left: 33.3333%; }
  .offset-md-5 { margin-left: 41.6667%; }
  .offset-md-6 { margin-left: 50%; }
  .offset-md-7 { margin-left: 58.3333%; }
  .offset-md-8 { margin-left: 66.6667%; }
  .offset-md-9 { margin-left: 75%; }
  .offset-md-10 { margin-left: 83.3333%; }
  .offset-md-11 { margin-left: 91.6667%; }
}

@media (min-width: 992px) {
  .col-lg { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-lg-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-lg-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-lg-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-lg-3 { flex: 0 0 25%; max-width: 25%; }
  .col-lg-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-lg-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-lg-6 { flex: 0 0 50%; max-width: 50%; }
  .col-lg-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-lg-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-lg-9 { flex: 0 0 75%; max-width: 75%; }
  .col-lg-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-lg-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-lg-12 { flex: 0 0 100%; max-width: 100%; }
  .order-lg-first { order: -1; }
  .order-lg-last { order: 13; }
  .order-lg-0 { order: 0; }
  .order-lg-1 { order: 1; }
  .order-lg-2 { order: 2; }
  .order-lg-3 { order: 3; }
  .order-lg-4 { order: 4; }
  .order-lg-5 { order: 5; }
  .order-lg-6 { order: 6; }
  .order-lg-7 { order: 7; }
  .order-lg-8 { order: 8; }
  .order-lg-9 { order: 9; }
  .order-lg-10 { order: 10; }
  .order-lg-11 { order: 11; }
  .order-lg-12 { order: 12; }
  .offset-lg-0 { margin-left: 0px; }
  .offset-lg-1 { margin-left: 8.33333%; }
  .offset-lg-2 { margin-left: 16.6667%; }
  .offset-lg-3 { margin-left: 25%; }
  .offset-lg-4 { margin-left: 33.3333%; }
  .offset-lg-5 { margin-left: 41.6667%; }
  .offset-lg-6 { margin-left: 50%; }
  .offset-lg-7 { margin-left: 58.3333%; }
  .offset-lg-8 { margin-left: 66.6667%; }
  .offset-lg-9 { margin-left: 75%; }
  .offset-lg-10 { margin-left: 83.3333%; }
  .offset-lg-11 { margin-left: 91.6667%; }
}

@media (min-width: 1200px) {
  .col-xl { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-xl-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-xl-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-xl-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-xl-3 { flex: 0 0 25%; max-width: 25%; }
  .col-xl-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-xl-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-xl-6 { flex: 0 0 50%; max-width: 50%; }
  .col-xl-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-xl-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-xl-9 { flex: 0 0 75%; max-width: 75%; }
  .col-xl-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-xl-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-xl-12 { flex: 0 0 100%; max-width: 100%; }
  .order-xl-first { order: -1; }
  .order-xl-last { order: 13; }
  .order-xl-0 { order: 0; }
  .order-xl-1 { order: 1; }
  .order-xl-2 { order: 2; }
  .order-xl-3 { order: 3; }
  .order-xl-4 { order: 4; }
  .order-xl-5 { order: 5; }
  .order-xl-6 { order: 6; }
  .order-xl-7 { order: 7; }
  .order-xl-8 { order: 8; }
  .order-xl-9 { order: 9; }
  .order-xl-10 { order: 10; }
  .order-xl-11 { order: 11; }
  .order-xl-12 { order: 12; }
  .offset-xl-0 { margin-left: 0px; }
  .offset-xl-1 { margin-left: 8.33333%; }
  .offset-xl-2 { margin-left: 16.6667%; }
  .offset-xl-3 { margin-left: 25%; }
  .offset-xl-4 { margin-left: 33.3333%; }
  .offset-xl-5 { margin-left: 41.6667%; }
  .offset-xl-6 { margin-left: 50%; }
  .offset-xl-7 { margin-left: 58.3333%; }
  .offset-xl-8 { margin-left: 66.6667%; }
  .offset-xl-9 { margin-left: 75%; }
  .offset-xl-10 { margin-left: 83.3333%; }
  .offset-xl-11 { margin-left: 91.6667%; }
}

.table { width: 100%; margin-bottom: 1rem; color: rgb(33, 37, 41); }

.table td, .table th { padding: 0.75rem; vertical-align: top; border-top: 1=
px solid rgb(222, 226, 230); }

.table thead th { vertical-align: bottom; border-bottom: 2px solid rgb(222,=
 226, 230); }

.table tbody + tbody { border-top: 2px solid rgb(222, 226, 230); }

.table-sm td, .table-sm th { padding: 0.3rem; }

.table-bordered { border: 1px solid rgb(222, 226, 230); }

.table-bordered td, .table-bordered th { border: 1px solid rgb(222, 226, 23=
0); }

.table-bordered thead td, .table-bordered thead th { border-bottom-width: 2=
px; }

.table-borderless tbody + tbody, .table-borderless td, .table-borderless th=
, .table-borderless thead th { border: 0px; }

.table-striped tbody tr:nth-of-type(2n+1) { background-color: rgba(0, 0, 0,=
 0.05); }

.table-hover tbody tr:hover { color: rgb(33, 37, 41); background-color: rgb=
a(0, 0, 0, 0.075); }

.table-primary, .table-primary > td, .table-primary > th { background-color=
: rgb(184, 218, 255); }

.table-primary tbody + tbody, .table-primary td, .table-primary th, .table-=
primary thead th { border-color: rgb(122, 186, 255); }

.table-hover .table-primary:hover { background-color: rgb(159, 205, 255); }

.table-hover .table-primary:hover > td, .table-hover .table-primary:hover >=
 th { background-color: rgb(159, 205, 255); }

.table-secondary, .table-secondary > td, .table-secondary > th { background=
-color: rgb(214, 216, 219); }

.table-secondary tbody + tbody, .table-secondary td, .table-secondary th, .=
table-secondary thead th { border-color: rgb(179, 183, 187); }

.table-hover .table-secondary:hover { background-color: rgb(200, 203, 207);=
 }

.table-hover .table-secondary:hover > td, .table-hover .table-secondary:hov=
er > th { background-color: rgb(200, 203, 207); }

.table-success, .table-success > td, .table-success > th { background-color=
: rgb(195, 230, 203); }

.table-success tbody + tbody, .table-success td, .table-success th, .table-=
success thead th { border-color: rgb(143, 209, 158); }

.table-hover .table-success:hover { background-color: rgb(177, 223, 187); }

.table-hover .table-success:hover > td, .table-hover .table-success:hover >=
 th { background-color: rgb(177, 223, 187); }

.table-info, .table-info > td, .table-info > th { background-color: rgb(190=
, 229, 235); }

.table-info tbody + tbody, .table-info td, .table-info th, .table-info thea=
d th { border-color: rgb(134, 207, 218); }

.table-hover .table-info:hover { background-color: rgb(171, 221, 229); }

.table-hover .table-info:hover > td, .table-hover .table-info:hover > th { =
background-color: rgb(171, 221, 229); }

.table-warning, .table-warning > td, .table-warning > th { background-color=
: rgb(255, 238, 186); }

.table-warning tbody + tbody, .table-warning td, .table-warning th, .table-=
warning thead th { border-color: rgb(255, 223, 126); }

.table-hover .table-warning:hover { background-color: rgb(255, 232, 161); }

.table-hover .table-warning:hover > td, .table-hover .table-warning:hover >=
 th { background-color: rgb(255, 232, 161); }

.table-danger, .table-danger > td, .table-danger > th { background-color: r=
gb(245, 198, 203); }

.table-danger tbody + tbody, .table-danger td, .table-danger th, .table-dan=
ger thead th { border-color: rgb(237, 150, 158); }

.table-hover .table-danger:hover { background-color: rgb(241, 176, 183); }

.table-hover .table-danger:hover > td, .table-hover .table-danger:hover > t=
h { background-color: rgb(241, 176, 183); }

.table-light, .table-light > td, .table-light > th { background-color: rgb(=
253, 253, 254); }

.table-light tbody + tbody, .table-light td, .table-light th, .table-light =
thead th { border-color: rgb(251, 252, 252); }

.table-hover .table-light:hover { background-color: rgb(236, 236, 246); }

.table-hover .table-light:hover > td, .table-hover .table-light:hover > th =
{ background-color: rgb(236, 236, 246); }

.table-dark, .table-dark > td, .table-dark > th { background-color: rgb(198=
, 200, 202); }

.table-dark tbody + tbody, .table-dark td, .table-dark th, .table-dark thea=
d th { border-color: rgb(149, 153, 156); }

.table-hover .table-dark:hover { background-color: rgb(185, 187, 190); }

.table-hover .table-dark:hover > td, .table-hover .table-dark:hover > th { =
background-color: rgb(185, 187, 190); }

.table-active, .table-active > td, .table-active > th { background-color: r=
gba(0, 0, 0, 0.075); }

.table-hover .table-active:hover { background-color: rgba(0, 0, 0, 0.075); =
}

.table-hover .table-active:hover > td, .table-hover .table-active:hover > t=
h { background-color: rgba(0, 0, 0, 0.075); }

.table .thead-dark th { color: rgb(255, 255, 255); background-color: rgb(52=
, 58, 64); border-color: rgb(69, 77, 85); }

.table .thead-light th { color: rgb(73, 80, 87); background-color: rgb(233,=
 236, 239); border-color: rgb(222, 226, 230); }

.table-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64);=
 }

.table-dark td, .table-dark th, .table-dark thead th { border-color: rgb(69=
, 77, 85); }

.table-dark.table-bordered { border: 0px; }

.table-dark.table-striped tbody tr:nth-of-type(2n+1) { background-color: rg=
ba(255, 255, 255, 0.05); }

.table-dark.table-hover tbody tr:hover { color: rgb(255, 255, 255); backgro=
und-color: rgba(255, 255, 255, 0.075); }

@media (max-width: 575.98px) {
  .table-responsive-sm { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-sm > .table-bordered { border: 0px; }
}

@media (max-width: 767.98px) {
  .table-responsive-md { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-md > .table-bordered { border: 0px; }
}

@media (max-width: 991.98px) {
  .table-responsive-lg { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-lg > .table-bordered { border: 0px; }
}

@media (max-width: 1199.98px) {
  .table-responsive-xl { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-xl > .table-bordered { border: 0px; }
}

.table-responsive { display: block; width: 100%; overflow-x: auto; }

.table-responsive > .table-bordered { border: 0px; }

.form-control { display: block; width: 100%; height: calc(1.5em + 0.75rem +=
 2px); padding: 0.375rem 0.75rem; font-size: 1rem; font-weight: 400; line-h=
eight: 1.5; color: rgb(73, 80, 87); background-color: rgb(255, 255, 255); b=
ackground-clip: padding-box; border: 1px solid rgb(206, 212, 218); border-r=
adius: 0.25rem; transition: border-color 0.15s ease-in-out 0s, box-shadow 0=
.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .form-control { transition: none 0s ease 0s; }
}

.form-control:focus { color: rgb(73, 80, 87); background-color: rgb(255, 25=
5, 255); border-color: rgb(128, 189, 255); outline: 0px; box-shadow: rgba(0=
, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.form-control::-webkit-input-placeholder { color: rgb(108, 117, 125); opaci=
ty: 1; }

.form-control::placeholder { color: rgb(108, 117, 125); opacity: 1; }

.form-control:disabled, .form-control[readonly] { background-color: rgb(233=
, 236, 239); opacity: 1; }

.form-control-file, .form-control-range { display: block; width: 100%; }

.col-form-label { padding-top: calc(0.375rem + 1px); padding-bottom: calc(0=
.375rem + 1px); margin-bottom: 0px; font-size: inherit; line-height: 1.5; }

.col-form-label-lg { padding-top: calc(0.5rem + 1px); padding-bottom: calc(=
0.5rem + 1px); font-size: 1.25rem; line-height: 1.5; }

.col-form-label-sm { padding-top: calc(0.25rem + 1px); padding-bottom: calc=
(0.25rem + 1px); font-size: 0.875rem; line-height: 1.5; }

.form-control-plaintext { display: block; width: 100%; padding-top: 0.375re=
m; padding-bottom: 0.375rem; margin-bottom: 0px; line-height: 1.5; color: r=
gb(33, 37, 41); background-color: transparent; border-style: solid; border-=
color: transparent; border-image: initial; border-width: 1px 0px; }

.form-control-plaintext.form-control-lg, .form-control-plaintext.form-contr=
ol-sm { padding-right: 0px; padding-left: 0px; }

.form-control-sm { height: calc(1.5em + 0.5rem + 2px); padding: 0.25rem 0.5=
rem; font-size: 0.875rem; line-height: 1.5; border-radius: 0.2rem; }

.form-control-lg { height: calc(1.5em + 1rem + 2px); padding: 0.5rem 1rem; =
font-size: 1.25rem; line-height: 1.5; border-radius: 0.3rem; }

select.form-control[multiple], select.form-control[size] { height: auto; }

textarea.form-control { height: auto; }

.form-group { margin-bottom: 1rem; }

.form-text { display: block; margin-top: 0.25rem; }

.form-row { display: flex; flex-wrap: wrap; margin-right: -5px; margin-left=
: -5px; }

.form-row > .col, .form-row > [class*=3D"col-"] { padding-right: 5px; paddi=
ng-left: 5px; }

.form-check { position: relative; display: block; padding-left: 1.25rem; }

.form-check-input { position: absolute; margin-top: 0.3rem; margin-left: -1=
.25rem; }

.form-check-input:disabled ~ .form-check-label { color: rgb(108, 117, 125);=
 }

.form-check-label { margin-bottom: 0px; }

.form-check-inline { display: inline-flex; align-items: center; padding-lef=
t: 0px; margin-right: 0.75rem; }

.form-check-inline .form-check-input { position: static; margin-top: 0px; m=
argin-right: 0.3125rem; margin-left: 0px; }

.valid-feedback { display: none; width: 100%; margin-top: 0.25rem; font-siz=
e: 80%; color: rgb(40, 167, 69); }

.valid-tooltip { position: absolute; top: 100%; z-index: 5; display: none; =
max-width: 100%; padding: 0.25rem 0.5rem; margin-top: 0.1rem; font-size: 0.=
875rem; line-height: 1.5; color: rgb(255, 255, 255); background-color: rgba=
(40, 167, 69, 0.9); border-radius: 0.25rem; }

.form-control.is-valid, .was-validated .form-control:valid { border-color: =
rgb(40, 167, 69); padding-right: calc(1.5em + 0.75rem); background-image: u=
rl("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' viewBox=
=3D'0 0 8 8'%3e%3cpath fill=3D'%2328a745' d=3D'M2.3 6.73L.6 4.53c-.4-1.04.4=
6-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z=
'/%3e%3c/svg%3e"); background-repeat: no-repeat; background-position: right=
 calc(0.375em + 0.1875rem) center; background-size: calc(0.75em + 0.375rem)=
 calc(0.75em + 0.375rem); }

.form-control.is-valid:focus, .was-validated .form-control:valid:focus { bo=
rder-color: rgb(40, 167, 69); box-shadow: rgba(40, 167, 69, 0.25) 0px 0px 0=
px 0.2rem; }

.form-control.is-valid ~ .valid-feedback, .form-control.is-valid ~ .valid-t=
ooltip, .was-validated .form-control:valid ~ .valid-feedback, .was-validate=
d .form-control:valid ~ .valid-tooltip { display: block; }

.was-validated textarea.form-control:valid, textarea.form-control.is-valid =
{ padding-right: calc(1.5em + 0.75rem); background-position: right calc(0.3=
75em + 0.1875rem) top calc(0.375em + 0.1875rem); }

.custom-select.is-valid, .was-validated .custom-select:valid { border-color=
: rgb(40, 167, 69); padding-right: calc(((1em + 0.75rem) * 3) / 4 + 1.75rem=
); background: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/20=
00/svg' viewBox=3D'0 0 4 5'%3e%3cpath fill=3D'%23343a40' d=3D'M2 0L0 2h4zm0=
 5L0 3h4z'/%3e%3c/svg%3e") right 0.75rem center / 8px 10px no-repeat, url("=
data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' viewBox=3D'0=
 0 8 8'%3e%3cpath fill=3D'%2328a745' d=3D'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4=
 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e=
%3c/svg%3e") right 1.75rem center / calc(0.75em + 0.375rem) calc(0.75em + 0=
.375rem) no-repeat rgb(255, 255, 255); }

.custom-select.is-valid:focus, .was-validated .custom-select:valid:focus { =
border-color: rgb(40, 167, 69); box-shadow: rgba(40, 167, 69, 0.25) 0px 0px=
 0px 0.2rem; }

.custom-select.is-valid ~ .valid-feedback, .custom-select.is-valid ~ .valid=
-tooltip, .was-validated .custom-select:valid ~ .valid-feedback, .was-valid=
ated .custom-select:valid ~ .valid-tooltip { display: block; }

.form-control-file.is-valid ~ .valid-feedback, .form-control-file.is-valid =
~ .valid-tooltip, .was-validated .form-control-file:valid ~ .valid-feedback=
, .was-validated .form-control-file:valid ~ .valid-tooltip { display: block=
; }

.form-check-input.is-valid ~ .form-check-label, .was-validated .form-check-=
input:valid ~ .form-check-label { color: rgb(40, 167, 69); }

.form-check-input.is-valid ~ .valid-feedback, .form-check-input.is-valid ~ =
.valid-tooltip, .was-validated .form-check-input:valid ~ .valid-feedback, .=
was-validated .form-check-input:valid ~ .valid-tooltip { display: block; }

.custom-control-input.is-valid ~ .custom-control-label, .was-validated .cus=
tom-control-input:valid ~ .custom-control-label { color: rgb(40, 167, 69); =
}

.custom-control-input.is-valid ~ .custom-control-label::before, .was-valida=
ted .custom-control-input:valid ~ .custom-control-label::before { border-co=
lor: rgb(40, 167, 69); }

.custom-control-input.is-valid ~ .valid-feedback, .custom-control-input.is-=
valid ~ .valid-tooltip, .was-validated .custom-control-input:valid ~ .valid=
-feedback, .was-validated .custom-control-input:valid ~ .valid-tooltip { di=
splay: block; }

.custom-control-input.is-valid:checked ~ .custom-control-label::before, .wa=
s-validated .custom-control-input:valid:checked ~ .custom-control-label::be=
fore { border-color: rgb(52, 206, 87); background-color: rgb(52, 206, 87); =
}

.custom-control-input.is-valid:focus ~ .custom-control-label::before, .was-=
validated .custom-control-input:valid:focus ~ .custom-control-label::before=
 { box-shadow: rgba(40, 167, 69, 0.25) 0px 0px 0px 0.2rem; }

.custom-control-input.is-valid:focus:not(:checked) ~ .custom-control-label:=
:before, .was-validated .custom-control-input:valid:focus:not(:checked) ~ .=
custom-control-label::before { border-color: rgb(40, 167, 69); }

.custom-file-input.is-valid ~ .custom-file-label, .was-validated .custom-fi=
le-input:valid ~ .custom-file-label { border-color: rgb(40, 167, 69); }

.custom-file-input.is-valid ~ .valid-feedback, .custom-file-input.is-valid =
~ .valid-tooltip, .was-validated .custom-file-input:valid ~ .valid-feedback=
, .was-validated .custom-file-input:valid ~ .valid-tooltip { display: block=
; }

.custom-file-input.is-valid:focus ~ .custom-file-label, .was-validated .cus=
tom-file-input:valid:focus ~ .custom-file-label { border-color: rgb(40, 167=
, 69); box-shadow: rgba(40, 167, 69, 0.25) 0px 0px 0px 0.2rem; }

.invalid-feedback { display: none; width: 100%; margin-top: 0.25rem; font-s=
ize: 80%; color: rgb(220, 53, 69); }

.invalid-tooltip { position: absolute; top: 100%; z-index: 5; display: none=
; max-width: 100%; padding: 0.25rem 0.5rem; margin-top: 0.1rem; font-size: =
0.875rem; line-height: 1.5; color: rgb(255, 255, 255); background-color: rg=
ba(220, 53, 69, 0.9); border-radius: 0.25rem; }

.form-control.is-invalid, .was-validated .form-control:invalid { border-col=
or: rgb(220, 53, 69); padding-right: calc(1.5em + 0.75rem); background-imag=
e: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' fill=
=3D'%23dc3545' viewBox=3D'-2 -2 7 7'%3e%3cpath stroke=3D'%23dc3545' d=3D'M0=
 0l3 3m0-3L0 3'/%3e%3ccircle r=3D'.5'/%3e%3ccircle cx=3D'3' r=3D'.5'/%3e%3c=
circle cy=3D'3' r=3D'.5'/%3e%3ccircle cx=3D'3' cy=3D'3' r=3D'.5'/%3e%3c/svg=
%3E"); background-repeat: no-repeat; background-position: right calc(0.375e=
m + 0.1875rem) center; background-size: calc(0.75em + 0.375rem) calc(0.75em=
 + 0.375rem); }

.form-control.is-invalid:focus, .was-validated .form-control:invalid:focus =
{ border-color: rgb(220, 53, 69); box-shadow: rgba(220, 53, 69, 0.25) 0px 0=
px 0px 0.2rem; }

.form-control.is-invalid ~ .invalid-feedback, .form-control.is-invalid ~ .i=
nvalid-tooltip, .was-validated .form-control:invalid ~ .invalid-feedback, .=
was-validated .form-control:invalid ~ .invalid-tooltip { display: block; }

.was-validated textarea.form-control:invalid, textarea.form-control.is-inva=
lid { padding-right: calc(1.5em + 0.75rem); background-position: right calc=
(0.375em + 0.1875rem) top calc(0.375em + 0.1875rem); }

.custom-select.is-invalid, .was-validated .custom-select:invalid { border-c=
olor: rgb(220, 53, 69); padding-right: calc(((1em + 0.75rem) * 3) / 4 + 1.7=
5rem); background: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.or=
g/2000/svg' viewBox=3D'0 0 4 5'%3e%3cpath fill=3D'%23343a40' d=3D'M2 0L0 2h=
4zm0 5L0 3h4z'/%3e%3c/svg%3e") right 0.75rem center / 8px 10px no-repeat, u=
rl("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'=
%23dc3545' viewBox=3D'-2 -2 7 7'%3e%3cpath stroke=3D'%23dc3545' d=3D'M0 0l3=
 3m0-3L0 3'/%3e%3ccircle r=3D'.5'/%3e%3ccircle cx=3D'3' r=3D'.5'/%3e%3ccirc=
le cy=3D'3' r=3D'.5'/%3e%3ccircle cx=3D'3' cy=3D'3' r=3D'.5'/%3e%3c/svg%3E"=
) right 1.75rem center / calc(0.75em + 0.375rem) calc(0.75em + 0.375rem) no=
-repeat rgb(255, 255, 255); }

.custom-select.is-invalid:focus, .was-validated .custom-select:invalid:focu=
s { border-color: rgb(220, 53, 69); box-shadow: rgba(220, 53, 69, 0.25) 0px=
 0px 0px 0.2rem; }

.custom-select.is-invalid ~ .invalid-feedback, .custom-select.is-invalid ~ =
.invalid-tooltip, .was-validated .custom-select:invalid ~ .invalid-feedback=
, .was-validated .custom-select:invalid ~ .invalid-tooltip { display: block=
; }

.form-control-file.is-invalid ~ .invalid-feedback, .form-control-file.is-in=
valid ~ .invalid-tooltip, .was-validated .form-control-file:invalid ~ .inva=
lid-feedback, .was-validated .form-control-file:invalid ~ .invalid-tooltip =
{ display: block; }

.form-check-input.is-invalid ~ .form-check-label, .was-validated .form-chec=
k-input:invalid ~ .form-check-label { color: rgb(220, 53, 69); }

.form-check-input.is-invalid ~ .invalid-feedback, .form-check-input.is-inva=
lid ~ .invalid-tooltip, .was-validated .form-check-input:invalid ~ .invalid=
-feedback, .was-validated .form-check-input:invalid ~ .invalid-tooltip { di=
splay: block; }

.custom-control-input.is-invalid ~ .custom-control-label, .was-validated .c=
ustom-control-input:invalid ~ .custom-control-label { color: rgb(220, 53, 6=
9); }

.custom-control-input.is-invalid ~ .custom-control-label::before, .was-vali=
dated .custom-control-input:invalid ~ .custom-control-label::before { borde=
r-color: rgb(220, 53, 69); }

.custom-control-input.is-invalid ~ .invalid-feedback, .custom-control-input=
.is-invalid ~ .invalid-tooltip, .was-validated .custom-control-input:invali=
d ~ .invalid-feedback, .was-validated .custom-control-input:invalid ~ .inva=
lid-tooltip { display: block; }

.custom-control-input.is-invalid:checked ~ .custom-control-label::before, .=
was-validated .custom-control-input:invalid:checked ~ .custom-control-label=
::before { border-color: rgb(228, 96, 109); background-color: rgb(228, 96, =
109); }

.custom-control-input.is-invalid:focus ~ .custom-control-label::before, .wa=
s-validated .custom-control-input:invalid:focus ~ .custom-control-label::be=
fore { box-shadow: rgba(220, 53, 69, 0.25) 0px 0px 0px 0.2rem; }

.custom-control-input.is-invalid:focus:not(:checked) ~ .custom-control-labe=
l::before, .was-validated .custom-control-input:invalid:focus:not(:checked)=
 ~ .custom-control-label::before { border-color: rgb(220, 53, 69); }

.custom-file-input.is-invalid ~ .custom-file-label, .was-validated .custom-=
file-input:invalid ~ .custom-file-label { border-color: rgb(220, 53, 69); }

.custom-file-input.is-invalid ~ .invalid-feedback, .custom-file-input.is-in=
valid ~ .invalid-tooltip, .was-validated .custom-file-input:invalid ~ .inva=
lid-feedback, .was-validated .custom-file-input:invalid ~ .invalid-tooltip =
{ display: block; }

.custom-file-input.is-invalid:focus ~ .custom-file-label, .was-validated .c=
ustom-file-input:invalid:focus ~ .custom-file-label { border-color: rgb(220=
, 53, 69); box-shadow: rgba(220, 53, 69, 0.25) 0px 0px 0px 0.2rem; }

.form-inline { display: flex; flex-flow: row wrap; align-items: center; }

.form-inline .form-check { width: 100%; }

@media (min-width: 576px) {
  .form-inline label { display: flex; align-items: center; justify-content:=
 center; margin-bottom: 0px; }
  .form-inline .form-group { display: flex; flex: 0 0 auto; flex-flow: row =
wrap; align-items: center; margin-bottom: 0px; }
  .form-inline .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .form-inline .form-control-plaintext { display: inline-block; }
  .form-inline .custom-select, .form-inline .input-group { width: auto; }
  .form-inline .form-check { display: flex; align-items: center; justify-co=
ntent: center; width: auto; padding-left: 0px; }
  .form-inline .form-check-input { position: relative; flex-shrink: 0; marg=
in-top: 0px; margin-right: 0.25rem; margin-left: 0px; }
  .form-inline .custom-control { align-items: center; justify-content: cent=
er; }
  .form-inline .custom-control-label { margin-bottom: 0px; }
}

.btn { display: inline-block; font-weight: 400; color: rgb(33, 37, 41); tex=
t-align: center; vertical-align: middle; user-select: none; background-colo=
r: transparent; border: 1px solid transparent; padding: 0.375rem 0.75rem; f=
ont-size: 1rem; line-height: 1.5; border-radius: 0.25rem; transition: color=
 0.15s ease-in-out 0s, background-color 0.15s ease-in-out 0s, border-color =
0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .btn { transition: none 0s ease 0s; }
}

.btn:hover { color: rgb(33, 37, 41); text-decoration: none; }

.btn.focus, .btn:focus { outline: 0px; box-shadow: rgba(0, 123, 255, 0.25) =
0px 0px 0px 0.2rem; }

.btn.disabled, .btn:disabled { opacity: 0.65; }

a.btn.disabled, fieldset:disabled a.btn { pointer-events: none; }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-primary:hover { color: rgb(255, 255, 255); background-color: rgb(0, 10=
5, 217); border-color: rgb(0, 98, 204); }

.btn-primary.focus, .btn-primary:focus { box-shadow: rgba(38, 143, 255, 0.5=
) 0px 0px 0px 0.2rem; }

.btn-primary.disabled, .btn-primary:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-primary:not(:disabled):not(.disabled).active, .btn-primary:not(:disabl=
ed):not(.disabled):active, .show > .btn-primary.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(0, 98, 204); border-color: rgb(0, 9=
2, 191); }

.btn-primary:not(:disabled):not(.disabled).active:focus, .btn-primary:not(:=
disabled):not(.disabled):active:focus, .show > .btn-primary.dropdown-toggle=
:focus { box-shadow: rgba(38, 143, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 117,=
 125); border-color: rgb(108, 117, 125); }

.btn-secondary:hover { color: rgb(255, 255, 255); background-color: rgb(90,=
 98, 104); border-color: rgb(84, 91, 98); }

.btn-secondary.focus, .btn-secondary:focus { box-shadow: rgba(130, 138, 145=
, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary.disabled, .btn-secondary:disabled { color: rgb(255, 255, 255=
); background-color: rgb(108, 117, 125); border-color: rgb(108, 117, 125); =
}

.btn-secondary:not(:disabled):not(.disabled).active, .btn-secondary:not(:di=
sabled):not(.disabled):active, .show > .btn-secondary.dropdown-toggle { col=
or: rgb(255, 255, 255); background-color: rgb(84, 91, 98); border-color: rg=
b(78, 85, 91); }

.btn-secondary:not(:disabled):not(.disabled).active:focus, .btn-secondary:n=
ot(:disabled):not(.disabled):active:focus, .show > .btn-secondary.dropdown-=
toggle:focus { box-shadow: rgba(130, 138, 145, 0.5) 0px 0px 0px 0.2rem; }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-success:hover { color: rgb(255, 255, 255); background-color: rgb(33, 1=
36, 56); border-color: rgb(30, 126, 52); }

.btn-success.focus, .btn-success:focus { box-shadow: rgba(72, 180, 97, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-success.disabled, .btn-success:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-success:not(:disabled):not(.disabled).active, .btn-success:not(:disabl=
ed):not(.disabled):active, .show > .btn-success.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(30, 126, 52); border-color: rgb(28,=
 116, 48); }

.btn-success:not(:disabled):not(.disabled).active:focus, .btn-success:not(:=
disabled):not(.disabled):active:focus, .show > .btn-success.dropdown-toggle=
:focus { box-shadow: rgba(72, 180, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184);=
 border-color: rgb(23, 162, 184); }

.btn-info:hover { color: rgb(255, 255, 255); background-color: rgb(19, 132,=
 150); border-color: rgb(17, 122, 139); }

.btn-info.focus, .btn-info:focus { box-shadow: rgba(58, 176, 195, 0.5) 0px =
0px 0px 0.2rem; }

.btn-info.disabled, .btn-info:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-info:not(:disabled):not(.disabled).active, .btn-info:not(:disabled):no=
t(.disabled):active, .show > .btn-info.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(17, 122, 139); border-color: rgb(16, 112, 12=
7); }

.btn-info:not(:disabled):not(.disabled).active:focus, .btn-info:not(:disabl=
ed):not(.disabled):active:focus, .show > .btn-info.dropdown-toggle:focus { =
box-shadow: rgba(58, 176, 195, 0.5) 0px 0px 0px 0.2rem; }

.btn-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-warning:hover { color: rgb(33, 37, 41); background-color: rgb(224, 168=
, 0); border-color: rgb(211, 158, 0); }

.btn-warning.focus, .btn-warning:focus { box-shadow: rgba(222, 170, 12, 0.5=
) 0px 0px 0px 0.2rem; }

.btn-warning.disabled, .btn-warning:disabled { color: rgb(33, 37, 41); back=
ground-color: rgb(255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-warning:not(:disabled):not(.disabled).active, .btn-warning:not(:disabl=
ed):not(.disabled):active, .show > .btn-warning.dropdown-toggle { color: rg=
b(33, 37, 41); background-color: rgb(211, 158, 0); border-color: rgb(198, 1=
49, 0); }

.btn-warning:not(:disabled):not(.disabled).active:focus, .btn-warning:not(:=
disabled):not(.disabled):active:focus, .show > .btn-warning.dropdown-toggle=
:focus { box-shadow: rgba(222, 170, 12, 0.5) 0px 0px 0px 0.2rem; }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69)=
; border-color: rgb(220, 53, 69); }

.btn-danger:hover { color: rgb(255, 255, 255); background-color: rgb(200, 3=
5, 51); border-color: rgb(189, 33, 48); }

.btn-danger.focus, .btn-danger:focus { box-shadow: rgba(225, 83, 97, 0.5) 0=
px 0px 0px 0.2rem; }

.btn-danger.disabled, .btn-danger:disabled { color: rgb(255, 255, 255); bac=
kground-color: rgb(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-danger:not(:disabled):not(.disabled).active, .btn-danger:not(:disabled=
):not(.disabled):active, .show > .btn-danger.dropdown-toggle { color: rgb(2=
55, 255, 255); background-color: rgb(189, 33, 48); border-color: rgb(178, 3=
1, 45); }

.btn-danger:not(:disabled):not(.disabled).active:focus, .btn-danger:not(:di=
sabled):not(.disabled):active:focus, .show > .btn-danger.dropdown-toggle:fo=
cus { box-shadow: rgba(225, 83, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); =
border-color: rgb(248, 249, 250); }

.btn-light:hover { color: rgb(33, 37, 41); background-color: rgb(226, 230, =
234); border-color: rgb(218, 224, 229); }

.btn-light.focus, .btn-light:focus { box-shadow: rgba(216, 217, 219, 0.5) 0=
px 0px 0px 0.2rem; }

.btn-light.disabled, .btn-light:disabled { color: rgb(33, 37, 41); backgrou=
nd-color: rgb(248, 249, 250); border-color: rgb(248, 249, 250); }

.btn-light:not(:disabled):not(.disabled).active, .btn-light:not(:disabled):=
not(.disabled):active, .show > .btn-light.dropdown-toggle { color: rgb(33, =
37, 41); background-color: rgb(218, 224, 229); border-color: rgb(211, 217, =
223); }

.btn-light:not(:disabled):not(.disabled).active:focus, .btn-light:not(:disa=
bled):not(.disabled):active:focus, .show > .btn-light.dropdown-toggle:focus=
 { box-shadow: rgba(216, 217, 219, 0.5) 0px 0px 0px 0.2rem; }

.btn-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); b=
order-color: rgb(52, 58, 64); }

.btn-dark:hover { color: rgb(255, 255, 255); background-color: rgb(35, 39, =
43); border-color: rgb(29, 33, 36); }

.btn-dark.focus, .btn-dark:focus { box-shadow: rgba(82, 88, 93, 0.5) 0px 0p=
x 0px 0.2rem; }

.btn-dark.disabled, .btn-dark:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-dark:not(:disabled):not(.disabled).active, .btn-dark:not(:disabled):no=
t(.disabled):active, .show > .btn-dark.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(29, 33, 36); border-color: rgb(23, 26, 29); =
}

.btn-dark:not(:disabled):not(.disabled).active:focus, .btn-dark:not(:disabl=
ed):not(.disabled):active:focus, .show > .btn-dark.dropdown-toggle:focus { =
box-shadow: rgba(82, 88, 93, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary { color: rgb(0, 123, 255); border-color: rgb(0, 123, 2=
55); }

.btn-outline-primary:hover { color: rgb(255, 255, 255); background-color: r=
gb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-outline-primary.focus, .btn-outline-primary:focus { box-shadow: rgba(0=
, 123, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary.disabled, .btn-outline-primary:disabled { color: rgb(0=
, 123, 255); background-color: transparent; }

.btn-outline-primary:not(:disabled):not(.disabled).active, .btn-outline-pri=
mary:not(:disabled):not(.disabled):active, .show > .btn-outline-primary.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-outline-primary:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-primary:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-primary.dropdown-toggle:focus { box-shadow: rgba(0, 123, 255, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-secondary { color: rgb(108, 117, 125); border-color: rgb(108, =
117, 125); }

.btn-outline-secondary:hover { color: rgb(255, 255, 255); background-color:=
 rgb(108, 117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary.focus, .btn-outline-secondary:focus { box-shadow: rg=
ba(108, 117, 125, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-secondary.disabled, .btn-outline-secondary:disabled { color: r=
gb(108, 117, 125); background-color: transparent; }

.btn-outline-secondary:not(:disabled):not(.disabled).active, .btn-outline-s=
econdary:not(:disabled):not(.disabled):active, .show > .btn-outline-seconda=
ry.dropdown-toggle { color: rgb(255, 255, 255); background-color: rgb(108, =
117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary:not(:disabled):not(.disabled).active:focus, .btn-out=
line-secondary:not(:disabled):not(.disabled):active:focus, .show > .btn-out=
line-secondary.dropdown-toggle:focus { box-shadow: rgba(108, 117, 125, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-outline-success { color: rgb(40, 167, 69); border-color: rgb(40, 167, =
69); }

.btn-outline-success:hover { color: rgb(255, 255, 255); background-color: r=
gb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-outline-success.focus, .btn-outline-success:focus { box-shadow: rgba(4=
0, 167, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-success.disabled, .btn-outline-success:disabled { color: rgb(4=
0, 167, 69); background-color: transparent; }

.btn-outline-success:not(:disabled):not(.disabled).active, .btn-outline-suc=
cess:not(:disabled):not(.disabled):active, .show > .btn-outline-success.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-outline-success:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-success:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-success.dropdown-toggle:focus { box-shadow: rgba(40, 167, 69, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-info { color: rgb(23, 162, 184); border-color: rgb(23, 162, 18=
4); }

.btn-outline-info:hover { color: rgb(255, 255, 255); background-color: rgb(=
23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-outline-info.focus, .btn-outline-info:focus { box-shadow: rgba(23, 162=
, 184, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-info.disabled, .btn-outline-info:disabled { color: rgb(23, 162=
, 184); background-color: transparent; }

.btn-outline-info:not(:disabled):not(.disabled).active, .btn-outline-info:n=
ot(:disabled):not(.disabled):active, .show > .btn-outline-info.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184); borde=
r-color: rgb(23, 162, 184); }

.btn-outline-info:not(:disabled):not(.disabled).active:focus, .btn-outline-=
info:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-info.=
dropdown-toggle:focus { box-shadow: rgba(23, 162, 184, 0.5) 0px 0px 0px 0.2=
rem; }

.btn-outline-warning { color: rgb(255, 193, 7); border-color: rgb(255, 193,=
 7); }

.btn-outline-warning:hover { color: rgb(33, 37, 41); background-color: rgb(=
255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-outline-warning.focus, .btn-outline-warning:focus { box-shadow: rgba(2=
55, 193, 7, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-warning.disabled, .btn-outline-warning:disabled { color: rgb(2=
55, 193, 7); background-color: transparent; }

.btn-outline-warning:not(:disabled):not(.disabled).active, .btn-outline-war=
ning:not(:disabled):not(.disabled):active, .show > .btn-outline-warning.dro=
pdown-toggle { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-outline-warning:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-warning:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-warning.dropdown-toggle:focus { box-shadow: rgba(255, 193, 7, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-danger { color: rgb(220, 53, 69); border-color: rgb(220, 53, 6=
9); }

.btn-outline-danger:hover { color: rgb(255, 255, 255); background-color: rg=
b(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-outline-danger.focus, .btn-outline-danger:focus { box-shadow: rgba(220=
, 53, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-danger.disabled, .btn-outline-danger:disabled { color: rgb(220=
, 53, 69); background-color: transparent; }

.btn-outline-danger:not(:disabled):not(.disabled).active, .btn-outline-dang=
er:not(:disabled):not(.disabled):active, .show > .btn-outline-danger.dropdo=
wn-toggle { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69); =
border-color: rgb(220, 53, 69); }

.btn-outline-danger:not(:disabled):not(.disabled).active:focus, .btn-outlin=
e-danger:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-d=
anger.dropdown-toggle:focus { box-shadow: rgba(220, 53, 69, 0.5) 0px 0px 0p=
x 0.2rem; }

.btn-outline-light { color: rgb(248, 249, 250); border-color: rgb(248, 249,=
 250); }

.btn-outline-light:hover { color: rgb(33, 37, 41); background-color: rgb(24=
8, 249, 250); border-color: rgb(248, 249, 250); }

.btn-outline-light.focus, .btn-outline-light:focus { box-shadow: rgba(248, =
249, 250, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-light.disabled, .btn-outline-light:disabled { color: rgb(248, =
249, 250); background-color: transparent; }

.btn-outline-light:not(:disabled):not(.disabled).active, .btn-outline-light=
:not(:disabled):not(.disabled):active, .show > .btn-outline-light.dropdown-=
toggle { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); bord=
er-color: rgb(248, 249, 250); }

.btn-outline-light:not(:disabled):not(.disabled).active:focus, .btn-outline=
-light:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-lig=
ht.dropdown-toggle:focus { box-shadow: rgba(248, 249, 250, 0.5) 0px 0px 0px=
 0.2rem; }

.btn-outline-dark { color: rgb(52, 58, 64); border-color: rgb(52, 58, 64); =
}

.btn-outline-dark:hover { color: rgb(255, 255, 255); background-color: rgb(=
52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-outline-dark.focus, .btn-outline-dark:focus { box-shadow: rgba(52, 58,=
 64, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-dark.disabled, .btn-outline-dark:disabled { color: rgb(52, 58,=
 64); background-color: transparent; }

.btn-outline-dark:not(:disabled):not(.disabled).active, .btn-outline-dark:n=
ot(:disabled):not(.disabled):active, .show > .btn-outline-dark.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); border-=
color: rgb(52, 58, 64); }

.btn-outline-dark:not(:disabled):not(.disabled).active:focus, .btn-outline-=
dark:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-dark.=
dropdown-toggle:focus { box-shadow: rgba(52, 58, 64, 0.5) 0px 0px 0px 0.2re=
m; }

.btn-link { font-weight: 400; color: rgb(0, 123, 255); text-decoration: non=
e; }

.btn-link:hover { color: rgb(0, 86, 179); text-decoration: underline; }

.btn-link.focus, .btn-link:focus { text-decoration: underline; box-shadow: =
none; }

.btn-link.disabled, .btn-link:disabled { color: rgb(108, 117, 125); pointer=
-events: none; }

.btn-group-lg > .btn, .btn-lg { padding: 0.5rem 1rem; font-size: 1.25rem; l=
ine-height: 1.5; border-radius: 0.3rem; }

.btn-group-sm > .btn, .btn-sm { padding: 0.25rem 0.5rem; font-size: 0.875re=
m; line-height: 1.5; border-radius: 0.2rem; }

.btn-block { display: block; width: 100%; }

.btn-block + .btn-block { margin-top: 0.5rem; }

input[type=3D"button"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"submit"].btn-block { width: 100%; }

.fade { transition: opacity 0.15s linear 0s; }

@media (prefers-reduced-motion: reduce) {
  .fade { transition: none 0s ease 0s; }
}

.fade:not(.show) { opacity: 0; }

.collapse:not(.show) { display: none; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
: height 0.35s ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .collapsing { transition: none 0s ease 0s; }
}

.dropdown, .dropleft, .dropright, .dropup { position: relative; }

.dropdown-toggle { white-space: nowrap; }

.dropdown-toggle::after { display: inline-block; margin-left: 0.255em; vert=
ical-align: 0.255em; content: ""; border-width: 0.3em 0.3em 0px; border-top=
-style: solid; border-top-color: initial; border-right-style: solid; border=
-right-color: transparent; border-bottom-style: initial; border-bottom-colo=
r: initial; border-left-style: solid; border-left-color: transparent; }

.dropdown-toggle:empty::after { margin-left: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 10rem; padding: 0.5rem 0px; margin: 0=
.125rem 0px 0px; font-size: 1rem; color: rgb(33, 37, 41); text-align: left;=
 list-style: none; background-color: rgb(255, 255, 255); background-clip: p=
adding-box; border: 1px solid rgba(0, 0, 0, 0.15); border-radius: 0.25rem; =
}

.dropdown-menu-left { right: auto; left: 0px; }

.dropdown-menu-right { right: 0px; left: auto; }

@media (min-width: 576px) {
  .dropdown-menu-sm-left { right: auto; left: 0px; }
  .dropdown-menu-sm-right { right: 0px; left: auto; }
}

@media (min-width: 768px) {
  .dropdown-menu-md-left { right: auto; left: 0px; }
  .dropdown-menu-md-right { right: 0px; left: auto; }
}

@media (min-width: 992px) {
  .dropdown-menu-lg-left { right: auto; left: 0px; }
  .dropdown-menu-lg-right { right: 0px; left: auto; }
}

@media (min-width: 1200px) {
  .dropdown-menu-xl-left { right: auto; left: 0px; }
  .dropdown-menu-xl-right { right: 0px; left: auto; }
}

.dropup .dropdown-menu { top: auto; bottom: 100%; margin-top: 0px; margin-b=
ottom: 0.125rem; }

.dropup .dropdown-toggle::after { display: inline-block; margin-left: 0.255=
em; vertical-align: 0.255em; content: ""; border-width: 0px 0.3em 0.3em; bo=
rder-top-style: initial; border-top-color: initial; border-right-style: sol=
id; border-right-color: transparent; border-bottom-style: solid; border-bot=
tom-color: initial; border-left-style: solid; border-left-color: transparen=
t; }

.dropup .dropdown-toggle:empty::after { margin-left: 0px; }

.dropright .dropdown-menu { top: 0px; right: auto; left: 100%; margin-top: =
0px; margin-left: 0.125rem; }

.dropright .dropdown-toggle::after { display: inline-block; margin-left: 0.=
255em; vertical-align: 0.255em; content: ""; border-width: 0.3em 0px 0.3em =
0.3em; border-top-style: solid; border-top-color: transparent; border-right=
-style: initial; border-right-color: initial; border-bottom-style: solid; b=
order-bottom-color: transparent; border-left-style: solid; border-left-colo=
r: initial; }

.dropright .dropdown-toggle:empty::after { margin-left: 0px; }

.dropright .dropdown-toggle::after { vertical-align: 0px; }

.dropleft .dropdown-menu { top: 0px; right: 100%; left: auto; margin-top: 0=
px; margin-right: 0.125rem; }

.dropleft .dropdown-toggle::after { display: inline-block; margin-left: 0.2=
55em; vertical-align: 0.255em; content: ""; }

.dropleft .dropdown-toggle::after { display: none; }

.dropleft .dropdown-toggle::before { display: inline-block; margin-right: 0=
.255em; vertical-align: 0.255em; content: ""; border-top: 0.3em solid trans=
parent; border-right: 0.3em solid; border-bottom: 0.3em solid transparent; =
}

.dropleft .dropdown-toggle:empty::after { margin-left: 0px; }

.dropleft .dropdown-toggle::before { vertical-align: 0px; }

.dropdown-menu[x-placement^=3D"bottom"], .dropdown-menu[x-placement^=3D"lef=
t"], .dropdown-menu[x-placement^=3D"right"], .dropdown-menu[x-placement^=3D=
"top"] { right: auto; bottom: auto; }

.dropdown-divider { height: 0px; margin: 0.5rem 0px; overflow: hidden; bord=
er-top: 1px solid rgb(233, 236, 239); }

.dropdown-item { display: block; width: 100%; padding: 0.25rem 1.5rem; clea=
r: both; font-weight: 400; color: rgb(33, 37, 41); text-align: inherit; whi=
te-space: nowrap; background-color: transparent; border: 0px; }

.dropdown-item:focus, .dropdown-item:hover { color: rgb(22, 24, 27); text-d=
ecoration: none; background-color: rgb(248, 249, 250); }

.dropdown-item.active, .dropdown-item:active { color: rgb(255, 255, 255); t=
ext-decoration: none; background-color: rgb(0, 123, 255); }

.dropdown-item.disabled, .dropdown-item:disabled { color: rgb(108, 117, 125=
); pointer-events: none; background-color: transparent; }

.dropdown-menu.show { display: block; }

.dropdown-header { display: block; padding: 0.5rem 1.5rem; margin-bottom: 0=
px; font-size: 0.875rem; color: rgb(108, 117, 125); white-space: nowrap; }

.dropdown-item-text { display: block; padding: 0.25rem 1.5rem; color: rgb(3=
3, 37, 41); }

.btn-group, .btn-group-vertical { position: relative; display: inline-flex;=
 vertical-align: middle; }

.btn-group-vertical > .btn, .btn-group > .btn { position: relative; flex: 1=
 1 auto; }

.btn-group-vertical > .btn:hover, .btn-group > .btn:hover { z-index: 1; }

.btn-group-vertical > .btn.active, .btn-group-vertical > .btn:active, .btn-=
group-vertical > .btn:focus, .btn-group > .btn.active, .btn-group > .btn:ac=
tive, .btn-group > .btn:focus { z-index: 1; }

.btn-toolbar { display: flex; flex-wrap: wrap; justify-content: flex-start;=
 }

.btn-toolbar .input-group { width: auto; }

.btn-group > .btn-group:not(:first-child), .btn-group > .btn:not(:first-chi=
ld) { margin-left: -1px; }

.btn-group > .btn-group:not(:last-child) > .btn, .btn-group > .btn:not(:las=
t-child):not(.dropdown-toggle) { border-top-right-radius: 0px; border-botto=
m-right-radius: 0px; }

.btn-group > .btn-group:not(:first-child) > .btn, .btn-group > .btn:not(:fi=
rst-child) { border-top-left-radius: 0px; border-bottom-left-radius: 0px; }

.dropdown-toggle-split { padding-right: 0.5625rem; padding-left: 0.5625rem;=
 }

.dropdown-toggle-split::after, .dropright .dropdown-toggle-split::after, .d=
ropup .dropdown-toggle-split::after { margin-left: 0px; }

.dropleft .dropdown-toggle-split::before { margin-right: 0px; }

.btn-group-sm > .btn + .dropdown-toggle-split, .btn-sm + .dropdown-toggle-s=
plit { padding-right: 0.375rem; padding-left: 0.375rem; }

.btn-group-lg > .btn + .dropdown-toggle-split, .btn-lg + .dropdown-toggle-s=
plit { padding-right: 0.75rem; padding-left: 0.75rem; }

.btn-group-vertical { flex-direction: column; align-items: flex-start; just=
ify-content: center; }

.btn-group-vertical > .btn, .btn-group-vertical > .btn-group { width: 100%;=
 }

.btn-group-vertical > .btn-group:not(:first-child), .btn-group-vertical > .=
btn:not(:first-child) { margin-top: -1px; }

.btn-group-vertical > .btn-group:not(:last-child) > .btn, .btn-group-vertic=
al > .btn:not(:last-child):not(.dropdown-toggle) { border-bottom-right-radi=
us: 0px; border-bottom-left-radius: 0px; }

.btn-group-vertical > .btn-group:not(:first-child) > .btn, .btn-group-verti=
cal > .btn:not(:first-child) { border-top-left-radius: 0px; border-top-righ=
t-radius: 0px; }

.btn-group-toggle > .btn, .btn-group-toggle > .btn-group > .btn { margin-bo=
ttom: 0px; }

.btn-group-toggle > .btn input[type=3D"checkbox"], .btn-group-toggle > .btn=
 input[type=3D"radio"], .btn-group-toggle > .btn-group > .btn input[type=3D=
"checkbox"], .btn-group-toggle > .btn-group > .btn input[type=3D"radio"] { =
position: absolute; clip: rect(0px, 0px, 0px, 0px); pointer-events: none; }

.input-group { position: relative; display: flex; flex-wrap: wrap; align-it=
ems: stretch; width: 100%; }

.input-group > .custom-file, .input-group > .custom-select, .input-group > =
.form-control, .input-group > .form-control-plaintext { position: relative;=
 flex: 1 1 auto; width: 1%; margin-bottom: 0px; }

.input-group > .custom-file + .custom-file, .input-group > .custom-file + .=
custom-select, .input-group > .custom-file + .form-control, .input-group > =
.custom-select + .custom-file, .input-group > .custom-select + .custom-sele=
ct, .input-group > .custom-select + .form-control, .input-group > .form-con=
trol + .custom-file, .input-group > .form-control + .custom-select, .input-=
group > .form-control + .form-control, .input-group > .form-control-plainte=
xt + .custom-file, .input-group > .form-control-plaintext + .custom-select,=
 .input-group > .form-control-plaintext + .form-control { margin-left: -1px=
; }

.input-group > .custom-file .custom-file-input:focus ~ .custom-file-label, =
.input-group > .custom-select:focus, .input-group > .form-control:focus { z=
-index: 3; }

.input-group > .custom-file .custom-file-input:focus { z-index: 4; }

.input-group > .custom-select:not(:last-child), .input-group > .form-contro=
l:not(:last-child) { border-top-right-radius: 0px; border-bottom-right-radi=
us: 0px; }

.input-group > .custom-select:not(:first-child), .input-group > .form-contr=
ol:not(:first-child) { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.input-group > .custom-file { display: flex; align-items: center; }

.input-group > .custom-file:not(:last-child) .custom-file-label, .input-gro=
up > .custom-file:not(:last-child) .custom-file-label::after { border-top-r=
ight-radius: 0px; border-bottom-right-radius: 0px; }

.input-group > .custom-file:not(:first-child) .custom-file-label { border-t=
op-left-radius: 0px; border-bottom-left-radius: 0px; }

.input-group-append, .input-group-prepend { display: flex; }

.input-group-append .btn, .input-group-prepend .btn { position: relative; z=
-index: 2; }

.input-group-append .btn:focus, .input-group-prepend .btn:focus { z-index: =
3; }

.input-group-append .btn + .btn, .input-group-append .btn + .input-group-te=
xt, .input-group-append .input-group-text + .btn, .input-group-append .inpu=
t-group-text + .input-group-text, .input-group-prepend .btn + .btn, .input-=
group-prepend .btn + .input-group-text, .input-group-prepend .input-group-t=
ext + .btn, .input-group-prepend .input-group-text + .input-group-text { ma=
rgin-left: -1px; }

.input-group-prepend { margin-right: -1px; }

.input-group-append { margin-left: -1px; }

.input-group-text { display: flex; align-items: center; padding: 0.375rem 0=
.75rem; margin-bottom: 0px; font-size: 1rem; font-weight: 400; line-height:=
 1.5; color: rgb(73, 80, 87); text-align: center; white-space: nowrap; back=
ground-color: rgb(233, 236, 239); border: 1px solid rgb(206, 212, 218); bor=
der-radius: 0.25rem; }

.input-group-text input[type=3D"checkbox"], .input-group-text input[type=3D=
"radio"] { margin-top: 0px; }

.input-group-lg > .custom-select, .input-group-lg > .form-control:not(texta=
rea) { height: calc(1.5em + 1rem + 2px); }

.input-group-lg > .custom-select, .input-group-lg > .form-control, .input-g=
roup-lg > .input-group-append > .btn, .input-group-lg > .input-group-append=
 > .input-group-text, .input-group-lg > .input-group-prepend > .btn, .input=
-group-lg > .input-group-prepend > .input-group-text { padding: 0.5rem 1rem=
; font-size: 1.25rem; line-height: 1.5; border-radius: 0.3rem; }

.input-group-sm > .custom-select, .input-group-sm > .form-control:not(texta=
rea) { height: calc(1.5em + 0.5rem + 2px); }

.input-group-sm > .custom-select, .input-group-sm > .form-control, .input-g=
roup-sm > .input-group-append > .btn, .input-group-sm > .input-group-append=
 > .input-group-text, .input-group-sm > .input-group-prepend > .btn, .input=
-group-sm > .input-group-prepend > .input-group-text { padding: 0.25rem 0.5=
rem; font-size: 0.875rem; line-height: 1.5; border-radius: 0.2rem; }

.input-group-lg > .custom-select, .input-group-sm > .custom-select { paddin=
g-right: 1.75rem; }

.input-group > .input-group-append:last-child > .btn:not(:last-child):not(.=
dropdown-toggle), .input-group > .input-group-append:last-child > .input-gr=
oup-text:not(:last-child), .input-group > .input-group-append:not(:last-chi=
ld) > .btn, .input-group > .input-group-append:not(:last-child) > .input-gr=
oup-text, .input-group > .input-group-prepend > .btn, .input-group > .input=
-group-prepend > .input-group-text { border-top-right-radius: 0px; border-b=
ottom-right-radius: 0px; }

.input-group > .input-group-append > .btn, .input-group > .input-group-appe=
nd > .input-group-text, .input-group > .input-group-prepend:first-child > .=
btn:not(:first-child), .input-group > .input-group-prepend:first-child > .i=
nput-group-text:not(:first-child), .input-group > .input-group-prepend:not(=
:first-child) > .btn, .input-group > .input-group-prepend:not(:first-child)=
 > .input-group-text { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.custom-control { position: relative; display: block; min-height: 1.5rem; p=
adding-left: 1.5rem; }

.custom-control-inline { display: inline-flex; margin-right: 1rem; }

.custom-control-input { position: absolute; z-index: -1; opacity: 0; }

.custom-control-input:checked ~ .custom-control-label::before { color: rgb(=
255, 255, 255); border-color: rgb(0, 123, 255); background-color: rgb(0, 12=
3, 255); }

.custom-control-input:focus ~ .custom-control-label::before { box-shadow: r=
gba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-control-input:focus:not(:checked) ~ .custom-control-label::before {=
 border-color: rgb(128, 189, 255); }

.custom-control-input:not(:disabled):active ~ .custom-control-label::before=
 { color: rgb(255, 255, 255); background-color: rgb(179, 215, 255); border-=
color: rgb(179, 215, 255); }

.custom-control-input:disabled ~ .custom-control-label { color: rgb(108, 11=
7, 125); }

.custom-control-input:disabled ~ .custom-control-label::before { background=
-color: rgb(233, 236, 239); }

.custom-control-label { position: relative; margin-bottom: 0px; vertical-al=
ign: top; }

.custom-control-label::before { position: absolute; top: 0.25rem; left: -1.=
5rem; display: block; width: 1rem; height: 1rem; pointer-events: none; cont=
ent: ""; background-color: rgb(255, 255, 255); border: 1px solid rgb(173, 1=
81, 189); }

.custom-control-label::after { position: absolute; top: 0.25rem; left: -1.5=
rem; display: block; width: 1rem; height: 1rem; content: ""; background: 50=
% center / 50% 50% no-repeat; }

.custom-checkbox .custom-control-label::before { border-radius: 0.25rem; }

.custom-checkbox .custom-control-input:checked ~ .custom-control-label::aft=
er { background-image: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w=
3.org/2000/svg' viewBox=3D'0 0 8 8'%3e%3cpath fill=3D'%23fff' d=3D'M6.564.7=
5l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e"); }

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-labe=
l::before { border-color: rgb(0, 123, 255); background-color: rgb(0, 123, 2=
55); }

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-labe=
l::after { background-image: url("data:image/svg+xml,%3csvg xmlns=3D'http:/=
/www.w3.org/2000/svg' viewBox=3D'0 0 4 4'%3e%3cpath stroke=3D'%23fff' d=3D'=
M0 2h4'/%3e%3c/svg%3e"); }

.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-l=
abel::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-con=
trol-label::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-radio .custom-control-label::before { border-radius: 50%; }

.custom-radio .custom-control-input:checked ~ .custom-control-label::after =
{ background-image: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.o=
rg/2000/svg' viewBox=3D'-4 -4 8 8'%3e%3ccircle r=3D'3' fill=3D'%23fff'/%3e%=
3c/svg%3e"); }

.custom-radio .custom-control-input:disabled:checked ~ .custom-control-labe=
l::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-switch { padding-left: 2.25rem; }

.custom-switch .custom-control-label::before { left: -2.25rem; width: 1.75r=
em; pointer-events: all; border-radius: 0.5rem; }

.custom-switch .custom-control-label::after { top: calc(0.25rem + 2px); lef=
t: calc(-2.25rem + 2px); width: calc(1rem - 4px); height: calc(1rem - 4px);=
 background-color: rgb(173, 181, 189); border-radius: 0.5rem; transition: t=
ransform 0.15s ease-in-out 0s, background-color 0.15s ease-in-out 0s, borde=
r-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s, -webkit-tran=
sform 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .custom-switch .custom-control-label::after { transition: none 0s ease 0s=
; }
}

.custom-switch .custom-control-input:checked ~ .custom-control-label::after=
 { background-color: rgb(255, 255, 255); transform: translateX(0.75rem); }

.custom-switch .custom-control-input:disabled:checked ~ .custom-control-lab=
el::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-select { display: inline-block; width: 100%; height: calc(1.5em + 0=
.75rem + 2px); padding: 0.375rem 1.75rem 0.375rem 0.75rem; font-size: 1rem;=
 font-weight: 400; line-height: 1.5; color: rgb(73, 80, 87); vertical-align=
: middle; background: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3=
.org/2000/svg' viewBox=3D'0 0 4 5'%3e%3cpath fill=3D'%23343a40' d=3D'M2 0L0=
 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right 0.75rem center / 8px 10px no-repeat=
 rgb(255, 255, 255); border: 1px solid rgb(206, 212, 218); border-radius: 0=
.25rem; appearance: none; }

.custom-select:focus { border-color: rgb(128, 189, 255); outline: 0px; box-=
shadow: rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-select[multiple], .custom-select[size]:not([size=3D"1"]) { height: =
auto; padding-right: 0.75rem; background-image: none; }

.custom-select:disabled { color: rgb(108, 117, 125); background-color: rgb(=
233, 236, 239); }

.custom-select-sm { height: calc(1.5em + 0.5rem + 2px); padding-top: 0.25re=
m; padding-bottom: 0.25rem; padding-left: 0.5rem; font-size: 0.875rem; }

.custom-select-lg { height: calc(1.5em + 1rem + 2px); padding-top: 0.5rem; =
padding-bottom: 0.5rem; padding-left: 1rem; font-size: 1.25rem; }

.custom-file { position: relative; display: inline-block; width: 100%; heig=
ht: calc(1.5em + 0.75rem + 2px); margin-bottom: 0px; }

.custom-file-input { position: relative; z-index: 2; width: 100%; height: c=
alc(1.5em + 0.75rem + 2px); margin: 0px; opacity: 0; }

.custom-file-input:focus ~ .custom-file-label { border-color: rgb(128, 189,=
 255); box-shadow: rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-file-input:disabled ~ .custom-file-label { background-color: rgb(23=
3, 236, 239); }

.custom-file-input:lang(en) ~ .custom-file-label::after { content: "Browse"=
; }

.custom-file-input ~ .custom-file-label[data-browse]::after { content: attr=
(data-browse); }

.custom-file-label { position: absolute; top: 0px; right: 0px; left: 0px; z=
-index: 1; height: calc(1.5em + 0.75rem + 2px); padding: 0.375rem 0.75rem; =
font-weight: 400; line-height: 1.5; color: rgb(73, 80, 87); background-colo=
r: rgb(255, 255, 255); border: 1px solid rgb(206, 212, 218); border-radius:=
 0.25rem; }

.custom-file-label::after { position: absolute; top: 0px; right: 0px; botto=
m: 0px; z-index: 3; display: block; height: calc(1.5em + 0.75rem); padding:=
 0.375rem 0.75rem; line-height: 1.5; color: rgb(73, 80, 87); content: "Brow=
se"; background-color: rgb(233, 236, 239); border-left: inherit; border-rad=
ius: 0px 0.25rem 0.25rem 0px; }

.custom-range { width: 100%; height: calc(1.4rem); padding: 0px; background=
-color: transparent; appearance: none; }

.custom-range:focus { outline: 0px; }

.custom-range:focus::-webkit-slider-thumb { box-shadow: rgb(255, 255, 255) =
0px 0px 0px 1px, rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-range::-webkit-slider-thumb { width: 1rem; height: 1rem; margin-top=
: -0.25rem; background-color: rgb(0, 123, 255); border: 0px; border-radius:=
 1rem; transition: background-color 0.15s ease-in-out 0s, border-color 0.15=
s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s; appearance: none; }

@media (prefers-reduced-motion: reduce) {
  .custom-range::-webkit-slider-thumb { transition: none 0s ease 0s; }
}

.custom-range::-webkit-slider-thumb:active { background-color: rgb(179, 215=
, 255); }

.custom-range::-webkit-slider-runnable-track { width: 100%; height: 0.5rem;=
 color: transparent; cursor: pointer; background-color: rgb(222, 226, 230);=
 border-color: transparent; border-radius: 1rem; }

@media (prefers-reduced-motion: reduce) {
}

@media (prefers-reduced-motion: reduce) {
}

.custom-range:disabled::-webkit-slider-thumb { background-color: rgb(173, 1=
81, 189); }

.custom-range:disabled::-webkit-slider-runnable-track { cursor: default; }

.custom-control-label::before, .custom-file-label, .custom-select { transit=
ion: background-color 0.15s ease-in-out 0s, border-color 0.15s ease-in-out =
0s, box-shadow 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .custom-control-label::before, .custom-file-label, .custom-select { trans=
ition: none 0s ease 0s; }
}

.nav { display: flex; flex-wrap: wrap; padding-left: 0px; margin-bottom: 0p=
x; list-style: none; }

.nav-link { display: block; padding: 0.5rem 1rem; }

.nav-link:focus, .nav-link:hover { text-decoration: none; }

.nav-link.disabled { color: rgb(108, 117, 125); pointer-events: none; curso=
r: default; }

.nav-tabs { border-bottom: 1px solid rgb(222, 226, 230); }

.nav-tabs .nav-item { margin-bottom: -1px; }

.nav-tabs .nav-link { border: 1px solid transparent; border-top-left-radius=
: 0.25rem; border-top-right-radius: 0.25rem; }

.nav-tabs .nav-link:focus, .nav-tabs .nav-link:hover { border-color: rgb(23=
3, 236, 239) rgb(233, 236, 239) rgb(222, 226, 230); }

.nav-tabs .nav-link.disabled { color: rgb(108, 117, 125); background-color:=
 transparent; border-color: transparent; }

.nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active { color: rgb=
(73, 80, 87); background-color: rgb(255, 255, 255); border-color: rgb(222, =
226, 230) rgb(222, 226, 230) rgb(255, 255, 255); }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-left-radius: 0px; b=
order-top-right-radius: 0px; }

.nav-pills .nav-link { border-radius: 0.25rem; }

.nav-pills .nav-link.active, .nav-pills .show > .nav-link { color: rgb(255,=
 255, 255); background-color: rgb(0, 123, 255); }

.nav-fill .nav-item { flex: 1 1 auto; text-align: center; }

.nav-justified .nav-item { flex-basis: 0px; flex-grow: 1; text-align: cente=
r; }

.tab-content > .tab-pane { display: none; }

.tab-content > .active { display: block; }

.navbar { position: relative; display: flex; flex-wrap: wrap; align-items: =
center; justify-content: space-between; padding: 0.5rem 1rem; }

.navbar > .container, .navbar > .container-fluid { display: flex; flex-wrap=
: wrap; align-items: center; justify-content: space-between; }

.navbar-brand { display: inline-block; padding-top: 0.3125rem; padding-bott=
om: 0.3125rem; margin-right: 1rem; font-size: 1.25rem; line-height: inherit=
; white-space: nowrap; }

.navbar-brand:focus, .navbar-brand:hover { text-decoration: none; }

.navbar-nav { display: flex; flex-direction: column; padding-left: 0px; mar=
gin-bottom: 0px; list-style: none; }

.navbar-nav .nav-link { padding-right: 0px; padding-left: 0px; }

.navbar-nav .dropdown-menu { position: static; float: none; }

.navbar-text { display: inline-block; padding-top: 0.5rem; padding-bottom: =
0.5rem; }

.navbar-collapse { flex-basis: 100%; flex-grow: 1; align-items: center; }

.navbar-toggler { padding: 0.25rem 0.75rem; font-size: 1.25rem; line-height=
: 1; background-color: transparent; border: 1px solid transparent; border-r=
adius: 0.25rem; }

.navbar-toggler:focus, .navbar-toggler:hover { text-decoration: none; }

.navbar-toggler-icon { display: inline-block; width: 1.5em; height: 1.5em; =
vertical-align: middle; content: ""; background: center center / 100% 100% =
no-repeat; }

@media (max-width: 575.98px) {
  .navbar-expand-sm > .container, .navbar-expand-sm > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 576px) {
  .navbar-expand-sm { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-sm .navbar-nav { flex-direction: row; }
  .navbar-expand-sm .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-sm .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-sm > .container, .navbar-expand-sm > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-sm .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-sm .navbar-toggler { display: none; }
}

@media (max-width: 767.98px) {
  .navbar-expand-md > .container, .navbar-expand-md > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 768px) {
  .navbar-expand-md { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-md .navbar-nav { flex-direction: row; }
  .navbar-expand-md .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-md .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-md > .container, .navbar-expand-md > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-md .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-md .navbar-toggler { display: none; }
}

@media (max-width: 991.98px) {
  .navbar-expand-lg > .container, .navbar-expand-lg > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 992px) {
  .navbar-expand-lg { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-lg .navbar-nav { flex-direction: row; }
  .navbar-expand-lg .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-lg .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-lg > .container, .navbar-expand-lg > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-lg .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-lg .navbar-toggler { display: none; }
}

@media (max-width: 1199.98px) {
  .navbar-expand-xl > .container, .navbar-expand-xl > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 1200px) {
  .navbar-expand-xl { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-xl .navbar-nav { flex-direction: row; }
  .navbar-expand-xl .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-xl .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-xl > .container, .navbar-expand-xl > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-xl .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-xl .navbar-toggler { display: none; }
}

.navbar-expand { flex-flow: row nowrap; justify-content: flex-start; }

.navbar-expand > .container, .navbar-expand > .container-fluid { padding-ri=
ght: 0px; padding-left: 0px; }

.navbar-expand .navbar-nav { flex-direction: row; }

.navbar-expand .navbar-nav .dropdown-menu { position: absolute; }

.navbar-expand .navbar-nav .nav-link { padding-right: 0.5rem; padding-left:=
 0.5rem; }

.navbar-expand > .container, .navbar-expand > .container-fluid { flex-wrap:=
 nowrap; }

.navbar-expand .navbar-collapse { flex-basis: auto; display: flex !importan=
t; }

.navbar-expand .navbar-toggler { display: none; }

.navbar-light .navbar-brand { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-brand:focus, .navbar-light .navbar-brand:hover { colo=
r: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-nav .nav-link { color: rgba(0, 0, 0, 0.5); }

.navbar-light .navbar-nav .nav-link:focus, .navbar-light .navbar-nav .nav-l=
ink:hover { color: rgba(0, 0, 0, 0.7); }

.navbar-light .navbar-nav .nav-link.disabled { color: rgba(0, 0, 0, 0.3); }

.navbar-light .navbar-nav .active > .nav-link, .navbar-light .navbar-nav .n=
av-link.active, .navbar-light .navbar-nav .nav-link.show, .navbar-light .na=
vbar-nav .show > .nav-link { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-toggler { color: rgba(0, 0, 0, 0.5); border-color: rg=
ba(0, 0, 0, 0.1); }

.navbar-light .navbar-toggler-icon { background-image: url("data:image/svg+=
xml,%3csvg viewBox=3D'0 0 30 30' xmlns=3D'http://www.w3.org/2000/svg'%3e%3c=
path stroke=3D'rgba(0, 0, 0, 0.5)' stroke-width=3D'2' stroke-linecap=3D'rou=
nd' stroke-miterlimit=3D'10' d=3D'M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");=
 }

.navbar-light .navbar-text { color: rgba(0, 0, 0, 0.5); }

.navbar-light .navbar-text a { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-text a:focus, .navbar-light .navbar-text a:hover { co=
lor: rgba(0, 0, 0, 0.9); }

.navbar-dark .navbar-brand { color: rgb(255, 255, 255); }

.navbar-dark .navbar-brand:focus, .navbar-dark .navbar-brand:hover { color:=
 rgb(255, 255, 255); }

.navbar-dark .navbar-nav .nav-link { color: rgba(255, 255, 255, 0.5); }

.navbar-dark .navbar-nav .nav-link:focus, .navbar-dark .navbar-nav .nav-lin=
k:hover { color: rgba(255, 255, 255, 0.75); }

.navbar-dark .navbar-nav .nav-link.disabled { color: rgba(255, 255, 255, 0.=
25); }

.navbar-dark .navbar-nav .active > .nav-link, .navbar-dark .navbar-nav .nav=
-link.active, .navbar-dark .navbar-nav .nav-link.show, .navbar-dark .navbar=
-nav .show > .nav-link { color: rgb(255, 255, 255); }

.navbar-dark .navbar-toggler { color: rgba(255, 255, 255, 0.5); border-colo=
r: rgba(255, 255, 255, 0.1); }

.navbar-dark .navbar-toggler-icon { background-image: url("data:image/svg+x=
ml,%3csvg viewBox=3D'0 0 30 30' xmlns=3D'http://www.w3.org/2000/svg'%3e%3cp=
ath stroke=3D'rgba(255, 255, 255, 0.5)' stroke-width=3D'2' stroke-linecap=
=3D'round' stroke-miterlimit=3D'10' d=3D'M4 7h22M4 15h22M4 23h22'/%3e%3c/sv=
g%3e"); }

.navbar-dark .navbar-text { color: rgba(255, 255, 255, 0.5); }

.navbar-dark .navbar-text a { color: rgb(255, 255, 255); }

.navbar-dark .navbar-text a:focus, .navbar-dark .navbar-text a:hover { colo=
r: rgb(255, 255, 255); }

.card { position: relative; display: flex; flex-direction: column; min-widt=
h: 0px; overflow-wrap: break-word; background-color: rgb(255, 255, 255); ba=
ckground-clip: border-box; border: 1px solid rgba(0, 0, 0, 0.125); border-r=
adius: 0.25rem; }

.card > hr { margin-right: 0px; margin-left: 0px; }

.card > .list-group:first-child .list-group-item:first-child { border-top-l=
eft-radius: 0.25rem; border-top-right-radius: 0.25rem; }

.card > .list-group:last-child .list-group-item:last-child { border-bottom-=
right-radius: 0.25rem; border-bottom-left-radius: 0.25rem; }

.card-body { flex: 1 1 auto; padding: 1.25rem; }

.card-title { margin-bottom: 0.75rem; }

.card-subtitle { margin-top: -0.375rem; margin-bottom: 0px; }

.card-text:last-child { margin-bottom: 0px; }

.card-link:hover { text-decoration: none; }

.card-link + .card-link { margin-left: 1.25rem; }

.card-header { padding: 0.75rem 1.25rem; margin-bottom: 0px; background-col=
or: rgba(0, 0, 0, 0.03); border-bottom: 1px solid rgba(0, 0, 0, 0.125); }

.card-header:first-child { border-radius: calc(0.25rem - 1px) calc(0.25rem =
- 1px) 0px 0px; }

.card-header + .list-group .list-group-item:first-child { border-top: 0px; =
}

.card-footer { padding: 0.75rem 1.25rem; background-color: rgba(0, 0, 0, 0.=
03); border-top: 1px solid rgba(0, 0, 0, 0.125); }

.card-footer:last-child { border-radius: 0px 0px calc(0.25rem - 1px) calc(0=
.25rem - 1px); }

.card-header-tabs { margin-right: -0.625rem; margin-bottom: -0.75rem; margi=
n-left: -0.625rem; border-bottom: 0px; }

.card-header-pills { margin-right: -0.625rem; margin-left: -0.625rem; }

.card-img-overlay { position: absolute; inset: 0px; padding: 1.25rem; }

.card-img { width: 100%; border-radius: calc(0.25rem - 1px); }

.card-img-top { width: 100%; border-top-left-radius: calc(0.25rem - 1px); b=
order-top-right-radius: calc(0.25rem - 1px); }

.card-img-bottom { width: 100%; border-bottom-right-radius: calc(0.25rem - =
1px); border-bottom-left-radius: calc(0.25rem - 1px); }

.card-deck { display: flex; flex-direction: column; }

.card-deck .card { margin-bottom: 15px; }

@media (min-width: 576px) {
  .card-deck { flex-flow: row wrap; margin-right: -15px; margin-left: -15px=
; }
  .card-deck .card { display: flex; flex: 1 0 0%; flex-direction: column; m=
argin-right: 15px; margin-bottom: 0px; margin-left: 15px; }
}

.card-group { display: flex; flex-direction: column; }

.card-group > .card { margin-bottom: 15px; }

@media (min-width: 576px) {
  .card-group { flex-flow: row wrap; }
  .card-group > .card { flex: 1 0 0%; margin-bottom: 0px; }
  .card-group > .card + .card { margin-left: 0px; border-left: 0px; }
  .card-group > .card:not(:last-child) { border-top-right-radius: 0px; bord=
er-bottom-right-radius: 0px; }
  .card-group > .card:not(:last-child) .card-header, .card-group > .card:no=
t(:last-child) .card-img-top { border-top-right-radius: 0px; }
  .card-group > .card:not(:last-child) .card-footer, .card-group > .card:no=
t(:last-child) .card-img-bottom { border-bottom-right-radius: 0px; }
  .card-group > .card:not(:first-child) { border-top-left-radius: 0px; bord=
er-bottom-left-radius: 0px; }
  .card-group > .card:not(:first-child) .card-header, .card-group > .card:n=
ot(:first-child) .card-img-top { border-top-left-radius: 0px; }
  .card-group > .card:not(:first-child) .card-footer, .card-group > .card:n=
ot(:first-child) .card-img-bottom { border-bottom-left-radius: 0px; }
}

.card-columns .card { margin-bottom: 0.75rem; }

@media (min-width: 576px) {
  .card-columns { column-count: 3; column-gap: 1.25rem; orphans: 1; widows:=
 1; }
  .card-columns .card { display: inline-block; width: 100%; }
}

.accordion > .card { overflow: hidden; }

.accordion > .card:not(:first-of-type) .card-header:first-child { border-ra=
dius: 0px; }

.accordion > .card:not(:first-of-type):not(:last-of-type) { border-bottom: =
0px; border-radius: 0px; }

.accordion > .card:first-of-type { border-bottom: 0px; border-bottom-right-=
radius: 0px; border-bottom-left-radius: 0px; }

.accordion > .card:last-of-type { border-top-left-radius: 0px; border-top-r=
ight-radius: 0px; }

.accordion > .card .card-header { margin-bottom: -1px; }

.breadcrumb { display: flex; flex-wrap: wrap; padding: 0.75rem 1rem; margin=
-bottom: 1rem; list-style: none; background-color: rgb(233, 236, 239); bord=
er-radius: 0.25rem; }

.breadcrumb-item + .breadcrumb-item { padding-left: 0.5rem; }

.breadcrumb-item + .breadcrumb-item::before { display: inline-block; paddin=
g-right: 0.5rem; color: rgb(108, 117, 125); content: "/"; }

.breadcrumb-item + .breadcrumb-item:hover::before { text-decoration: underl=
ine; }

.breadcrumb-item + .breadcrumb-item:hover::before { text-decoration: none; =
}

.breadcrumb-item.active { color: rgb(108, 117, 125); }

.pagination { display: flex; padding-left: 0px; list-style: none; border-ra=
dius: 0.25rem; }

.page-link { position: relative; display: block; padding: 0.5rem 0.75rem; m=
argin-left: -1px; line-height: 1.25; color: rgb(0, 123, 255); background-co=
lor: rgb(255, 255, 255); border: 1px solid rgb(222, 226, 230); }

.page-link:hover { z-index: 2; color: rgb(0, 86, 179); text-decoration: non=
e; background-color: rgb(233, 236, 239); border-color: rgb(222, 226, 230); =
}

.page-link:focus { z-index: 2; outline: 0px; box-shadow: rgba(0, 123, 255, =
0.25) 0px 0px 0px 0.2rem; }

.page-item:first-child .page-link { margin-left: 0px; border-top-left-radiu=
s: 0.25rem; border-bottom-left-radius: 0.25rem; }

.page-item:last-child .page-link { border-top-right-radius: 0.25rem; border=
-bottom-right-radius: 0.25rem; }

.page-item.active .page-link { z-index: 1; color: rgb(255, 255, 255); backg=
round-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.page-item.disabled .page-link { color: rgb(108, 117, 125); pointer-events:=
 none; cursor: auto; background-color: rgb(255, 255, 255); border-color: rg=
b(222, 226, 230); }

.pagination-lg .page-link { padding: 0.75rem 1.5rem; font-size: 1.25rem; li=
ne-height: 1.5; }

.pagination-lg .page-item:first-child .page-link { border-top-left-radius: =
0.3rem; border-bottom-left-radius: 0.3rem; }

.pagination-lg .page-item:last-child .page-link { border-top-right-radius: =
0.3rem; border-bottom-right-radius: 0.3rem; }

.pagination-sm .page-link { padding: 0.25rem 0.5rem; font-size: 0.875rem; l=
ine-height: 1.5; }

.pagination-sm .page-item:first-child .page-link { border-top-left-radius: =
0.2rem; border-bottom-left-radius: 0.2rem; }

.pagination-sm .page-item:last-child .page-link { border-top-right-radius: =
0.2rem; border-bottom-right-radius: 0.2rem; }

.badge { display: inline-block; padding: 0.25em 0.4em; font-size: 75%; font=
-weight: 700; line-height: 1; text-align: center; white-space: nowrap; vert=
ical-align: baseline; border-radius: 0.25rem; transition: color 0.15s ease-=
in-out 0s, background-color 0.15s ease-in-out 0s, border-color 0.15s ease-i=
n-out 0s, box-shadow 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .badge { transition: none 0s ease 0s; }
}

a.badge:focus, a.badge:hover { text-decoration: none; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

.badge-pill { padding-right: 0.6em; padding-left: 0.6em; border-radius: 10r=
em; }

.badge-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 2=
55); }

a.badge-primary:focus, a.badge-primary:hover { color: rgb(255, 255, 255); b=
ackground-color: rgb(0, 98, 204); }

a.badge-primary.focus, a.badge-primary:focus { outline: 0px; box-shadow: rg=
ba(0, 123, 255, 0.5) 0px 0px 0px 0.2rem; }

.badge-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 11=
7, 125); }

a.badge-secondary:focus, a.badge-secondary:hover { color: rgb(255, 255, 255=
); background-color: rgb(84, 91, 98); }

a.badge-secondary.focus, a.badge-secondary:focus { outline: 0px; box-shadow=
: rgba(108, 117, 125, 0.5) 0px 0px 0px 0.2rem; }

.badge-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, =
69); }

a.badge-success:focus, a.badge-success:hover { color: rgb(255, 255, 255); b=
ackground-color: rgb(30, 126, 52); }

a.badge-success.focus, a.badge-success:focus { outline: 0px; box-shadow: rg=
ba(40, 167, 69, 0.5) 0px 0px 0px 0.2rem; }

.badge-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184=
); }

a.badge-info:focus, a.badge-info:hover { color: rgb(255, 255, 255); backgro=
und-color: rgb(17, 122, 139); }

a.badge-info.focus, a.badge-info:focus { outline: 0px; box-shadow: rgba(23,=
 162, 184, 0.5) 0px 0px 0px 0.2rem; }

.badge-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7)=
; }

a.badge-warning:focus, a.badge-warning:hover { color: rgb(33, 37, 41); back=
ground-color: rgb(211, 158, 0); }

a.badge-warning.focus, a.badge-warning:focus { outline: 0px; box-shadow: rg=
ba(255, 193, 7, 0.5) 0px 0px 0px 0.2rem; }

.badge-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 6=
9); }

a.badge-danger:focus, a.badge-danger:hover { color: rgb(255, 255, 255); bac=
kground-color: rgb(189, 33, 48); }

a.badge-danger.focus, a.badge-danger:focus { outline: 0px; box-shadow: rgba=
(220, 53, 69, 0.5) 0px 0px 0px 0.2rem; }

.badge-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250)=
; }

a.badge-light:focus, a.badge-light:hover { color: rgb(33, 37, 41); backgrou=
nd-color: rgb(218, 224, 229); }

a.badge-light.focus, a.badge-light:focus { outline: 0px; box-shadow: rgba(2=
48, 249, 250, 0.5) 0px 0px 0px 0.2rem; }

.badge-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64);=
 }

a.badge-dark:focus, a.badge-dark:hover { color: rgb(255, 255, 255); backgro=
und-color: rgb(29, 33, 36); }

a.badge-dark.focus, a.badge-dark:focus { outline: 0px; box-shadow: rgba(52,=
 58, 64, 0.5) 0px 0px 0px 0.2rem; }

.jumbotron { padding: 2rem 1rem; margin-bottom: 2rem; background-color: rgb=
(233, 236, 239); border-radius: 0.3rem; }

@media (min-width: 576px) {
  .jumbotron { padding: 4rem 2rem; }
}

.jumbotron-fluid { padding-right: 0px; padding-left: 0px; border-radius: 0p=
x; }

.alert { position: relative; padding: 0.75rem 1.25rem; margin-bottom: 1rem;=
 border: 1px solid transparent; border-radius: 0.25rem; }

.alert-heading { color: inherit; }

.alert-link { font-weight: 700; }

.alert-dismissible { padding-right: 4rem; }

.alert-dismissible .close { position: absolute; top: 0px; right: 0px; paddi=
ng: 0.75rem 1.25rem; color: inherit; }

.alert-primary { color: rgb(0, 64, 133); background-color: rgb(204, 229, 25=
5); border-color: rgb(184, 218, 255); }

.alert-primary hr { border-top-color: rgb(159, 205, 255); }

.alert-primary .alert-link { color: rgb(0, 39, 82); }

.alert-secondary { color: rgb(56, 61, 65); background-color: rgb(226, 227, =
229); border-color: rgb(214, 216, 219); }

.alert-secondary hr { border-top-color: rgb(200, 203, 207); }

.alert-secondary .alert-link { color: rgb(32, 35, 38); }

.alert-success { color: rgb(21, 87, 36); background-color: rgb(212, 237, 21=
8); border-color: rgb(195, 230, 203); }

.alert-success hr { border-top-color: rgb(177, 223, 187); }

.alert-success .alert-link { color: rgb(11, 46, 19); }

.alert-info { color: rgb(12, 84, 96); background-color: rgb(209, 236, 241);=
 border-color: rgb(190, 229, 235); }

.alert-info hr { border-top-color: rgb(171, 221, 229); }

.alert-info .alert-link { color: rgb(6, 44, 51); }

.alert-warning { color: rgb(133, 100, 4); background-color: rgb(255, 243, 2=
05); border-color: rgb(255, 238, 186); }

.alert-warning hr { border-top-color: rgb(255, 232, 161); }

.alert-warning .alert-link { color: rgb(83, 63, 3); }

.alert-danger { color: rgb(114, 28, 36); background-color: rgb(248, 215, 21=
8); border-color: rgb(245, 198, 203); }

.alert-danger hr { border-top-color: rgb(241, 176, 183); }

.alert-danger .alert-link { color: rgb(73, 18, 23); }

.alert-light { color: rgb(129, 129, 130); background-color: rgb(254, 254, 2=
54); border-color: rgb(253, 253, 254); }

.alert-light hr { border-top-color: rgb(236, 236, 246); }

.alert-light .alert-link { color: rgb(104, 104, 104); }

.alert-dark { color: rgb(27, 30, 33); background-color: rgb(214, 216, 217);=
 border-color: rgb(198, 200, 202); }

.alert-dark hr { border-top-color: rgb(185, 187, 190); }

.alert-dark .alert-link { color: rgb(4, 5, 5); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 1rem 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 1rem 0px; }
  100% { background-position: 0px 0px; }
}

.progress { display: flex; height: 1rem; overflow: hidden; font-size: 0.75r=
em; background-color: rgb(233, 236, 239); border-radius: 0.25rem; }

.progress-bar { display: flex; flex-direction: column; justify-content: cen=
ter; color: rgb(255, 255, 255); text-align: center; white-space: nowrap; ba=
ckground-color: rgb(0, 123, 255); transition: width 0.6s ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .progress-bar { transition: none 0s ease 0s; }
}

.progress-bar-striped { background-image: linear-gradient(45deg, rgba(255, =
255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, =
0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); ba=
ckground-size: 1rem 1rem; }

.progress-bar-animated { animation: 1s linear 0s infinite normal none runni=
ng progress-bar-stripes; }

@media (prefers-reduced-motion: reduce) {
  .progress-bar-animated { animation: 0s ease 0s 1 normal none running none=
; }
}

.media { display: flex; align-items: flex-start; }

.media-body { flex: 1 1 0%; }

.list-group { display: flex; flex-direction: column; padding-left: 0px; mar=
gin-bottom: 0px; }

.list-group-item-action { width: 100%; color: rgb(73, 80, 87); text-align: =
inherit; }

.list-group-item-action:focus, .list-group-item-action:hover { z-index: 1; =
color: rgb(73, 80, 87); text-decoration: none; background-color: rgb(248, 2=
49, 250); }

.list-group-item-action:active { color: rgb(33, 37, 41); background-color: =
rgb(233, 236, 239); }

.list-group-item { position: relative; display: block; padding: 0.75rem 1.2=
5rem; margin-bottom: -1px; background-color: rgb(255, 255, 255); border: 1p=
x solid rgba(0, 0, 0, 0.125); }

.list-group-item:first-child { border-top-left-radius: 0.25rem; border-top-=
right-radius: 0.25rem; }

.list-group-item:last-child { margin-bottom: 0px; border-bottom-right-radiu=
s: 0.25rem; border-bottom-left-radius: 0.25rem; }

.list-group-item.disabled, .list-group-item:disabled { color: rgb(108, 117,=
 125); pointer-events: none; background-color: rgb(255, 255, 255); }

.list-group-item.active { z-index: 2; color: rgb(255, 255, 255); background=
-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.list-group-horizontal { flex-direction: row; }

.list-group-horizontal .list-group-item { margin-right: -1px; margin-bottom=
: 0px; }

.list-group-horizontal .list-group-item:first-child { border-top-left-radiu=
s: 0.25rem; border-bottom-left-radius: 0.25rem; border-top-right-radius: 0p=
x; }

.list-group-horizontal .list-group-item:last-child { margin-right: 0px; bor=
der-top-right-radius: 0.25rem; border-bottom-right-radius: 0.25rem; border-=
bottom-left-radius: 0px; }

@media (min-width: 576px) {
  .list-group-horizontal-sm { flex-direction: row; }
  .list-group-horizontal-sm .list-group-item { margin-right: -1px; margin-b=
ottom: 0px; }
  .list-group-horizontal-sm .list-group-item:first-child { border-top-left-=
radius: 0.25rem; border-bottom-left-radius: 0.25rem; border-top-right-radiu=
s: 0px; }
  .list-group-horizontal-sm .list-group-item:last-child { margin-right: 0px=
; border-top-right-radius: 0.25rem; border-bottom-right-radius: 0.25rem; bo=
rder-bottom-left-radius: 0px; }
}

@media (min-width: 768px) {
  .list-group-horizontal-md { flex-direction: row; }
  .list-group-horizontal-md .list-group-item { margin-right: -1px; margin-b=
ottom: 0px; }
  .list-group-horizontal-md .list-group-item:first-child { border-top-left-=
radius: 0.25rem; border-bottom-left-radius: 0.25rem; border-top-right-radiu=
s: 0px; }
  .list-group-horizontal-md .list-group-item:last-child { margin-right: 0px=
; border-top-right-radius: 0.25rem; border-bottom-right-radius: 0.25rem; bo=
rder-bottom-left-radius: 0px; }
}

@media (min-width: 992px) {
  .list-group-horizontal-lg { flex-direction: row; }
  .list-group-horizontal-lg .list-group-item { margin-right: -1px; margin-b=
ottom: 0px; }
  .list-group-horizontal-lg .list-group-item:first-child { border-top-left-=
radius: 0.25rem; border-bottom-left-radius: 0.25rem; border-top-right-radiu=
s: 0px; }
  .list-group-horizontal-lg .list-group-item:last-child { margin-right: 0px=
; border-top-right-radius: 0.25rem; border-bottom-right-radius: 0.25rem; bo=
rder-bottom-left-radius: 0px; }
}

@media (min-width: 1200px) {
  .list-group-horizontal-xl { flex-direction: row; }
  .list-group-horizontal-xl .list-group-item { margin-right: -1px; margin-b=
ottom: 0px; }
  .list-group-horizontal-xl .list-group-item:first-child { border-top-left-=
radius: 0.25rem; border-bottom-left-radius: 0.25rem; border-top-right-radiu=
s: 0px; }
  .list-group-horizontal-xl .list-group-item:last-child { margin-right: 0px=
; border-top-right-radius: 0.25rem; border-bottom-right-radius: 0.25rem; bo=
rder-bottom-left-radius: 0px; }
}

.list-group-flush .list-group-item { border-right: 0px; border-left: 0px; b=
order-radius: 0px; }

.list-group-flush .list-group-item:last-child { margin-bottom: -1px; }

.list-group-flush:first-child .list-group-item:first-child { border-top: 0p=
x; }

.list-group-flush:last-child .list-group-item:last-child { margin-bottom: 0=
px; border-bottom: 0px; }

.list-group-item-primary { color: rgb(0, 64, 133); background-color: rgb(18=
4, 218, 255); }

.list-group-item-primary.list-group-item-action:focus, .list-group-item-pri=
mary.list-group-item-action:hover { color: rgb(0, 64, 133); background-colo=
r: rgb(159, 205, 255); }

.list-group-item-primary.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(0, 64, 133); border-color: rgb(0, 64, 133); =
}

.list-group-item-secondary { color: rgb(56, 61, 65); background-color: rgb(=
214, 216, 219); }

.list-group-item-secondary.list-group-item-action:focus, .list-group-item-s=
econdary.list-group-item-action:hover { color: rgb(56, 61, 65); background-=
color: rgb(200, 203, 207); }

.list-group-item-secondary.list-group-item-action.active { color: rgb(255, =
255, 255); background-color: rgb(56, 61, 65); border-color: rgb(56, 61, 65)=
; }

.list-group-item-success { color: rgb(21, 87, 36); background-color: rgb(19=
5, 230, 203); }

.list-group-item-success.list-group-item-action:focus, .list-group-item-suc=
cess.list-group-item-action:hover { color: rgb(21, 87, 36); background-colo=
r: rgb(177, 223, 187); }

.list-group-item-success.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(21, 87, 36); border-color: rgb(21, 87, 36); =
}

.list-group-item-info { color: rgb(12, 84, 96); background-color: rgb(190, =
229, 235); }

.list-group-item-info.list-group-item-action:focus, .list-group-item-info.l=
ist-group-item-action:hover { color: rgb(12, 84, 96); background-color: rgb=
(171, 221, 229); }

.list-group-item-info.list-group-item-action.active { color: rgb(255, 255, =
255); background-color: rgb(12, 84, 96); border-color: rgb(12, 84, 96); }

.list-group-item-warning { color: rgb(133, 100, 4); background-color: rgb(2=
55, 238, 186); }

.list-group-item-warning.list-group-item-action:focus, .list-group-item-war=
ning.list-group-item-action:hover { color: rgb(133, 100, 4); background-col=
or: rgb(255, 232, 161); }

.list-group-item-warning.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(133, 100, 4); border-color: rgb(133, 100, 4)=
; }

.list-group-item-danger { color: rgb(114, 28, 36); background-color: rgb(24=
5, 198, 203); }

.list-group-item-danger.list-group-item-action:focus, .list-group-item-dang=
er.list-group-item-action:hover { color: rgb(114, 28, 36); background-color=
: rgb(241, 176, 183); }

.list-group-item-danger.list-group-item-action.active { color: rgb(255, 255=
, 255); background-color: rgb(114, 28, 36); border-color: rgb(114, 28, 36);=
 }

.list-group-item-light { color: rgb(129, 129, 130); background-color: rgb(2=
53, 253, 254); }

.list-group-item-light.list-group-item-action:focus, .list-group-item-light=
.list-group-item-action:hover { color: rgb(129, 129, 130); background-color=
: rgb(236, 236, 246); }

.list-group-item-light.list-group-item-action.active { color: rgb(255, 255,=
 255); background-color: rgb(129, 129, 130); border-color: rgb(129, 129, 13=
0); }

.list-group-item-dark { color: rgb(27, 30, 33); background-color: rgb(198, =
200, 202); }

.list-group-item-dark.list-group-item-action:focus, .list-group-item-dark.l=
ist-group-item-action:hover { color: rgb(27, 30, 33); background-color: rgb=
(185, 187, 190); }

.list-group-item-dark.list-group-item-action.active { color: rgb(255, 255, =
255); background-color: rgb(27, 30, 33); border-color: rgb(27, 30, 33); }

.close { float: right; font-size: 1.5rem; font-weight: 700; line-height: 1;=
 color: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity:=
 0.5; }

.close:hover { color: rgb(0, 0, 0); text-decoration: none; }

.close:not(:disabled):not(.disabled):focus, .close:not(:disabled):not(.disa=
bled):hover { opacity: 0.75; }

button.close { padding: 0px; background-color: transparent; border: 0px; ap=
pearance: none; }

a.close.disabled { pointer-events: none; }

.toast { max-width: 350px; overflow: hidden; font-size: 0.875rem; backgroun=
d-color: rgba(255, 255, 255, 0.85); background-clip: padding-box; border: 1=
px solid rgba(0, 0, 0, 0.1); box-shadow: rgba(0, 0, 0, 0.1) 0px 0.25rem 0.7=
5rem; backdrop-filter: blur(10px); opacity: 0; border-radius: 0.25rem; }

.toast:not(:last-child) { margin-bottom: 0.75rem; }

.toast.showing { opacity: 1; }

.toast.show { display: block; opacity: 1; }

.toast.hide { display: none; }

.toast-header { display: flex; align-items: center; padding: 0.25rem 0.75re=
m; color: rgb(108, 117, 125); background-color: rgba(255, 255, 255, 0.85); =
background-clip: padding-box; border-bottom: 1px solid rgba(0, 0, 0, 0.05);=
 }

.toast-body { padding: 0.75rem; }

.modal-open { overflow: hidden; }

.modal-open .modal { overflow: hidden auto; }

.modal { position: fixed; top: 0px; left: 0px; z-index: 1050; display: none=
; width: 100%; height: 100%; overflow: hidden; outline: 0px; }

.modal-dialog { position: relative; width: auto; margin: 0.5rem; pointer-ev=
ents: none; }

.modal.fade .modal-dialog { transition: transform 0.3s ease-out 0s, -webkit=
-transform 0.3s ease-out 0s; transform: translate(0px, -50px); }

@media (prefers-reduced-motion: reduce) {
  .modal.fade .modal-dialog { transition: none 0s ease 0s; }
}

.modal.show .modal-dialog { transform: none; }

.modal-dialog-scrollable { display: flex; max-height: calc(100% - 1rem); }

.modal-dialog-scrollable .modal-content { max-height: calc(100vh - 1rem); o=
verflow: hidden; }

.modal-dialog-scrollable .modal-footer, .modal-dialog-scrollable .modal-hea=
der { flex-shrink: 0; }

.modal-dialog-scrollable .modal-body { overflow-y: auto; }

.modal-dialog-centered { display: flex; align-items: center; min-height: ca=
lc(100% - 1rem); }

.modal-dialog-centered::before { display: block; height: calc(100vh - 1rem)=
; content: ""; }

.modal-dialog-centered.modal-dialog-scrollable { flex-direction: column; ju=
stify-content: center; height: 100%; }

.modal-dialog-centered.modal-dialog-scrollable .modal-content { max-height:=
 none; }

.modal-dialog-centered.modal-dialog-scrollable::before { content: none; }

.modal-content { position: relative; display: flex; flex-direction: column;=
 width: 100%; pointer-events: auto; background-color: rgb(255, 255, 255); b=
ackground-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-r=
adius: 0.3rem; outline: 0px; }

.modal-backdrop { position: fixed; top: 0px; left: 0px; z-index: 1040; widt=
h: 100vw; height: 100vh; background-color: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.show { opacity: 0.5; }

.modal-header { display: flex; align-items: flex-start; justify-content: sp=
ace-between; padding: 1rem; border-bottom: 1px solid rgb(222, 226, 230); bo=
rder-top-left-radius: 0.3rem; border-top-right-radius: 0.3rem; }

.modal-header .close { padding: 1rem; margin: -1rem -1rem -1rem auto; }

.modal-title { margin-bottom: 0px; line-height: 1.5; }

.modal-body { position: relative; flex: 1 1 auto; padding: 1rem; }

.modal-footer { display: flex; align-items: center; justify-content: flex-e=
nd; padding: 1rem; border-top: 1px solid rgb(222, 226, 230); border-bottom-=
right-radius: 0.3rem; border-bottom-left-radius: 0.3rem; }

.modal-footer > :not(:first-child) { margin-left: 0.25rem; }

.modal-footer > :not(:last-child) { margin-right: 0.25rem; }

.modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; h=
eight: 50px; overflow: scroll; }

@media (min-width: 576px) {
  .modal-dialog { max-width: 500px; margin: 1.75rem auto; }
  .modal-dialog-scrollable { max-height: calc(100% - 3.5rem); }
  .modal-dialog-scrollable .modal-content { max-height: calc(100vh - 3.5rem=
); }
  .modal-dialog-centered { min-height: calc(100% - 3.5rem); }
  .modal-dialog-centered::before { height: calc(100vh - 3.5rem); }
  .modal-sm { max-width: 300px; }
}

@media (min-width: 992px) {
  .modal-lg, .modal-xl { max-width: 800px; }
}

@media (min-width: 1200px) {
  .modal-xl { max-width: 1140px; }
}

.tooltip { position: absolute; z-index: 1070; display: block; margin: 0px; =
font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvet=
ica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI E=
moji", "Segoe UI Symbol", "Noto Color Emoji"; font-style: normal; font-weig=
ht: 400; line-height: 1.5; text-align: start; text-decoration: none; text-s=
hadow: none; text-transform: none; letter-spacing: normal; word-break: norm=
al; word-spacing: normal; white-space: normal; line-break: auto; font-size:=
 0.875rem; overflow-wrap: break-word; opacity: 0; }

.tooltip.show { opacity: 0.9; }

.tooltip .arrow { position: absolute; display: block; width: 0.8rem; height=
: 0.4rem; }

.tooltip .arrow::before { position: absolute; content: ""; border-color: tr=
ansparent; border-style: solid; }

.bs-tooltip-auto[x-placement^=3D"top"], .bs-tooltip-top { padding: 0.4rem 0=
px; }

.bs-tooltip-auto[x-placement^=3D"top"] .arrow, .bs-tooltip-top .arrow { bot=
tom: 0px; }

.bs-tooltip-auto[x-placement^=3D"top"] .arrow::before, .bs-tooltip-top .arr=
ow::before { top: 0px; border-width: 0.4rem 0.4rem 0px; border-top-color: r=
gb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"right"], .bs-tooltip-right { padding: 0px =
0.4rem; }

.bs-tooltip-auto[x-placement^=3D"right"] .arrow, .bs-tooltip-right .arrow {=
 left: 0px; width: 0.4rem; height: 0.8rem; }

.bs-tooltip-auto[x-placement^=3D"right"] .arrow::before, .bs-tooltip-right =
.arrow::before { right: 0px; border-width: 0.4rem 0.4rem 0.4rem 0px; border=
-right-color: rgb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"bottom"], .bs-tooltip-bottom { padding: 0.=
4rem 0px; }

.bs-tooltip-auto[x-placement^=3D"bottom"] .arrow, .bs-tooltip-bottom .arrow=
 { top: 0px; }

.bs-tooltip-auto[x-placement^=3D"bottom"] .arrow::before, .bs-tooltip-botto=
m .arrow::before { bottom: 0px; border-width: 0px 0.4rem 0.4rem; border-bot=
tom-color: rgb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"left"], .bs-tooltip-left { padding: 0px 0.=
4rem; }

.bs-tooltip-auto[x-placement^=3D"left"] .arrow, .bs-tooltip-left .arrow { r=
ight: 0px; width: 0.4rem; height: 0.8rem; }

.bs-tooltip-auto[x-placement^=3D"left"] .arrow::before, .bs-tooltip-left .a=
rrow::before { left: 0px; border-width: 0.4rem 0px 0.4rem 0.4rem; border-le=
ft-color: rgb(0, 0, 0); }

.tooltip-inner { max-width: 200px; padding: 0.25rem 0.5rem; color: rgb(255,=
 255, 255); text-align: center; background-color: rgb(0, 0, 0); border-radi=
us: 0.25rem; }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1060; display:=
 block; max-width: 276px; font-family: -apple-system, BlinkMacSystemFont, "=
Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple=
 Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; fon=
t-style: normal; font-weight: 400; line-height: 1.5; text-align: start; tex=
t-decoration: none; text-shadow: none; text-transform: none; letter-spacing=
: normal; word-break: normal; word-spacing: normal; white-space: normal; li=
ne-break: auto; font-size: 0.875rem; overflow-wrap: break-word; background-=
color: rgb(255, 255, 255); background-clip: padding-box; border: 1px solid =
rgba(0, 0, 0, 0.2); border-radius: 0.3rem; }

.popover .arrow { position: absolute; display: block; width: 1rem; height: =
0.5rem; margin: 0px 0.3rem; }

.popover .arrow::after, .popover .arrow::before { position: absolute; displ=
ay: block; content: ""; border-color: transparent; border-style: solid; }

.bs-popover-auto[x-placement^=3D"top"], .bs-popover-top { margin-bottom: 0.=
5rem; }

.bs-popover-auto[x-placement^=3D"top"] > .arrow, .bs-popover-top > .arrow {=
 bottom: calc((0.5rem + 1px) * -1); }

.bs-popover-auto[x-placement^=3D"top"] > .arrow::before, .bs-popover-top > =
.arrow::before { bottom: 0px; border-width: 0.5rem 0.5rem 0px; border-top-c=
olor: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"top"] > .arrow::after, .bs-popover-top > .=
arrow::after { bottom: 1px; border-width: 0.5rem 0.5rem 0px; border-top-col=
or: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"right"], .bs-popover-right { margin-left: =
0.5rem; }

.bs-popover-auto[x-placement^=3D"right"] > .arrow, .bs-popover-right > .arr=
ow { left: calc((0.5rem + 1px) * -1); width: 0.5rem; height: 1rem; margin: =
0.3rem 0px; }

.bs-popover-auto[x-placement^=3D"right"] > .arrow::before, .bs-popover-righ=
t > .arrow::before { left: 0px; border-width: 0.5rem 0.5rem 0.5rem 0px; bor=
der-right-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"right"] > .arrow::after, .bs-popover-right=
 > .arrow::after { left: 1px; border-width: 0.5rem 0.5rem 0.5rem 0px; borde=
r-right-color: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"bottom"], .bs-popover-bottom { margin-top:=
 0.5rem; }

.bs-popover-auto[x-placement^=3D"bottom"] > .arrow, .bs-popover-bottom > .a=
rrow { top: calc((0.5rem + 1px) * -1); }

.bs-popover-auto[x-placement^=3D"bottom"] > .arrow::before, .bs-popover-bot=
tom > .arrow::before { top: 0px; border-width: 0px 0.5rem 0.5rem; border-bo=
ttom-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"bottom"] > .arrow::after, .bs-popover-bott=
om > .arrow::after { top: 1px; border-width: 0px 0.5rem 0.5rem; border-bott=
om-color: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"bottom"] .popover-header::before, .bs-popo=
ver-bottom .popover-header::before { position: absolute; top: 0px; left: 50=
%; display: block; width: 1rem; margin-left: -0.5rem; content: ""; border-b=
ottom: 1px solid rgb(247, 247, 247); }

.bs-popover-auto[x-placement^=3D"left"], .bs-popover-left { margin-right: 0=
.5rem; }

.bs-popover-auto[x-placement^=3D"left"] > .arrow, .bs-popover-left > .arrow=
 { right: calc((0.5rem + 1px) * -1); width: 0.5rem; height: 1rem; margin: 0=
.3rem 0px; }

.bs-popover-auto[x-placement^=3D"left"] > .arrow::before, .bs-popover-left =
> .arrow::before { right: 0px; border-width: 0.5rem 0px 0.5rem 0.5rem; bord=
er-left-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"left"] > .arrow::after, .bs-popover-left >=
 .arrow::after { right: 1px; border-width: 0.5rem 0px 0.5rem 0.5rem; border=
-left-color: rgb(255, 255, 255); }

.popover-header { padding: 0.5rem 0.75rem; margin-bottom: 0px; font-size: 1=
rem; background-color: rgb(247, 247, 247); border-bottom: 1px solid rgb(235=
, 235, 235); border-top-left-radius: calc(0.3rem - 1px); border-top-right-r=
adius: calc(0.3rem - 1px); }

.popover-header:empty { display: none; }

.popover-body { padding: 0.5rem 0.75rem; color: rgb(33, 37, 41); }

.carousel { position: relative; }

.carousel.pointer-event { touch-action: pan-y; }

.carousel-inner { position: relative; width: 100%; overflow: hidden; }

.carousel-inner::after { display: block; clear: both; content: ""; }

.carousel-item { position: relative; display: none; float: left; width: 100=
%; margin-right: -100%; backface-visibility: hidden; transition: transform =
0.6s ease-in-out 0s, -webkit-transform 0.6s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-item { transition: none 0s ease 0s; }
}

.carousel-item-next, .carousel-item-prev, .carousel-item.active { display: =
block; }

.active.carousel-item-right, .carousel-item-next:not(.carousel-item-left) {=
 transform: translateX(100%); }

.active.carousel-item-left, .carousel-item-prev:not(.carousel-item-right) {=
 transform: translateX(-100%); }

.carousel-fade .carousel-item { opacity: 0; transition-property: opacity; t=
ransform: none; }

.carousel-fade .carousel-item-next.carousel-item-left, .carousel-fade .caro=
usel-item-prev.carousel-item-right, .carousel-fade .carousel-item.active { =
z-index: 1; opacity: 1; }

.carousel-fade .active.carousel-item-left, .carousel-fade .active.carousel-=
item-right { z-index: 0; opacity: 0; transition: opacity 0s ease 0.6s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-fade .active.carousel-item-left, .carousel-fade .active.carouse=
l-item-right { transition: none 0s ease 0s; }
}

.carousel-control-next, .carousel-control-prev { position: absolute; top: 0=
px; bottom: 0px; z-index: 1; display: flex; align-items: center; justify-co=
ntent: center; width: 15%; color: rgb(255, 255, 255); text-align: center; o=
pacity: 0.5; transition: opacity 0.15s ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-control-next, .carousel-control-prev { transition: none 0s ease=
 0s; }
}

.carousel-control-next:focus, .carousel-control-next:hover, .carousel-contr=
ol-prev:focus, .carousel-control-prev:hover { color: rgb(255, 255, 255); te=
xt-decoration: none; outline: 0px; opacity: 0.9; }

.carousel-control-prev { left: 0px; }

.carousel-control-next { right: 0px; }

.carousel-control-next-icon, .carousel-control-prev-icon { display: inline-=
block; width: 20px; height: 20px; background: 50% center / 100% 100% no-rep=
eat; }

.carousel-control-prev-icon { background-image: url("data:image/svg+xml,%3c=
svg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'%23fff' viewBox=3D'0 0 8 8=
'%3e%3cpath d=3D'M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3e%3c/=
svg%3e"); }

.carousel-control-next-icon { background-image: url("data:image/svg+xml,%3c=
svg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'%23fff' viewBox=3D'0 0 8 8=
'%3e%3cpath d=3D'M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3e%3c/=
svg%3e"); }

.carousel-indicators { position: absolute; right: 0px; bottom: 0px; left: 0=
px; z-index: 15; display: flex; justify-content: center; padding-left: 0px;=
 margin-right: 15%; margin-left: 15%; list-style: none; }

.carousel-indicators li { box-sizing: content-box; flex: 0 1 auto; width: 3=
0px; height: 3px; margin-right: 3px; margin-left: 3px; text-indent: -999px;=
 cursor: pointer; background-color: rgb(255, 255, 255); background-clip: pa=
dding-box; border-top: 10px solid transparent; border-bottom: 10px solid tr=
ansparent; opacity: 0.5; transition: opacity 0.6s ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-indicators li { transition: none 0s ease 0s; }
}

.carousel-indicators .active { opacity: 1; }

.carousel-caption { position: absolute; right: 15%; bottom: 20px; left: 15%=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; }

@-webkit-keyframes spinner-border {=20
  100% { transform: rotate(360deg); }
}

@keyframes spinner-border {=20
  100% { transform: rotate(360deg); }
}

.spinner-border { display: inline-block; width: 2rem; height: 2rem; vertica=
l-align: text-bottom; border-width: 0.25em; border-style: solid; border-col=
or: currentcolor transparent currentcolor currentcolor; border-image: initi=
al; border-radius: 50%; animation: 0.75s linear 0s infinite normal none run=
ning spinner-border; }

.spinner-border-sm { width: 1rem; height: 1rem; border-width: 0.2em; }

@-webkit-keyframes spinner-grow {=20
  0% { transform: scale(0); }
  50% { opacity: 1; }
}

@keyframes spinner-grow {=20
  0% { transform: scale(0); }
  50% { opacity: 1; }
}

.spinner-grow { display: inline-block; width: 2rem; height: 2rem; vertical-=
align: text-bottom; background-color: currentcolor; border-radius: 50%; opa=
city: 0; animation: 0.75s linear 0s infinite normal none running spinner-gr=
ow; }

.spinner-grow-sm { width: 1rem; height: 1rem; }

.align-baseline { vertical-align: baseline !important; }

.align-top { vertical-align: top !important; }

.align-middle { vertical-align: middle !important; }

.align-bottom { vertical-align: bottom !important; }

.align-text-bottom { vertical-align: text-bottom !important; }

.align-text-top { vertical-align: text-top !important; }

.bg-primary { background-color: rgb(0, 123, 255) !important; }

a.bg-primary:focus, a.bg-primary:hover, button.bg-primary:focus, button.bg-=
primary:hover { background-color: rgb(0, 98, 204) !important; }

.bg-secondary { background-color: rgb(108, 117, 125) !important; }

a.bg-secondary:focus, a.bg-secondary:hover, button.bg-secondary:focus, butt=
on.bg-secondary:hover { background-color: rgb(84, 91, 98) !important; }

.bg-success { background-color: rgb(40, 167, 69) !important; }

a.bg-success:focus, a.bg-success:hover, button.bg-success:focus, button.bg-=
success:hover { background-color: rgb(30, 126, 52) !important; }

.bg-info { background-color: rgb(23, 162, 184) !important; }

a.bg-info:focus, a.bg-info:hover, button.bg-info:focus, button.bg-info:hove=
r { background-color: rgb(17, 122, 139) !important; }

.bg-warning { background-color: rgb(255, 193, 7) !important; }

a.bg-warning:focus, a.bg-warning:hover, button.bg-warning:focus, button.bg-=
warning:hover { background-color: rgb(211, 158, 0) !important; }

.bg-danger { background-color: rgb(220, 53, 69) !important; }

a.bg-danger:focus, a.bg-danger:hover, button.bg-danger:focus, button.bg-dan=
ger:hover { background-color: rgb(189, 33, 48) !important; }

.bg-light { background-color: rgb(248, 249, 250) !important; }

a.bg-light:focus, a.bg-light:hover, button.bg-light:focus, button.bg-light:=
hover { background-color: rgb(218, 224, 229) !important; }

.bg-dark { background-color: rgb(52, 58, 64) !important; }

a.bg-dark:focus, a.bg-dark:hover, button.bg-dark:focus, button.bg-dark:hove=
r { background-color: rgb(29, 33, 36) !important; }

.bg-white { background-color: rgb(255, 255, 255) !important; }

.bg-transparent { background-color: transparent !important; }

.border { border: 1px solid rgb(222, 226, 230) !important; }

.border-top { border-top: 1px solid rgb(222, 226, 230) !important; }

.border-right { border-right: 1px solid rgb(222, 226, 230) !important; }

.border-bottom { border-bottom: 1px solid rgb(222, 226, 230) !important; }

.border-left { border-left: 1px solid rgb(222, 226, 230) !important; }

.border-0 { border: 0px !important; }

.border-top-0 { border-top: 0px !important; }

.border-right-0 { border-right: 0px !important; }

.border-bottom-0 { border-bottom: 0px !important; }

.border-left-0 { border-left: 0px !important; }

.border-primary { border-color: rgb(0, 123, 255) !important; }

.border-secondary { border-color: rgb(108, 117, 125) !important; }

.border-success { border-color: rgb(40, 167, 69) !important; }

.border-info { border-color: rgb(23, 162, 184) !important; }

.border-warning { border-color: rgb(255, 193, 7) !important; }

.border-danger { border-color: rgb(220, 53, 69) !important; }

.border-light { border-color: rgb(248, 249, 250) !important; }

.border-dark { border-color: rgb(52, 58, 64) !important; }

.border-white { border-color: rgb(255, 255, 255) !important; }

.rounded-sm { border-radius: 0.2rem !important; }

.rounded { border-radius: 0.25rem !important; }

.rounded-top { border-top-left-radius: 0.25rem !important; border-top-right=
-radius: 0.25rem !important; }

.rounded-right { border-top-right-radius: 0.25rem !important; border-bottom=
-right-radius: 0.25rem !important; }

.rounded-bottom { border-bottom-right-radius: 0.25rem !important; border-bo=
ttom-left-radius: 0.25rem !important; }

.rounded-left { border-top-left-radius: 0.25rem !important; border-bottom-l=
eft-radius: 0.25rem !important; }

.rounded-lg { border-radius: 0.3rem !important; }

.rounded-circle { border-radius: 50% !important; }

.rounded-pill { border-radius: 50rem !important; }

.rounded-0 { border-radius: 0px !important; }

.clearfix::after { display: block; clear: both; content: ""; }

.d-none { display: none !important; }

.d-inline { display: inline !important; }

.d-inline-block { display: inline-block !important; }

.d-block { display: block !important; }

.d-table { display: table !important; }

.d-table-row { display: table-row !important; }

.d-table-cell { display: table-cell !important; }

.d-flex { display: flex !important; }

.d-inline-flex { display: inline-flex !important; }

@media (min-width: 576px) {
  .d-sm-none { display: none !important; }
  .d-sm-inline { display: inline !important; }
  .d-sm-inline-block { display: inline-block !important; }
  .d-sm-block { display: block !important; }
  .d-sm-table { display: table !important; }
  .d-sm-table-row { display: table-row !important; }
  .d-sm-table-cell { display: table-cell !important; }
  .d-sm-flex { display: flex !important; }
  .d-sm-inline-flex { display: inline-flex !important; }
}

@media (min-width: 768px) {
  .d-md-none { display: none !important; }
  .d-md-inline { display: inline !important; }
  .d-md-inline-block { display: inline-block !important; }
  .d-md-block { display: block !important; }
  .d-md-table { display: table !important; }
  .d-md-table-row { display: table-row !important; }
  .d-md-table-cell { display: table-cell !important; }
  .d-md-flex { display: flex !important; }
  .d-md-inline-flex { display: inline-flex !important; }
}

@media (min-width: 992px) {
  .d-lg-none { display: none !important; }
  .d-lg-inline { display: inline !important; }
  .d-lg-inline-block { display: inline-block !important; }
  .d-lg-block { display: block !important; }
  .d-lg-table { display: table !important; }
  .d-lg-table-row { display: table-row !important; }
  .d-lg-table-cell { display: table-cell !important; }
  .d-lg-flex { display: flex !important; }
  .d-lg-inline-flex { display: inline-flex !important; }
}

@media (min-width: 1200px) {
  .d-xl-none { display: none !important; }
  .d-xl-inline { display: inline !important; }
  .d-xl-inline-block { display: inline-block !important; }
  .d-xl-block { display: block !important; }
  .d-xl-table { display: table !important; }
  .d-xl-table-row { display: table-row !important; }
  .d-xl-table-cell { display: table-cell !important; }
  .d-xl-flex { display: flex !important; }
  .d-xl-inline-flex { display: inline-flex !important; }
}

@media print {
  .d-print-none { display: none !important; }
  .d-print-inline { display: inline !important; }
  .d-print-inline-block { display: inline-block !important; }
  .d-print-block { display: block !important; }
  .d-print-table { display: table !important; }
  .d-print-table-row { display: table-row !important; }
  .d-print-table-cell { display: table-cell !important; }
  .d-print-flex { display: flex !important; }
  .d-print-inline-flex { display: inline-flex !important; }
}

.embed-responsive { position: relative; display: block; width: 100%; paddin=
g: 0px; overflow: hidden; }

.embed-responsive::before { display: block; content: ""; }

.embed-responsive .embed-responsive-item, .embed-responsive embed, .embed-r=
esponsive iframe, .embed-responsive object, .embed-responsive video { posit=
ion: absolute; top: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;=
 border: 0px; }

.embed-responsive-21by9::before { padding-top: 42.8571%; }

.embed-responsive-16by9::before { padding-top: 56.25%; }

.embed-responsive-4by3::before { padding-top: 75%; }

.embed-responsive-1by1::before { padding-top: 100%; }

.flex-row { flex-direction: row !important; }

.flex-column { flex-direction: column !important; }

.flex-row-reverse { flex-direction: row-reverse !important; }

.flex-column-reverse { flex-direction: column-reverse !important; }

.flex-wrap { flex-wrap: wrap !important; }

.flex-nowrap { flex-wrap: nowrap !important; }

.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.flex-fill { flex: 1 1 auto !important; }

.flex-grow-0 { flex-grow: 0 !important; }

.flex-grow-1 { flex-grow: 1 !important; }

.flex-shrink-0 { flex-shrink: 0 !important; }

.flex-shrink-1 { flex-shrink: 1 !important; }

.justify-content-start { justify-content: flex-start !important; }

.justify-content-end { justify-content: flex-end !important; }

.justify-content-center { justify-content: center !important; }

.justify-content-between { justify-content: space-between !important; }

.justify-content-around { justify-content: space-around !important; }

.align-items-start { align-items: flex-start !important; }

.align-items-end { align-items: flex-end !important; }

.align-items-center { align-items: center !important; }

.align-items-baseline { align-items: baseline !important; }

.align-items-stretch { align-items: stretch !important; }

.align-content-start { align-content: flex-start !important; }

.align-content-end { align-content: flex-end !important; }

.align-content-center { align-content: center !important; }

.align-content-between { align-content: space-between !important; }

.align-content-around { align-content: space-around !important; }

.align-content-stretch { align-content: stretch !important; }

.align-self-auto { align-self: auto !important; }

.align-self-start { align-self: flex-start !important; }

.align-self-end { align-self: flex-end !important; }

.align-self-center { align-self: center !important; }

.align-self-baseline { align-self: baseline !important; }

.align-self-stretch { align-self: stretch !important; }

@media (min-width: 576px) {
  .flex-sm-row { flex-direction: row !important; }
  .flex-sm-column { flex-direction: column !important; }
  .flex-sm-row-reverse { flex-direction: row-reverse !important; }
  .flex-sm-column-reverse { flex-direction: column-reverse !important; }
  .flex-sm-wrap { flex-wrap: wrap !important; }
  .flex-sm-nowrap { flex-wrap: nowrap !important; }
  .flex-sm-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-sm-fill { flex: 1 1 auto !important; }
  .flex-sm-grow-0 { flex-grow: 0 !important; }
  .flex-sm-grow-1 { flex-grow: 1 !important; }
  .flex-sm-shrink-0 { flex-shrink: 0 !important; }
  .flex-sm-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-sm-start { justify-content: flex-start !important; }
  .justify-content-sm-end { justify-content: flex-end !important; }
  .justify-content-sm-center { justify-content: center !important; }
  .justify-content-sm-between { justify-content: space-between !important; =
}
  .justify-content-sm-around { justify-content: space-around !important; }
  .align-items-sm-start { align-items: flex-start !important; }
  .align-items-sm-end { align-items: flex-end !important; }
  .align-items-sm-center { align-items: center !important; }
  .align-items-sm-baseline { align-items: baseline !important; }
  .align-items-sm-stretch { align-items: stretch !important; }
  .align-content-sm-start { align-content: flex-start !important; }
  .align-content-sm-end { align-content: flex-end !important; }
  .align-content-sm-center { align-content: center !important; }
  .align-content-sm-between { align-content: space-between !important; }
  .align-content-sm-around { align-content: space-around !important; }
  .align-content-sm-stretch { align-content: stretch !important; }
  .align-self-sm-auto { align-self: auto !important; }
  .align-self-sm-start { align-self: flex-start !important; }
  .align-self-sm-end { align-self: flex-end !important; }
  .align-self-sm-center { align-self: center !important; }
  .align-self-sm-baseline { align-self: baseline !important; }
  .align-self-sm-stretch { align-self: stretch !important; }
}

@media (min-width: 768px) {
  .flex-md-row { flex-direction: row !important; }
  .flex-md-column { flex-direction: column !important; }
  .flex-md-row-reverse { flex-direction: row-reverse !important; }
  .flex-md-column-reverse { flex-direction: column-reverse !important; }
  .flex-md-wrap { flex-wrap: wrap !important; }
  .flex-md-nowrap { flex-wrap: nowrap !important; }
  .flex-md-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-md-fill { flex: 1 1 auto !important; }
  .flex-md-grow-0 { flex-grow: 0 !important; }
  .flex-md-grow-1 { flex-grow: 1 !important; }
  .flex-md-shrink-0 { flex-shrink: 0 !important; }
  .flex-md-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-md-start { justify-content: flex-start !important; }
  .justify-content-md-end { justify-content: flex-end !important; }
  .justify-content-md-center { justify-content: center !important; }
  .justify-content-md-between { justify-content: space-between !important; =
}
  .justify-content-md-around { justify-content: space-around !important; }
  .align-items-md-start { align-items: flex-start !important; }
  .align-items-md-end { align-items: flex-end !important; }
  .align-items-md-center { align-items: center !important; }
  .align-items-md-baseline { align-items: baseline !important; }
  .align-items-md-stretch { align-items: stretch !important; }
  .align-content-md-start { align-content: flex-start !important; }
  .align-content-md-end { align-content: flex-end !important; }
  .align-content-md-center { align-content: center !important; }
  .align-content-md-between { align-content: space-between !important; }
  .align-content-md-around { align-content: space-around !important; }
  .align-content-md-stretch { align-content: stretch !important; }
  .align-self-md-auto { align-self: auto !important; }
  .align-self-md-start { align-self: flex-start !important; }
  .align-self-md-end { align-self: flex-end !important; }
  .align-self-md-center { align-self: center !important; }
  .align-self-md-baseline { align-self: baseline !important; }
  .align-self-md-stretch { align-self: stretch !important; }
}

@media (min-width: 992px) {
  .flex-lg-row { flex-direction: row !important; }
  .flex-lg-column { flex-direction: column !important; }
  .flex-lg-row-reverse { flex-direction: row-reverse !important; }
  .flex-lg-column-reverse { flex-direction: column-reverse !important; }
  .flex-lg-wrap { flex-wrap: wrap !important; }
  .flex-lg-nowrap { flex-wrap: nowrap !important; }
  .flex-lg-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-lg-fill { flex: 1 1 auto !important; }
  .flex-lg-grow-0 { flex-grow: 0 !important; }
  .flex-lg-grow-1 { flex-grow: 1 !important; }
  .flex-lg-shrink-0 { flex-shrink: 0 !important; }
  .flex-lg-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-lg-start { justify-content: flex-start !important; }
  .justify-content-lg-end { justify-content: flex-end !important; }
  .justify-content-lg-center { justify-content: center !important; }
  .justify-content-lg-between { justify-content: space-between !important; =
}
  .justify-content-lg-around { justify-content: space-around !important; }
  .align-items-lg-start { align-items: flex-start !important; }
  .align-items-lg-end { align-items: flex-end !important; }
  .align-items-lg-center { align-items: center !important; }
  .align-items-lg-baseline { align-items: baseline !important; }
  .align-items-lg-stretch { align-items: stretch !important; }
  .align-content-lg-start { align-content: flex-start !important; }
  .align-content-lg-end { align-content: flex-end !important; }
  .align-content-lg-center { align-content: center !important; }
  .align-content-lg-between { align-content: space-between !important; }
  .align-content-lg-around { align-content: space-around !important; }
  .align-content-lg-stretch { align-content: stretch !important; }
  .align-self-lg-auto { align-self: auto !important; }
  .align-self-lg-start { align-self: flex-start !important; }
  .align-self-lg-end { align-self: flex-end !important; }
  .align-self-lg-center { align-self: center !important; }
  .align-self-lg-baseline { align-self: baseline !important; }
  .align-self-lg-stretch { align-self: stretch !important; }
}

@media (min-width: 1200px) {
  .flex-xl-row { flex-direction: row !important; }
  .flex-xl-column { flex-direction: column !important; }
  .flex-xl-row-reverse { flex-direction: row-reverse !important; }
  .flex-xl-column-reverse { flex-direction: column-reverse !important; }
  .flex-xl-wrap { flex-wrap: wrap !important; }
  .flex-xl-nowrap { flex-wrap: nowrap !important; }
  .flex-xl-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-xl-fill { flex: 1 1 auto !important; }
  .flex-xl-grow-0 { flex-grow: 0 !important; }
  .flex-xl-grow-1 { flex-grow: 1 !important; }
  .flex-xl-shrink-0 { flex-shrink: 0 !important; }
  .flex-xl-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-xl-start { justify-content: flex-start !important; }
  .justify-content-xl-end { justify-content: flex-end !important; }
  .justify-content-xl-center { justify-content: center !important; }
  .justify-content-xl-between { justify-content: space-between !important; =
}
  .justify-content-xl-around { justify-content: space-around !important; }
  .align-items-xl-start { align-items: flex-start !important; }
  .align-items-xl-end { align-items: flex-end !important; }
  .align-items-xl-center { align-items: center !important; }
  .align-items-xl-baseline { align-items: baseline !important; }
  .align-items-xl-stretch { align-items: stretch !important; }
  .align-content-xl-start { align-content: flex-start !important; }
  .align-content-xl-end { align-content: flex-end !important; }
  .align-content-xl-center { align-content: center !important; }
  .align-content-xl-between { align-content: space-between !important; }
  .align-content-xl-around { align-content: space-around !important; }
  .align-content-xl-stretch { align-content: stretch !important; }
  .align-self-xl-auto { align-self: auto !important; }
  .align-self-xl-start { align-self: flex-start !important; }
  .align-self-xl-end { align-self: flex-end !important; }
  .align-self-xl-center { align-self: center !important; }
  .align-self-xl-baseline { align-self: baseline !important; }
  .align-self-xl-stretch { align-self: stretch !important; }
}

.float-left { float: left !important; }

.float-right { float: right !important; }

.float-none { float: none !important; }

@media (min-width: 576px) {
  .float-sm-left { float: left !important; }
  .float-sm-right { float: right !important; }
  .float-sm-none { float: none !important; }
}

@media (min-width: 768px) {
  .float-md-left { float: left !important; }
  .float-md-right { float: right !important; }
  .float-md-none { float: none !important; }
}

@media (min-width: 992px) {
  .float-lg-left { float: left !important; }
  .float-lg-right { float: right !important; }
  .float-lg-none { float: none !important; }
}

@media (min-width: 1200px) {
  .float-xl-left { float: left !important; }
  .float-xl-right { float: right !important; }
  .float-xl-none { float: none !important; }
}

.overflow-auto { overflow: auto !important; }

.overflow-hidden { overflow: hidden !important; }

.position-static { position: static !important; }

.position-relative { position: relative !important; }

.position-absolute { position: absolute !important; }

.position-fixed { position: fixed !important; }

.position-sticky { position: sticky !important; }

.fixed-top { position: fixed; top: 0px; right: 0px; left: 0px; z-index: 103=
0; }

.fixed-bottom { position: fixed; right: 0px; bottom: 0px; left: 0px; z-inde=
x: 1030; }

@supports ((position:-webkit-sticky) or (position:sticky)) {
  .sticky-top { position: sticky; top: 0px; z-index: 1020; }
}

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; overf=
low: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: nowrap; border: 0=
px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; overflow: visible; clip: auto; white-space: normal;=
 }

.shadow-sm { box-shadow: rgba(0, 0, 0, 0.075) 0px 0.125rem 0.25rem !importa=
nt; }

.shadow { box-shadow: rgba(0, 0, 0, 0.15) 0px 0.5rem 1rem !important; }

.shadow-lg { box-shadow: rgba(0, 0, 0, 0.176) 0px 1rem 3rem !important; }

.shadow-none { box-shadow: none !important; }

.w-25 { width: 25% !important; }

.w-50 { width: 50% !important; }

.w-75 { width: 75% !important; }

.w-100 { width: 100% !important; }

.w-auto { width: auto !important; }

.h-25 { height: 25% !important; }

.h-50 { height: 50% !important; }

.h-75 { height: 75% !important; }

.h-100 { height: 100% !important; }

.h-auto { height: auto !important; }

.mw-100 { max-width: 100% !important; }

.mh-100 { max-height: 100% !important; }

.min-vw-100 { min-width: 100vw !important; }

.min-vh-100 { min-height: 100vh !important; }

.vw-100 { width: 100vw !important; }

.vh-100 { height: 100vh !important; }

.stretched-link::after { position: absolute; inset: 0px; z-index: 1; pointe=
r-events: auto; content: ""; background-color: rgba(0, 0, 0, 0); }

.m-0 { margin: 0px !important; }

.mt-0, .my-0 { margin-top: 0px !important; }

.mr-0, .mx-0 { margin-right: 0px !important; }

.mb-0, .my-0 { margin-bottom: 0px !important; }

.ml-0, .mx-0 { margin-left: 0px !important; }

.m-1 { margin: 0.25rem !important; }

.mt-1, .my-1 { margin-top: 0.25rem !important; }

.mr-1, .mx-1 { margin-right: 0.25rem !important; }

.mb-1, .my-1 { margin-bottom: 0.25rem !important; }

.ml-1, .mx-1 { margin-left: 0.25rem !important; }

.m-2 { margin: 0.5rem !important; }

.mt-2, .my-2 { margin-top: 0.5rem !important; }

.mr-2, .mx-2 { margin-right: 0.5rem !important; }

.mb-2, .my-2 { margin-bottom: 0.5rem !important; }

.ml-2, .mx-2 { margin-left: 0.5rem !important; }

.m-3 { margin: 1rem !important; }

.mt-3, .my-3 { margin-top: 1rem !important; }

.mr-3, .mx-3 { margin-right: 1rem !important; }

.mb-3, .my-3 { margin-bottom: 1rem !important; }

.ml-3, .mx-3 { margin-left: 1rem !important; }

.m-4 { margin: 1.5rem !important; }

.mt-4, .my-4 { margin-top: 1.5rem !important; }

.mr-4, .mx-4 { margin-right: 1.5rem !important; }

.mb-4, .my-4 { margin-bottom: 1.5rem !important; }

.ml-4, .mx-4 { margin-left: 1.5rem !important; }

.m-5 { margin: 3rem !important; }

.mt-5, .my-5 { margin-top: 3rem !important; }

.mr-5, .mx-5 { margin-right: 3rem !important; }

.mb-5, .my-5 { margin-bottom: 3rem !important; }

.ml-5, .mx-5 { margin-left: 3rem !important; }

.p-0 { padding: 0px !important; }

.pt-0, .py-0 { padding-top: 0px !important; }

.pr-0, .px-0 { padding-right: 0px !important; }

.pb-0, .py-0 { padding-bottom: 0px !important; }

.pl-0, .px-0 { padding-left: 0px !important; }

.p-1 { padding: 0.25rem !important; }

.pt-1, .py-1 { padding-top: 0.25rem !important; }

.pr-1, .px-1 { padding-right: 0.25rem !important; }

.pb-1, .py-1 { padding-bottom: 0.25rem !important; }

.pl-1, .px-1 { padding-left: 0.25rem !important; }

.p-2 { padding: 0.5rem !important; }

.pt-2, .py-2 { padding-top: 0.5rem !important; }

.pr-2, .px-2 { padding-right: 0.5rem !important; }

.pb-2, .py-2 { padding-bottom: 0.5rem !important; }

.pl-2, .px-2 { padding-left: 0.5rem !important; }

.p-3 { padding: 1rem !important; }

.pt-3, .py-3 { padding-top: 1rem !important; }

.pr-3, .px-3 { padding-right: 1rem !important; }

.pb-3, .py-3 { padding-bottom: 1rem !important; }

.pl-3, .px-3 { padding-left: 1rem !important; }

.p-4 { padding: 1.5rem !important; }

.pt-4, .py-4 { padding-top: 1.5rem !important; }

.pr-4, .px-4 { padding-right: 1.5rem !important; }

.pb-4, .py-4 { padding-bottom: 1.5rem !important; }

.pl-4, .px-4 { padding-left: 1.5rem !important; }

.p-5 { padding: 3rem !important; }

.pt-5, .py-5 { padding-top: 3rem !important; }

.pr-5, .px-5 { padding-right: 3rem !important; }

.pb-5, .py-5 { padding-bottom: 3rem !important; }

.pl-5, .px-5 { padding-left: 3rem !important; }

.m-n1 { margin: -0.25rem !important; }

.mt-n1, .my-n1 { margin-top: -0.25rem !important; }

.mr-n1, .mx-n1 { margin-right: -0.25rem !important; }

.mb-n1, .my-n1 { margin-bottom: -0.25rem !important; }

.ml-n1, .mx-n1 { margin-left: -0.25rem !important; }

.m-n2 { margin: -0.5rem !important; }

.mt-n2, .my-n2 { margin-top: -0.5rem !important; }

.mr-n2, .mx-n2 { margin-right: -0.5rem !important; }

.mb-n2, .my-n2 { margin-bottom: -0.5rem !important; }

.ml-n2, .mx-n2 { margin-left: -0.5rem !important; }

.m-n3 { margin: -1rem !important; }

.mt-n3, .my-n3 { margin-top: -1rem !important; }

.mr-n3, .mx-n3 { margin-right: -1rem !important; }

.mb-n3, .my-n3 { margin-bottom: -1rem !important; }

.ml-n3, .mx-n3 { margin-left: -1rem !important; }

.m-n4 { margin: -1.5rem !important; }

.mt-n4, .my-n4 { margin-top: -1.5rem !important; }

.mr-n4, .mx-n4 { margin-right: -1.5rem !important; }

.mb-n4, .my-n4 { margin-bottom: -1.5rem !important; }

.ml-n4, .mx-n4 { margin-left: -1.5rem !important; }

.m-n5 { margin: -3rem !important; }

.mt-n5, .my-n5 { margin-top: -3rem !important; }

.mr-n5, .mx-n5 { margin-right: -3rem !important; }

.mb-n5, .my-n5 { margin-bottom: -3rem !important; }

.ml-n5, .mx-n5 { margin-left: -3rem !important; }

.m-auto { margin: auto !important; }

.mt-auto, .my-auto { margin-top: auto !important; }

.mr-auto, .mx-auto { margin-right: auto !important; }

.mb-auto, .my-auto { margin-bottom: auto !important; }

.ml-auto, .mx-auto { margin-left: auto !important; }

@media (min-width: 576px) {
  .m-sm-0 { margin: 0px !important; }
  .mt-sm-0, .my-sm-0 { margin-top: 0px !important; }
  .mr-sm-0, .mx-sm-0 { margin-right: 0px !important; }
  .mb-sm-0, .my-sm-0 { margin-bottom: 0px !important; }
  .ml-sm-0, .mx-sm-0 { margin-left: 0px !important; }
  .m-sm-1 { margin: 0.25rem !important; }
  .mt-sm-1, .my-sm-1 { margin-top: 0.25rem !important; }
  .mr-sm-1, .mx-sm-1 { margin-right: 0.25rem !important; }
  .mb-sm-1, .my-sm-1 { margin-bottom: 0.25rem !important; }
  .ml-sm-1, .mx-sm-1 { margin-left: 0.25rem !important; }
  .m-sm-2 { margin: 0.5rem !important; }
  .mt-sm-2, .my-sm-2 { margin-top: 0.5rem !important; }
  .mr-sm-2, .mx-sm-2 { margin-right: 0.5rem !important; }
  .mb-sm-2, .my-sm-2 { margin-bottom: 0.5rem !important; }
  .ml-sm-2, .mx-sm-2 { margin-left: 0.5rem !important; }
  .m-sm-3 { margin: 1rem !important; }
  .mt-sm-3, .my-sm-3 { margin-top: 1rem !important; }
  .mr-sm-3, .mx-sm-3 { margin-right: 1rem !important; }
  .mb-sm-3, .my-sm-3 { margin-bottom: 1rem !important; }
  .ml-sm-3, .mx-sm-3 { margin-left: 1rem !important; }
  .m-sm-4 { margin: 1.5rem !important; }
  .mt-sm-4, .my-sm-4 { margin-top: 1.5rem !important; }
  .mr-sm-4, .mx-sm-4 { margin-right: 1.5rem !important; }
  .mb-sm-4, .my-sm-4 { margin-bottom: 1.5rem !important; }
  .ml-sm-4, .mx-sm-4 { margin-left: 1.5rem !important; }
  .m-sm-5 { margin: 3rem !important; }
  .mt-sm-5, .my-sm-5 { margin-top: 3rem !important; }
  .mr-sm-5, .mx-sm-5 { margin-right: 3rem !important; }
  .mb-sm-5, .my-sm-5 { margin-bottom: 3rem !important; }
  .ml-sm-5, .mx-sm-5 { margin-left: 3rem !important; }
  .p-sm-0 { padding: 0px !important; }
  .pt-sm-0, .py-sm-0 { padding-top: 0px !important; }
  .pr-sm-0, .px-sm-0 { padding-right: 0px !important; }
  .pb-sm-0, .py-sm-0 { padding-bottom: 0px !important; }
  .pl-sm-0, .px-sm-0 { padding-left: 0px !important; }
  .p-sm-1 { padding: 0.25rem !important; }
  .pt-sm-1, .py-sm-1 { padding-top: 0.25rem !important; }
  .pr-sm-1, .px-sm-1 { padding-right: 0.25rem !important; }
  .pb-sm-1, .py-sm-1 { padding-bottom: 0.25rem !important; }
  .pl-sm-1, .px-sm-1 { padding-left: 0.25rem !important; }
  .p-sm-2 { padding: 0.5rem !important; }
  .pt-sm-2, .py-sm-2 { padding-top: 0.5rem !important; }
  .pr-sm-2, .px-sm-2 { padding-right: 0.5rem !important; }
  .pb-sm-2, .py-sm-2 { padding-bottom: 0.5rem !important; }
  .pl-sm-2, .px-sm-2 { padding-left: 0.5rem !important; }
  .p-sm-3 { padding: 1rem !important; }
  .pt-sm-3, .py-sm-3 { padding-top: 1rem !important; }
  .pr-sm-3, .px-sm-3 { padding-right: 1rem !important; }
  .pb-sm-3, .py-sm-3 { padding-bottom: 1rem !important; }
  .pl-sm-3, .px-sm-3 { padding-left: 1rem !important; }
  .p-sm-4 { padding: 1.5rem !important; }
  .pt-sm-4, .py-sm-4 { padding-top: 1.5rem !important; }
  .pr-sm-4, .px-sm-4 { padding-right: 1.5rem !important; }
  .pb-sm-4, .py-sm-4 { padding-bottom: 1.5rem !important; }
  .pl-sm-4, .px-sm-4 { padding-left: 1.5rem !important; }
  .p-sm-5 { padding: 3rem !important; }
  .pt-sm-5, .py-sm-5 { padding-top: 3rem !important; }
  .pr-sm-5, .px-sm-5 { padding-right: 3rem !important; }
  .pb-sm-5, .py-sm-5 { padding-bottom: 3rem !important; }
  .pl-sm-5, .px-sm-5 { padding-left: 3rem !important; }
  .m-sm-n1 { margin: -0.25rem !important; }
  .mt-sm-n1, .my-sm-n1 { margin-top: -0.25rem !important; }
  .mr-sm-n1, .mx-sm-n1 { margin-right: -0.25rem !important; }
  .mb-sm-n1, .my-sm-n1 { margin-bottom: -0.25rem !important; }
  .ml-sm-n1, .mx-sm-n1 { margin-left: -0.25rem !important; }
  .m-sm-n2 { margin: -0.5rem !important; }
  .mt-sm-n2, .my-sm-n2 { margin-top: -0.5rem !important; }
  .mr-sm-n2, .mx-sm-n2 { margin-right: -0.5rem !important; }
  .mb-sm-n2, .my-sm-n2 { margin-bottom: -0.5rem !important; }
  .ml-sm-n2, .mx-sm-n2 { margin-left: -0.5rem !important; }
  .m-sm-n3 { margin: -1rem !important; }
  .mt-sm-n3, .my-sm-n3 { margin-top: -1rem !important; }
  .mr-sm-n3, .mx-sm-n3 { margin-right: -1rem !important; }
  .mb-sm-n3, .my-sm-n3 { margin-bottom: -1rem !important; }
  .ml-sm-n3, .mx-sm-n3 { margin-left: -1rem !important; }
  .m-sm-n4 { margin: -1.5rem !important; }
  .mt-sm-n4, .my-sm-n4 { margin-top: -1.5rem !important; }
  .mr-sm-n4, .mx-sm-n4 { margin-right: -1.5rem !important; }
  .mb-sm-n4, .my-sm-n4 { margin-bottom: -1.5rem !important; }
  .ml-sm-n4, .mx-sm-n4 { margin-left: -1.5rem !important; }
  .m-sm-n5 { margin: -3rem !important; }
  .mt-sm-n5, .my-sm-n5 { margin-top: -3rem !important; }
  .mr-sm-n5, .mx-sm-n5 { margin-right: -3rem !important; }
  .mb-sm-n5, .my-sm-n5 { margin-bottom: -3rem !important; }
  .ml-sm-n5, .mx-sm-n5 { margin-left: -3rem !important; }
  .m-sm-auto { margin: auto !important; }
  .mt-sm-auto, .my-sm-auto { margin-top: auto !important; }
  .mr-sm-auto, .mx-sm-auto { margin-right: auto !important; }
  .mb-sm-auto, .my-sm-auto { margin-bottom: auto !important; }
  .ml-sm-auto, .mx-sm-auto { margin-left: auto !important; }
}

@media (min-width: 768px) {
  .m-md-0 { margin: 0px !important; }
  .mt-md-0, .my-md-0 { margin-top: 0px !important; }
  .mr-md-0, .mx-md-0 { margin-right: 0px !important; }
  .mb-md-0, .my-md-0 { margin-bottom: 0px !important; }
  .ml-md-0, .mx-md-0 { margin-left: 0px !important; }
  .m-md-1 { margin: 0.25rem !important; }
  .mt-md-1, .my-md-1 { margin-top: 0.25rem !important; }
  .mr-md-1, .mx-md-1 { margin-right: 0.25rem !important; }
  .mb-md-1, .my-md-1 { margin-bottom: 0.25rem !important; }
  .ml-md-1, .mx-md-1 { margin-left: 0.25rem !important; }
  .m-md-2 { margin: 0.5rem !important; }
  .mt-md-2, .my-md-2 { margin-top: 0.5rem !important; }
  .mr-md-2, .mx-md-2 { margin-right: 0.5rem !important; }
  .mb-md-2, .my-md-2 { margin-bottom: 0.5rem !important; }
  .ml-md-2, .mx-md-2 { margin-left: 0.5rem !important; }
  .m-md-3 { margin: 1rem !important; }
  .mt-md-3, .my-md-3 { margin-top: 1rem !important; }
  .mr-md-3, .mx-md-3 { margin-right: 1rem !important; }
  .mb-md-3, .my-md-3 { margin-bottom: 1rem !important; }
  .ml-md-3, .mx-md-3 { margin-left: 1rem !important; }
  .m-md-4 { margin: 1.5rem !important; }
  .mt-md-4, .my-md-4 { margin-top: 1.5rem !important; }
  .mr-md-4, .mx-md-4 { margin-right: 1.5rem !important; }
  .mb-md-4, .my-md-4 { margin-bottom: 1.5rem !important; }
  .ml-md-4, .mx-md-4 { margin-left: 1.5rem !important; }
  .m-md-5 { margin: 3rem !important; }
  .mt-md-5, .my-md-5 { margin-top: 3rem !important; }
  .mr-md-5, .mx-md-5 { margin-right: 3rem !important; }
  .mb-md-5, .my-md-5 { margin-bottom: 3rem !important; }
  .ml-md-5, .mx-md-5 { margin-left: 3rem !important; }
  .p-md-0 { padding: 0px !important; }
  .pt-md-0, .py-md-0 { padding-top: 0px !important; }
  .pr-md-0, .px-md-0 { padding-right: 0px !important; }
  .pb-md-0, .py-md-0 { padding-bottom: 0px !important; }
  .pl-md-0, .px-md-0 { padding-left: 0px !important; }
  .p-md-1 { padding: 0.25rem !important; }
  .pt-md-1, .py-md-1 { padding-top: 0.25rem !important; }
  .pr-md-1, .px-md-1 { padding-right: 0.25rem !important; }
  .pb-md-1, .py-md-1 { padding-bottom: 0.25rem !important; }
  .pl-md-1, .px-md-1 { padding-left: 0.25rem !important; }
  .p-md-2 { padding: 0.5rem !important; }
  .pt-md-2, .py-md-2 { padding-top: 0.5rem !important; }
  .pr-md-2, .px-md-2 { padding-right: 0.5rem !important; }
  .pb-md-2, .py-md-2 { padding-bottom: 0.5rem !important; }
  .pl-md-2, .px-md-2 { padding-left: 0.5rem !important; }
  .p-md-3 { padding: 1rem !important; }
  .pt-md-3, .py-md-3 { padding-top: 1rem !important; }
  .pr-md-3, .px-md-3 { padding-right: 1rem !important; }
  .pb-md-3, .py-md-3 { padding-bottom: 1rem !important; }
  .pl-md-3, .px-md-3 { padding-left: 1rem !important; }
  .p-md-4 { padding: 1.5rem !important; }
  .pt-md-4, .py-md-4 { padding-top: 1.5rem !important; }
  .pr-md-4, .px-md-4 { padding-right: 1.5rem !important; }
  .pb-md-4, .py-md-4 { padding-bottom: 1.5rem !important; }
  .pl-md-4, .px-md-4 { padding-left: 1.5rem !important; }
  .p-md-5 { padding: 3rem !important; }
  .pt-md-5, .py-md-5 { padding-top: 3rem !important; }
  .pr-md-5, .px-md-5 { padding-right: 3rem !important; }
  .pb-md-5, .py-md-5 { padding-bottom: 3rem !important; }
  .pl-md-5, .px-md-5 { padding-left: 3rem !important; }
  .m-md-n1 { margin: -0.25rem !important; }
  .mt-md-n1, .my-md-n1 { margin-top: -0.25rem !important; }
  .mr-md-n1, .mx-md-n1 { margin-right: -0.25rem !important; }
  .mb-md-n1, .my-md-n1 { margin-bottom: -0.25rem !important; }
  .ml-md-n1, .mx-md-n1 { margin-left: -0.25rem !important; }
  .m-md-n2 { margin: -0.5rem !important; }
  .mt-md-n2, .my-md-n2 { margin-top: -0.5rem !important; }
  .mr-md-n2, .mx-md-n2 { margin-right: -0.5rem !important; }
  .mb-md-n2, .my-md-n2 { margin-bottom: -0.5rem !important; }
  .ml-md-n2, .mx-md-n2 { margin-left: -0.5rem !important; }
  .m-md-n3 { margin: -1rem !important; }
  .mt-md-n3, .my-md-n3 { margin-top: -1rem !important; }
  .mr-md-n3, .mx-md-n3 { margin-right: -1rem !important; }
  .mb-md-n3, .my-md-n3 { margin-bottom: -1rem !important; }
  .ml-md-n3, .mx-md-n3 { margin-left: -1rem !important; }
  .m-md-n4 { margin: -1.5rem !important; }
  .mt-md-n4, .my-md-n4 { margin-top: -1.5rem !important; }
  .mr-md-n4, .mx-md-n4 { margin-right: -1.5rem !important; }
  .mb-md-n4, .my-md-n4 { margin-bottom: -1.5rem !important; }
  .ml-md-n4, .mx-md-n4 { margin-left: -1.5rem !important; }
  .m-md-n5 { margin: -3rem !important; }
  .mt-md-n5, .my-md-n5 { margin-top: -3rem !important; }
  .mr-md-n5, .mx-md-n5 { margin-right: -3rem !important; }
  .mb-md-n5, .my-md-n5 { margin-bottom: -3rem !important; }
  .ml-md-n5, .mx-md-n5 { margin-left: -3rem !important; }
  .m-md-auto { margin: auto !important; }
  .mt-md-auto, .my-md-auto { margin-top: auto !important; }
  .mr-md-auto, .mx-md-auto { margin-right: auto !important; }
  .mb-md-auto, .my-md-auto { margin-bottom: auto !important; }
  .ml-md-auto, .mx-md-auto { margin-left: auto !important; }
}

@media (min-width: 992px) {
  .m-lg-0 { margin: 0px !important; }
  .mt-lg-0, .my-lg-0 { margin-top: 0px !important; }
  .mr-lg-0, .mx-lg-0 { margin-right: 0px !important; }
  .mb-lg-0, .my-lg-0 { margin-bottom: 0px !important; }
  .ml-lg-0, .mx-lg-0 { margin-left: 0px !important; }
  .m-lg-1 { margin: 0.25rem !important; }
  .mt-lg-1, .my-lg-1 { margin-top: 0.25rem !important; }
  .mr-lg-1, .mx-lg-1 { margin-right: 0.25rem !important; }
  .mb-lg-1, .my-lg-1 { margin-bottom: 0.25rem !important; }
  .ml-lg-1, .mx-lg-1 { margin-left: 0.25rem !important; }
  .m-lg-2 { margin: 0.5rem !important; }
  .mt-lg-2, .my-lg-2 { margin-top: 0.5rem !important; }
  .mr-lg-2, .mx-lg-2 { margin-right: 0.5rem !important; }
  .mb-lg-2, .my-lg-2 { margin-bottom: 0.5rem !important; }
  .ml-lg-2, .mx-lg-2 { margin-left: 0.5rem !important; }
  .m-lg-3 { margin: 1rem !important; }
  .mt-lg-3, .my-lg-3 { margin-top: 1rem !important; }
  .mr-lg-3, .mx-lg-3 { margin-right: 1rem !important; }
  .mb-lg-3, .my-lg-3 { margin-bottom: 1rem !important; }
  .ml-lg-3, .mx-lg-3 { margin-left: 1rem !important; }
  .m-lg-4 { margin: 1.5rem !important; }
  .mt-lg-4, .my-lg-4 { margin-top: 1.5rem !important; }
  .mr-lg-4, .mx-lg-4 { margin-right: 1.5rem !important; }
  .mb-lg-4, .my-lg-4 { margin-bottom: 1.5rem !important; }
  .ml-lg-4, .mx-lg-4 { margin-left: 1.5rem !important; }
  .m-lg-5 { margin: 3rem !important; }
  .mt-lg-5, .my-lg-5 { margin-top: 3rem !important; }
  .mr-lg-5, .mx-lg-5 { margin-right: 3rem !important; }
  .mb-lg-5, .my-lg-5 { margin-bottom: 3rem !important; }
  .ml-lg-5, .mx-lg-5 { margin-left: 3rem !important; }
  .p-lg-0 { padding: 0px !important; }
  .pt-lg-0, .py-lg-0 { padding-top: 0px !important; }
  .pr-lg-0, .px-lg-0 { padding-right: 0px !important; }
  .pb-lg-0, .py-lg-0 { padding-bottom: 0px !important; }
  .pl-lg-0, .px-lg-0 { padding-left: 0px !important; }
  .p-lg-1 { padding: 0.25rem !important; }
  .pt-lg-1, .py-lg-1 { padding-top: 0.25rem !important; }
  .pr-lg-1, .px-lg-1 { padding-right: 0.25rem !important; }
  .pb-lg-1, .py-lg-1 { padding-bottom: 0.25rem !important; }
  .pl-lg-1, .px-lg-1 { padding-left: 0.25rem !important; }
  .p-lg-2 { padding: 0.5rem !important; }
  .pt-lg-2, .py-lg-2 { padding-top: 0.5rem !important; }
  .pr-lg-2, .px-lg-2 { padding-right: 0.5rem !important; }
  .pb-lg-2, .py-lg-2 { padding-bottom: 0.5rem !important; }
  .pl-lg-2, .px-lg-2 { padding-left: 0.5rem !important; }
  .p-lg-3 { padding: 1rem !important; }
  .pt-lg-3, .py-lg-3 { padding-top: 1rem !important; }
  .pr-lg-3, .px-lg-3 { padding-right: 1rem !important; }
  .pb-lg-3, .py-lg-3 { padding-bottom: 1rem !important; }
  .pl-lg-3, .px-lg-3 { padding-left: 1rem !important; }
  .p-lg-4 { padding: 1.5rem !important; }
  .pt-lg-4, .py-lg-4 { padding-top: 1.5rem !important; }
  .pr-lg-4, .px-lg-4 { padding-right: 1.5rem !important; }
  .pb-lg-4, .py-lg-4 { padding-bottom: 1.5rem !important; }
  .pl-lg-4, .px-lg-4 { padding-left: 1.5rem !important; }
  .p-lg-5 { padding: 3rem !important; }
  .pt-lg-5, .py-lg-5 { padding-top: 3rem !important; }
  .pr-lg-5, .px-lg-5 { padding-right: 3rem !important; }
  .pb-lg-5, .py-lg-5 { padding-bottom: 3rem !important; }
  .pl-lg-5, .px-lg-5 { padding-left: 3rem !important; }
  .m-lg-n1 { margin: -0.25rem !important; }
  .mt-lg-n1, .my-lg-n1 { margin-top: -0.25rem !important; }
  .mr-lg-n1, .mx-lg-n1 { margin-right: -0.25rem !important; }
  .mb-lg-n1, .my-lg-n1 { margin-bottom: -0.25rem !important; }
  .ml-lg-n1, .mx-lg-n1 { margin-left: -0.25rem !important; }
  .m-lg-n2 { margin: -0.5rem !important; }
  .mt-lg-n2, .my-lg-n2 { margin-top: -0.5rem !important; }
  .mr-lg-n2, .mx-lg-n2 { margin-right: -0.5rem !important; }
  .mb-lg-n2, .my-lg-n2 { margin-bottom: -0.5rem !important; }
  .ml-lg-n2, .mx-lg-n2 { margin-left: -0.5rem !important; }
  .m-lg-n3 { margin: -1rem !important; }
  .mt-lg-n3, .my-lg-n3 { margin-top: -1rem !important; }
  .mr-lg-n3, .mx-lg-n3 { margin-right: -1rem !important; }
  .mb-lg-n3, .my-lg-n3 { margin-bottom: -1rem !important; }
  .ml-lg-n3, .mx-lg-n3 { margin-left: -1rem !important; }
  .m-lg-n4 { margin: -1.5rem !important; }
  .mt-lg-n4, .my-lg-n4 { margin-top: -1.5rem !important; }
  .mr-lg-n4, .mx-lg-n4 { margin-right: -1.5rem !important; }
  .mb-lg-n4, .my-lg-n4 { margin-bottom: -1.5rem !important; }
  .ml-lg-n4, .mx-lg-n4 { margin-left: -1.5rem !important; }
  .m-lg-n5 { margin: -3rem !important; }
  .mt-lg-n5, .my-lg-n5 { margin-top: -3rem !important; }
  .mr-lg-n5, .mx-lg-n5 { margin-right: -3rem !important; }
  .mb-lg-n5, .my-lg-n5 { margin-bottom: -3rem !important; }
  .ml-lg-n5, .mx-lg-n5 { margin-left: -3rem !important; }
  .m-lg-auto { margin: auto !important; }
  .mt-lg-auto, .my-lg-auto { margin-top: auto !important; }
  .mr-lg-auto, .mx-lg-auto { margin-right: auto !important; }
  .mb-lg-auto, .my-lg-auto { margin-bottom: auto !important; }
  .ml-lg-auto, .mx-lg-auto { margin-left: auto !important; }
}

@media (min-width: 1200px) {
  .m-xl-0 { margin: 0px !important; }
  .mt-xl-0, .my-xl-0 { margin-top: 0px !important; }
  .mr-xl-0, .mx-xl-0 { margin-right: 0px !important; }
  .mb-xl-0, .my-xl-0 { margin-bottom: 0px !important; }
  .ml-xl-0, .mx-xl-0 { margin-left: 0px !important; }
  .m-xl-1 { margin: 0.25rem !important; }
  .mt-xl-1, .my-xl-1 { margin-top: 0.25rem !important; }
  .mr-xl-1, .mx-xl-1 { margin-right: 0.25rem !important; }
  .mb-xl-1, .my-xl-1 { margin-bottom: 0.25rem !important; }
  .ml-xl-1, .mx-xl-1 { margin-left: 0.25rem !important; }
  .m-xl-2 { margin: 0.5rem !important; }
  .mt-xl-2, .my-xl-2 { margin-top: 0.5rem !important; }
  .mr-xl-2, .mx-xl-2 { margin-right: 0.5rem !important; }
  .mb-xl-2, .my-xl-2 { margin-bottom: 0.5rem !important; }
  .ml-xl-2, .mx-xl-2 { margin-left: 0.5rem !important; }
  .m-xl-3 { margin: 1rem !important; }
  .mt-xl-3, .my-xl-3 { margin-top: 1rem !important; }
  .mr-xl-3, .mx-xl-3 { margin-right: 1rem !important; }
  .mb-xl-3, .my-xl-3 { margin-bottom: 1rem !important; }
  .ml-xl-3, .mx-xl-3 { margin-left: 1rem !important; }
  .m-xl-4 { margin: 1.5rem !important; }
  .mt-xl-4, .my-xl-4 { margin-top: 1.5rem !important; }
  .mr-xl-4, .mx-xl-4 { margin-right: 1.5rem !important; }
  .mb-xl-4, .my-xl-4 { margin-bottom: 1.5rem !important; }
  .ml-xl-4, .mx-xl-4 { margin-left: 1.5rem !important; }
  .m-xl-5 { margin: 3rem !important; }
  .mt-xl-5, .my-xl-5 { margin-top: 3rem !important; }
  .mr-xl-5, .mx-xl-5 { margin-right: 3rem !important; }
  .mb-xl-5, .my-xl-5 { margin-bottom: 3rem !important; }
  .ml-xl-5, .mx-xl-5 { margin-left: 3rem !important; }
  .p-xl-0 { padding: 0px !important; }
  .pt-xl-0, .py-xl-0 { padding-top: 0px !important; }
  .pr-xl-0, .px-xl-0 { padding-right: 0px !important; }
  .pb-xl-0, .py-xl-0 { padding-bottom: 0px !important; }
  .pl-xl-0, .px-xl-0 { padding-left: 0px !important; }
  .p-xl-1 { padding: 0.25rem !important; }
  .pt-xl-1, .py-xl-1 { padding-top: 0.25rem !important; }
  .pr-xl-1, .px-xl-1 { padding-right: 0.25rem !important; }
  .pb-xl-1, .py-xl-1 { padding-bottom: 0.25rem !important; }
  .pl-xl-1, .px-xl-1 { padding-left: 0.25rem !important; }
  .p-xl-2 { padding: 0.5rem !important; }
  .pt-xl-2, .py-xl-2 { padding-top: 0.5rem !important; }
  .pr-xl-2, .px-xl-2 { padding-right: 0.5rem !important; }
  .pb-xl-2, .py-xl-2 { padding-bottom: 0.5rem !important; }
  .pl-xl-2, .px-xl-2 { padding-left: 0.5rem !important; }
  .p-xl-3 { padding: 1rem !important; }
  .pt-xl-3, .py-xl-3 { padding-top: 1rem !important; }
  .pr-xl-3, .px-xl-3 { padding-right: 1rem !important; }
  .pb-xl-3, .py-xl-3 { padding-bottom: 1rem !important; }
  .pl-xl-3, .px-xl-3 { padding-left: 1rem !important; }
  .p-xl-4 { padding: 1.5rem !important; }
  .pt-xl-4, .py-xl-4 { padding-top: 1.5rem !important; }
  .pr-xl-4, .px-xl-4 { padding-right: 1.5rem !important; }
  .pb-xl-4, .py-xl-4 { padding-bottom: 1.5rem !important; }
  .pl-xl-4, .px-xl-4 { padding-left: 1.5rem !important; }
  .p-xl-5 { padding: 3rem !important; }
  .pt-xl-5, .py-xl-5 { padding-top: 3rem !important; }
  .pr-xl-5, .px-xl-5 { padding-right: 3rem !important; }
  .pb-xl-5, .py-xl-5 { padding-bottom: 3rem !important; }
  .pl-xl-5, .px-xl-5 { padding-left: 3rem !important; }
  .m-xl-n1 { margin: -0.25rem !important; }
  .mt-xl-n1, .my-xl-n1 { margin-top: -0.25rem !important; }
  .mr-xl-n1, .mx-xl-n1 { margin-right: -0.25rem !important; }
  .mb-xl-n1, .my-xl-n1 { margin-bottom: -0.25rem !important; }
  .ml-xl-n1, .mx-xl-n1 { margin-left: -0.25rem !important; }
  .m-xl-n2 { margin: -0.5rem !important; }
  .mt-xl-n2, .my-xl-n2 { margin-top: -0.5rem !important; }
  .mr-xl-n2, .mx-xl-n2 { margin-right: -0.5rem !important; }
  .mb-xl-n2, .my-xl-n2 { margin-bottom: -0.5rem !important; }
  .ml-xl-n2, .mx-xl-n2 { margin-left: -0.5rem !important; }
  .m-xl-n3 { margin: -1rem !important; }
  .mt-xl-n3, .my-xl-n3 { margin-top: -1rem !important; }
  .mr-xl-n3, .mx-xl-n3 { margin-right: -1rem !important; }
  .mb-xl-n3, .my-xl-n3 { margin-bottom: -1rem !important; }
  .ml-xl-n3, .mx-xl-n3 { margin-left: -1rem !important; }
  .m-xl-n4 { margin: -1.5rem !important; }
  .mt-xl-n4, .my-xl-n4 { margin-top: -1.5rem !important; }
  .mr-xl-n4, .mx-xl-n4 { margin-right: -1.5rem !important; }
  .mb-xl-n4, .my-xl-n4 { margin-bottom: -1.5rem !important; }
  .ml-xl-n4, .mx-xl-n4 { margin-left: -1.5rem !important; }
  .m-xl-n5 { margin: -3rem !important; }
  .mt-xl-n5, .my-xl-n5 { margin-top: -3rem !important; }
  .mr-xl-n5, .mx-xl-n5 { margin-right: -3rem !important; }
  .mb-xl-n5, .my-xl-n5 { margin-bottom: -3rem !important; }
  .ml-xl-n5, .mx-xl-n5 { margin-left: -3rem !important; }
  .m-xl-auto { margin: auto !important; }
  .mt-xl-auto, .my-xl-auto { margin-top: auto !important; }
  .mr-xl-auto, .mx-xl-auto { margin-right: auto !important; }
  .mb-xl-auto, .my-xl-auto { margin-bottom: auto !important; }
  .ml-xl-auto, .mx-xl-auto { margin-left: auto !important; }
}

.text-monospace { font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Li=
beration Mono", "Courier New", monospace !important; }

.text-justify { text-align: justify !important; }

.text-wrap { white-space: normal !important; }

.text-nowrap { white-space: nowrap !important; }

.text-truncate { overflow: hidden; text-overflow: ellipsis; white-space: no=
wrap; }

.text-left { text-align: left !important; }

.text-right { text-align: right !important; }

.text-center { text-align: center !important; }

@media (min-width: 576px) {
  .text-sm-left { text-align: left !important; }
  .text-sm-right { text-align: right !important; }
  .text-sm-center { text-align: center !important; }
}

@media (min-width: 768px) {
  .text-md-left { text-align: left !important; }
  .text-md-right { text-align: right !important; }
  .text-md-center { text-align: center !important; }
}

@media (min-width: 992px) {
  .text-lg-left { text-align: left !important; }
  .text-lg-right { text-align: right !important; }
  .text-lg-center { text-align: center !important; }
}

@media (min-width: 1200px) {
  .text-xl-left { text-align: left !important; }
  .text-xl-right { text-align: right !important; }
  .text-xl-center { text-align: center !important; }
}

.text-lowercase { text-transform: lowercase !important; }

.text-uppercase { text-transform: uppercase !important; }

.text-capitalize { text-transform: capitalize !important; }

.font-weight-light { font-weight: 300 !important; }

.font-weight-lighter { font-weight: lighter !important; }

.font-weight-normal { font-weight: 400 !important; }

.font-weight-bold { font-weight: 700 !important; }

.font-weight-bolder { font-weight: bolder !important; }

.font-italic { font-style: italic !important; }

.text-white { color: rgb(255, 255, 255) !important; }

.text-primary { color: rgb(0, 123, 255) !important; }

a.text-primary:focus, a.text-primary:hover { color: rgb(0, 86, 179) !import=
ant; }

.text-secondary { color: rgb(108, 117, 125) !important; }

a.text-secondary:focus, a.text-secondary:hover { color: rgb(73, 79, 84) !im=
portant; }

.text-success { color: rgb(40, 167, 69) !important; }

a.text-success:focus, a.text-success:hover { color: rgb(25, 105, 44) !impor=
tant; }

.text-info { color: rgb(23, 162, 184) !important; }

a.text-info:focus, a.text-info:hover { color: rgb(15, 102, 116) !important;=
 }

.text-warning { color: rgb(255, 193, 7) !important; }

a.text-warning:focus, a.text-warning:hover { color: rgb(186, 139, 0) !impor=
tant; }

.text-danger { color: rgb(220, 53, 69) !important; }

a.text-danger:focus, a.text-danger:hover { color: rgb(167, 29, 42) !importa=
nt; }

.text-light { color: rgb(248, 249, 250) !important; }

a.text-light:focus, a.text-light:hover { color: rgb(203, 211, 218) !importa=
nt; }

.text-dark { color: rgb(52, 58, 64) !important; }

a.text-dark:focus, a.text-dark:hover { color: rgb(18, 20, 22) !important; }

.text-body { color: rgb(33, 37, 41) !important; }

.text-muted { color: rgb(108, 117, 125) !important; }

.text-black-50 { color: rgba(0, 0, 0, 0.5) !important; }

.text-white-50 { color: rgba(255, 255, 255, 0.5) !important; }

.text-hide { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.text-decoration-none { text-decoration: none !important; }

.text-break { word-break: break-word !important; overflow-wrap: break-word =
!important; }

.text-reset { color: inherit !important; }

.visible { visibility: visible !important; }

.invisible { visibility: hidden !important; }

@media print {
  *, ::after, ::before { text-shadow: none !important; box-shadow: none !im=
portant; }
  a:not(.btn) { text-decoration: underline; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  pre { white-space: pre-wrap !important; }
  blockquote, pre { border: 1px solid rgb(173, 181, 189); break-inside: avo=
id; }
  thead { display: table-header-group; }
  img, tr { break-inside: avoid; }
  h2, h3, p { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
  @page { size: a3; }
  body { min-width: 992px !important; }
  .container { min-width: 992px !important; }
  .navbar { display: none; }
  .badge { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .table-bordered td, .table-bordered th { border: 1px solid rgb(222, 226, =
230) !important; }
  .table-dark { color: inherit; }
  .table-dark tbody + tbody, .table-dark td, .table-dark th, .table-dark th=
ead th { border-color: rgb(222, 226, 230); }
  .table .thead-dark th { color: inherit; border-color: rgb(222, 226, 230);=
 }
}
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/pygments.css

@charset "utf-8";

pre { line-height: 125%; }

td.linenos .normal { color: inherit; background-color: transparent; padding=
-left: 5px; padding-right: 5px; }

span.linenos { color: inherit; background-color: transparent; padding-left:=
 5px; padding-right: 5px; }

td.linenos .special { color: rgb(0, 0, 0); background-color: rgb(255, 255, =
192); padding-left: 5px; padding-right: 5px; }

span.linenos.special { color: rgb(0, 0, 0); background-color: rgb(255, 255,=
 192); padding-left: 5px; padding-right: 5px; }

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(238, 255, 204); }

.highlight .c { color: rgb(64, 128, 144); font-style: italic; }

.highlight .err { border: 1px solid rgb(255, 0, 0); }

.highlight .k { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .o { color: rgb(102, 102, 102); }

.highlight .ch { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cm { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cp { color: rgb(0, 112, 32); }

.highlight .cpf { color: rgb(64, 128, 144); font-style: italic; }

.highlight .c1 { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cs { color: rgb(64, 128, 144); background-color: rgb(255, 240, =
240); }

.highlight .gd { color: rgb(160, 0, 0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(255, 0, 0); }

.highlight .gh { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gi { color: rgb(0, 160, 0); }

.highlight .go { color: rgb(51, 51, 51); }

.highlight .gp { color: rgb(198, 93, 9); font-weight: bold; }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(128, 0, 128); font-weight: bold; }

.highlight .gt { color: rgb(0, 68, 221); }

.highlight .kc { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kd { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kn { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kp { color: rgb(0, 112, 32); }

.highlight .kr { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kt { color: rgb(144, 32, 0); }

.highlight .m { color: rgb(32, 128, 80); }

.highlight .s { color: rgb(64, 112, 160); }

.highlight .na { color: rgb(64, 112, 160); }

.highlight .nb { color: rgb(0, 112, 32); }

.highlight .nc { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .no { color: rgb(96, 173, 213); }

.highlight .nd { color: rgb(85, 85, 85); font-weight: bold; }

.highlight .ni { color: rgb(213, 85, 55); font-weight: bold; }

.highlight .ne { color: rgb(0, 112, 32); }

.highlight .nf { color: rgb(6, 40, 126); }

.highlight .nl { color: rgb(0, 32, 112); font-weight: bold; }

.highlight .nn { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .nt { color: rgb(6, 40, 115); font-weight: bold; }

.highlight .nv { color: rgb(187, 96, 213); }

.highlight .ow { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .mb { color: rgb(32, 128, 80); }

.highlight .mf { color: rgb(32, 128, 80); }

.highlight .mh { color: rgb(32, 128, 80); }

.highlight .mi { color: rgb(32, 128, 80); }

.highlight .mo { color: rgb(32, 128, 80); }

.highlight .sa { color: rgb(64, 112, 160); }

.highlight .sb { color: rgb(64, 112, 160); }

.highlight .sc { color: rgb(64, 112, 160); }

.highlight .dl { color: rgb(64, 112, 160); }

.highlight .sd { color: rgb(64, 112, 160); font-style: italic; }

.highlight .s2 { color: rgb(64, 112, 160); }

.highlight .se { color: rgb(64, 112, 160); font-weight: bold; }

.highlight .sh { color: rgb(64, 112, 160); }

.highlight .si { color: rgb(112, 160, 208); font-style: italic; }

.highlight .sx { color: rgb(198, 93, 9); }

.highlight .sr { color: rgb(35, 83, 136); }

.highlight .s1 { color: rgb(64, 112, 160); }

.highlight .ss { color: rgb(81, 121, 24); }

.highlight .bp { color: rgb(0, 112, 32); }

.highlight .fm { color: rgb(6, 40, 126); }

.highlight .vc { color: rgb(187, 96, 213); }

.highlight .vg { color: rgb(187, 96, 213); }

.highlight .vi { color: rgb(187, 96, 213); }

.highlight .vm { color: rgb(187, 96, 213); }

.highlight .il { color: rgb(32, 128, 80); }
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/css/theme.css

@charset "utf-8";

a { color: rgb(40, 120, 162); overflow-wrap: break-word; }

a:focus { outline: none; }

a.headerlink { color: rgb(198, 15, 15); font-size: 0.8em; padding: 0px 4px;=
 text-decoration: none; visibility: hidden; }

a.headerlink:hover { background-color: rgb(198, 15, 15); color: white; }

p { word-break: break-word; hyphens: auto; }

input:focus { outline: none; }

code { color: rgb(34, 34, 34); background-color: rgb(236, 240, 243); border=
-radius: 0.2rem; padding: 0.15rem; word-break: normal; }

nav { z-index: 3; }

h1 code, h2 code, h3 code, h4 code, h5 code, h6 code { background-color: tr=
ansparent; }

h1:hover a.headerlink, h2:hover a.headerlink, h3:hover a.headerlink, h4:hov=
er a.headerlink, h5:hover a.headerlink, h6:hover a.headerlink, dt:hover a.h=
eaderlink { visibility: visible; }

strong { font-weight: bold; }

a code { color: inherit; }

a code { background-color: transparent; font-weight: bold; color: rgb(40, 1=
20, 162); border-radius: 0px; padding: 0px; white-space: nowrap; }

img { max-width: 100%; }

span.highlighted { background-color: rgb(251, 229, 78); }

div.highlight { border: 1px solid rgb(221, 221, 221); margin-bottom: 1rem; =
}

div.highlight pre { padding: 0.2rem 0.5rem; margin-bottom: 0px; line-height=
: 1.2rem; }

div.highlight a { text-decoration: underline; }

.versionmodified { font-style: italic; }

a.sk-landing-btn { background-color: rgb(255, 156, 52); color: black; curso=
r: pointer; font-size: 1.1rem; font-weight: 500; }

a.sk-landing-btn:hover { background-color: rgb(255, 176, 95); }

.sk-donate-btn { cursor: pointer; }

.sk-page-content div.logo { float: left; width: 200px; }

@media screen and (min-width: 992px) {
  .sk-page-content { padding-left: 2rem !important; padding-right: 2rem !im=
portant; }
}

@media screen and (min-width: 1200px) {
  .sk-px-xl-4 { padding-left: 1.3rem !important; padding-right: 1.3rem !imp=
ortant; }
}

div.clearer { clear: both; }

.sk-btn-primary { background-color: rgb(48, 121, 156); border-color: rgb(48=
, 121, 156); color: white; }

.sk-btn-primary:hover, .sk-btn-primary:active { background-color: rgb(52, 1=
53, 205); border-color: rgb(52, 153, 205); }

.quote { text-align: right; line-height: 1.5em; font-style: italic; margin:=
 2em 3em 1em; }

.line-block { display: block; margin-top: 1em; margin-bottom: 1em; }

#search-results { margin-top: 1rem; }

#searchbox { padding-top: 0.1rem; }

.sk-search-text-input { width: 12rem; }

.sk-search-text-btn { padding-left: 0.2rem; padding-right: 0.2rem; }

ul.search li div.context { color: rgb(136, 136, 136); margin: 0.1rem 0px 0p=
x; text-align: left; }

@media screen and (min-width: 768px) {
  ul.search li div.context { margin-left: 1rem; }
}

ul.search li a { font-weight: bold; }

img.sk-brand-img { height: 48px; }

.navbar-light .navbar-nav a.nav-link, a.sk-dropdown-item { color: rgb(77, 7=
7, 77); font-weight: 500; }

.navbar-light .navbar-nav a.nav-link:hover, a.sk-dropdown-item:hover { colo=
r: rgb(246, 126, 0); }

a.sk-nav-dropdown-item:active { color: white; background-color: rgb(246, 12=
6, 0); }

.nav-more-item-mobile-items { display: inherit; }

.nav-more-item-dropdown { display: none; }

@media screen and (min-width: 768px) {
  .nav-more-item-dropdown { display: inherit; }
  .nav-more-item-mobile-items { display: none; }
}

div.sk-landing-container { max-width: 1400px; }

div.sk-landing-container .text-white { text-shadow: rgb(42, 98, 128) 0px 0p=
x 8px; }

ul.sk-landing-header-body { margin-top: auto; margin-bottom: auto; font-siz=
e: 1.2rem; font-weight: 500; }

div.sk-landing-bg-more-info dd { padding-left: 0px; }

div.sk-landing-bg { background-image: linear-gradient(160deg, rgb(42, 98, 1=
28) 0%, rgb(52, 153, 205) 17%, rgb(255, 243, 211) 59%, rgb(255, 178, 96) 10=
0%); }

div.sk-landing-bg-more-info { background-color: rgb(248, 248, 248); font-si=
ze: 0.96rem; }

.sk-card-title { font-weight: 700; }

.sk-landing-header { font-size: 3.2rem; }

.sk-landing-subheader { letter-spacing: 0.17rem; }

.sk-landing-call-header { color: rgb(224, 114, 0); font-weight: 700; }

img.sk-index-img { max-height: 240px; margin: auto auto 1em; width: auto; }

@media screen and (min-width: 768px) {
  img.sk-index-img { width: 100%; }
}

img.sk-who-uses-carousel-img { max-height: 100px; max-width: 50%; }

div#carouselExampleSlidesOnly { min-height: 200px; }

ul.sk-landing-call-list li { margin-bottom: 0.25rem; }

img.sk-footer-funding-logo { max-height: 36px; max-width: 80px; margin: 0px=
 8px 8px; }

a.sk-footer-funding-link:hover { text-decoration: none; }

.navbar > .sk-docs-container { max-width: 1400px; margin: 0px auto; }

#sk-sidebar-wrapper { height: 100%; overflow: hidden; position: fixed; marg=
in-left: -240px; width: 240px; transition: margin 0.25s ease-out 0s, opacit=
y 0.25s ease-out 0s; background-color: white; opacity: 0; top: 0px; padding=
: 0px 0.5rem 0.5rem; z-index: 2; }

#sk-toggle-checkbox { display: none; }

#sk-toggle-checkbox:checked ~ #sk-sidebar-wrapper { margin-left: 0px; opaci=
ty: 1; }

#sk-doc-wrapper { max-width: 1400px; margin: 0px auto; }

#sk-page-content-wrapper { width: 100%; }

div.sk-page-content { background-color: white; position: relative; margin-t=
op: 0.5rem; }

div.sk-page-content { table-layout: fixed; max-width: 100%; }

div.section h2, div.section h3, div.section h4, div.section h5, div.section=
 h6 { margin-top: 1rem; }

.sk-btn-toggle-toc { position: fixed; bottom: 0px; margin: 0px; border-radi=
us: 0px 0.5rem 0px 0px; z-index: 3; cursor: pointer; }

div.sk-page-content { margin-top: 52px; }

@media screen and (min-width: 1400px) {
  .sk-btn-toggle-toc { border-top-left-radius: 0.5rem; }
}

.sk-btn-toggle-toc:hover { color: white; background-color: rgb(41, 124, 167=
); }

footer.sk-content-footer { padding: 1rem 0px; color: rgb(153, 153, 153); te=
xt-align: right; }

nav.sk-docs-navbar { width: 100%; z-index: 3; transition: top 0.2s ease-in-=
out 0.05s; position: fixed; max-height: 100vh; overflow-y: auto; align-item=
s: initial; }

div.sk-navbar-collapse { padding-bottom: 4rem; }

@media screen and (min-width: 768px) {
  nav.sk-docs-navbar { overflow-y: visible; max-height: none; }
  div.sk-navbar-collapse { padding-bottom: 0px; }
  #sk-page-content-wrapper { padding-left: 240px; max-width: 1240px; margin=
-left: auto; margin-right: auto; }
  #sk-sidebar-wrapper { margin-left: 0px; opacity: 1; }
  #sk-toggle-checkbox:checked ~ #sk-sidebar-wrapper { margin-left: -240px; =
opacity: 0; }
  #sk-toggle-checkbox:checked ~ #sk-page-content-wrapper { padding-left: 0p=
x; margin-left: auto; margin-right: auto; }
}

.centered { text-align: center; }

dl.citation > dd > ol > li { display: inline; }

dl.citation > dd > ol { margin-bottom: 0px; }

div.sk-documentation-index-card { border-left: 0.15rem solid rgb(255, 156, =
52); }

div.sk-documentation-index-card:hover { box-shadow: rgba(0, 0, 0, 0.15) 0px=
 0.5rem 1rem; }

a.sk-documentation-index-anchor:hover { text-decoration: none; color: rgb(4=
0, 120, 162); }

.sk-documentation-index-header { background-color: rgb(205, 232, 239); padd=
ing: 0.5rem; border-radius: 0px 1rem; text-align: center; font-size: 2rem; =
font-weight: 500; }

div.sk-sidebar-toc-logo { height: 52px; }

.sk-toc-active { font-weight: bold; }

div.sk-sidebar-toc-wrapper { font-size: 0.9rem; width: 252px; overflow: hid=
den scroll; height: 100vh; padding-right: 1.75rem; }

div.sk-sidebar-toc-wrapper::-webkit-scrollbar { display: none; }

div.sk-sidebar-toc-wrapper::after { display: block; content: ""; height: 3r=
em; visibility: hidden; }

div.sk-sidebar-toc > ul > li > a { font-weight: bold; }

div.sk-sidebar-toc > ul, div.sk-sidebar-toc ul ul { list-style: none; margi=
n-left: 0px; padding-left: 0px; }

div.sk-sidebar-toc ul ul ul { margin-left: 1rem; }

div.sk-sidebar-toc ul li ul li ul { display: none; }

div.sk-sidebar-toc span { white-space: pre; }

div.sk-sidebar-global-toc ul ul { padding-left: 0.75rem; }

div.sk-page-content h1 { background-color: rgb(205, 232, 239); padding: 0.5=
rem; border-radius: 0px 1rem; text-align: center; font-size: 2rem; overflow=
-wrap: break-word; }

div.sk-page-content h2 { padding: 0.5rem; background-color: rgb(190, 212, 2=
35); border-radius: 0.3rem; font-size: 1.5rem; margin-bottom: 1rem; overflo=
w-wrap: break-word; }

div.sk-page-content h3 { padding: 0.3rem; background-color: rgb(238, 238, 2=
38); border-radius: 0.3rem; font-size: 1.2rem; overflow-wrap: break-word; }

div.sk-page-content h4 { padding: 0.2rem; background-color: rgb(244, 244, 2=
44); border-radius: 0.3rem; font-size: 1.2rem; overflow-wrap: break-word; }

div.sk-page-content h1 code, div.sk-page-content h2 code, div.sk-page-conte=
nt h3 code, div.sk-page-content h4 code { white-space: normal; }

table.longtable p { hyphens: none; line-height: 1.1em; margin-bottom: 0px; =
}

table.longtable td, table.longtable th { border-top: 1px solid rgb(221, 221=
, 221); border-bottom: 1px solid rgb(221, 221, 221); padding-right: 0.5rem;=
 white-space: nowrap; }

table.longtable tr.row-odd { background-color: rgb(240, 247, 250); }

.class > dt, .function > dt, .method > dt { padding: 0.5rem; background-col=
or: rgb(248, 248, 248); font-weight: normal; border-width: 1px 1px 1px 2px;=
 border-style: solid; border-color: rgba(0, 0, 0, 0.125) rgba(0, 0, 0, 0.12=
5) rgba(0, 0, 0, 0.125) rgb(255, 156, 52); border-image: initial; overflow:=
 auto; margin-bottom: 1rem; }

.class > dt::after, .function > dt::after, .method > dt::after { overflow: =
auto; }

code.descname { font-weight: bold; background-color: transparent; padding: =
0px; }

code.descclassname { background-color: transparent; }

.viewcode-link { float: right; }

dl.field-list { display: flex; flex-wrap: wrap; overflow-x: scroll; }

dl.field-list > dt { flex-basis: 100%; font-weight: bold; word-break: break=
-word; }

dl.field-list > dd { flex-basis: 100%; margin-bottom: 0px; }

@media screen and (min-width: 768px) {
  dl.field-list > dt { flex-basis: 110px; }
  dl.field-list > dd { flex: 1 0 calc(100% - 110px); max-width: calc(100% -=
 110px); }
}

dt.field-odd, dt.field-even { background-color: rgb(240, 247, 250); padding=
-left: 0.25rem; }

.field-odd, .field-even { margin-top: 0px; border-bottom: 1px solid rgb(221=
, 221, 221); border-top: 1px solid rgb(221, 221, 221); box-sizing: border-b=
ox; }

dl.field-list > dt::after { content: ":"; }

.classifier { font-style: italic; }

.classifier::before { font-style: normal; margin: 0.3em; content: ":"; }

dd { padding-left: 1rem; }

dl.class > dd { padding-left: 0px; }

@media screen and (min-width: 768px) {
  dl.class > dd { padding-left: 1rem; }
}

.rubric { font-weight: bold; margin-top: 1rem; }

ul.simple li p, ol.simple li p { margin-bottom: 0px; }

ul.simple, ol.simple { padding-left: 1.5rem; }

div.topic { padding: 0.5rem; background-color: rgb(238, 238, 238); margin-b=
ottom: 1rem; border-radius: 0.25rem; border: 1px solid rgb(204, 204, 204); =
}

div.topic p { margin-bottom: 0.25rem; }

div.topic dd { margin-bottom: 0.25rem; }

p.topic-title { font-weight: bold; margin-bottom: 0.5rem; }

div.topic > ul.simple { margin-bottom: 0.25rem; }

p.admonition-title { margin-right: 0.5rem; font-weight: bold; display: inli=
ne; }

p.admonition-title::after { content: ":"; }

div.admonition p.admonition-title + p, div.deprecated p { display: inline; =
}

div.admonition, div.deprecated, div.versionchanged { margin-top: 0.5rem; pa=
dding: 0.5rem; border-radius: 0.5rem; margin-bottom: 0.5rem; border: 1px so=
lid rgb(221, 221, 221); }

div.versionadded { margin: 1rem 0px; }

div.admonition { background-color: rgb(238, 238, 238); }

div.admonition p, div.admonition dl, div.admonition dd, div.deprecated p, d=
iv.versionchanged p, div.versionadded p { margin-bottom: 0px; }

div.deprecated { color: rgb(185, 74, 72); background-color: rgb(243, 229, 2=
29); border-color: rgb(238, 211, 215); }

div.seealso { background-color: rgb(255, 251, 232); border-color: rgb(251, =
238, 213); color: rgb(175, 138, 75); }

div.versionchanged { background-color: rgb(255, 251, 232); border-color: rg=
b(251, 238, 213); }

dt.label { float: left; padding-right: 0.5rem; }

div.highlight:hover span.copybutton { background-color: rgb(63, 85, 107); c=
olor: white; }

div.highlight:hover span.copybutton:hover { background-color: rgb(32, 37, 4=
3); }

div.body img { max-width: 100%; height: unset !important; }

div.body dd > p { hyphens: none; }

img.align-center, figure.align-center, .figure.align-center, object.align-c=
enter { display: block; margin-left: auto; margin-right: auto; margin-botto=
m: 1rem; text-align: center; }

img.align-right, figure.align-right, .figure.align-right, object.align-righ=
t { clear: right; float: right; margin-left: 1em; }

a.brackets::after, span.brackets > a::after { content: "]"; }

a.brackets::before, span.brackets > a::before { content: "["; }

.copybutton { cursor: pointer; position: absolute; top: 0px; right: 0px; bo=
rder: 1px solid rgb(221, 221, 221); color: rgb(221, 221, 221); font-family:=
 monospace; padding-left: 0.2rem; padding-right: 0.2rem; }

div.highlight:hover span.copybutton::after { background: rgb(63, 85, 107); =
border-radius: 0.25rem; color: white; content: attr(title); padding: 0.25re=
m; position: absolute; z-index: 98; width: 100px; font-size: 0.7rem; top: 0=
px; right: 0px; }

img.avatar { width: 100%; }

table.align-default { margin-left: auto; margin-right: auto; }

table.docutils tr:nth-child(2n+1) { background-color: rgb(240, 247, 250); }

table.docutils tr { border-style: solid none; border-width: 1px 0px; border=
-color: rgb(221, 221, 221); }

table.docutils td, table.docutils th { padding: 0.125rem 0.5rem 0.125rem 0.=
25rem; }

table.docutils { margin-bottom: 1rem; line-height: 1rem; max-width: 100%; d=
isplay: block; overflow-x: scroll; }

table.docutils p { margin-bottom: 0px; }

table.docutils p { white-space: pre-wrap; overflow-wrap: break-word; word-b=
reak: initial; }

div.sphx-glr-thumbcontainer { min-height: 250px; font-size: 0.9rem; }

.sphx-glr-example-title > :target::before { display: block; content: ""; ma=
rgin-top: -150px; height: 150px; visibility: hidden; }

.sphx-glr-script-out .highlight pre { padding: 1ex; }

.sphx-glr-script-out div.highlight { padding: 0px; }

@media screen and (min-width: 1540px) {
  .sphx-glr-download-link-note { position: absolute; left: 98%; width: 20ex=
; }
}

table.dataframe { border-collapse: collapse; border-spacing: 0px; color: bl=
ack; font-size: 12px; table-layout: fixed; border: none !important; }

table.dataframe thead { border-bottom: 1px solid black; vertical-align: bot=
tom; }

table.dataframe tr, table.dataframe th, table.dataframe td { text-align: ri=
ght; vertical-align: middle; padding: 0.5em; line-height: normal; white-spa=
ce: normal; max-width: none; border: none; }

table.dataframe th { font-weight: bold; }

table.dataframe tbody tr:nth-child(2n+1) { background: rgb(245, 245, 245); =
}

table.dataframe tbody tr:hover { background: rgba(66, 165, 245, 0.2); }

.sk-btn-rellink { background-color: rgb(255, 156, 52); border-color: rgb(25=
5, 156, 52); color: white; cursor: pointer; font-size: 0.8rem; font-weight:=
 bold; }

.sk-btn-rellink:hover { color: black; border: 1px solid black; }

[sk-rellink-tooltip] { position: relative; cursor: pointer; }

[sk-rellink-tooltip]::before { visibility: hidden; position: absolute; padd=
ing: 0.5rem; overflow: hidden; background-color: rgb(255, 156, 52); white-s=
pace: pre; content: attr(sk-rellink-tooltip); text-align: left; width: 222p=
x; top: 100%; left: -78px; border: 1px solid black; }

[sk-rellink-tooltip]:first-child::before { left: 0px; }

[sk-rellink-tooltip]:last-child::before { left: -144px; }

[sk-rellink-tooltip]:hover::before { visibility: visible; white-space: pre-=
wrap; overflow-wrap: break-word; }

.sk-authors-container { display: flex; flex-wrap: wrap; justify-content: ce=
nter; }

.sk-authors-container > div { width: 100px; margin: 5px; font-size: 0.9rem;=
 }

div.testimonial h2 { background-color: transparent; color: rgb(0, 142, 178)=
; padding: 0px; height: 26px; line-height: 1.1em; font-size: 22px; font-wei=
ght: bold; text-align: left; }

div.testimonial p { color: rgb(28, 28, 28); }

div.testimonial span.testimonial-author p { font-size: 0.8em; font-style: i=
talic; color: rgb(128, 128, 128); }

div.testimonial p { color: rgb(28, 28, 28); }

div.install > input { appearance: none; opacity: 0; }

div.install > label { display: inline-block; margin-top: 12px; padding: 5px=
 11px; background-color: rgb(255, 243, 205); border: none; border-radius: 3=
px; color: black; }

div.install > label:hover { cursor: pointer; }

div.install > input:checked + label { background-color: rgb(255, 156, 52); =
color: white; }

.sk-expandable { display: none; }

div.highlight span.sk-expandable::before { content: "$ "; }

#quickstart-conda:checked ~ * [data-packager=3D"conda"] { display: block; }

#quickstart-conda:checked ~ label[for=3D"quickstart-venv"]::before { conten=
t: "Use conda environment"; }

#quickstart-pip:checked ~ * [data-packager=3D"pip"] { display: block; }

#quickstart-pip:checked ~ label[for=3D"quickstart-venv"]::before { content:=
 "Use pip virtualenv"; }

#quickstart-win:not(:checked) ~ * [data-os=3D"windows"] { display: none; }

#quickstart-lin:not(:checked) ~ * [data-os=3D"linux"] { display: none; }

#quickstart-mac:not(:checked) ~ * [data-os=3D"mac"] { display: none; }

#quickstart-venv:not(:checked) ~ * [data-venv=3D""] { display: none; }

#quickstart-venv:checked ~ * [data-venv=3D"no"] { display: none; }

div.sk-page-content img.map { position: absolute; max-width: none; transfor=
m-origin: left top; transform: scale(0.5); }

div.sk-sponsor-div, div.sk-testimonial-div { display: flex; flex-wrap: wrap=
; align-items: center; }

div.sk-sponsor-div-box, div.sk-testimonial-div-box { width: 100%; }

@media screen and (min-width: 500px) {
  div.sk-sponsor-div-box, div.sk-testimonial-div-box { width: 50%; }
}

table.sk-sponsor-table tr, table.sk-sponsor-table tr:nth-child(2n+1) { bord=
er-style: none; background-color: white; vertical-align: middle; text-align=
: center; }

table.sk-sponsor-table td { padding: 0.3rem; }

.caption { text-align: center; }

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(248, 248, 248); }

.highlight .c { color: rgb(64, 128, 144); font-style: italic; }

.highlight .err { border: 1px solid rgb(255, 0, 0); }

.highlight .k { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .o { color: rgb(102, 102, 102); }

.highlight .ch { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cm { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cp { color: rgb(0, 112, 32); }

.highlight .cpf { color: rgb(64, 128, 144); font-style: italic; }

.highlight .c1 { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cs { color: rgb(64, 128, 144); background-color: rgb(255, 240, =
240); }

.highlight .gd { color: rgb(160, 0, 0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(255, 0, 0); }

.highlight .gh { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gi { color: rgb(0, 160, 0); }

.highlight .go { color: rgb(51, 51, 51); }

.highlight .gp { color: rgb(198, 93, 9); font-weight: bold; }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(128, 0, 128); font-weight: bold; }

.highlight .gt { color: rgb(0, 68, 221); }

.highlight .kc { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kd { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kn { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kp { color: rgb(0, 112, 32); }

.highlight .kr { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kt { color: rgb(144, 32, 0); }

.highlight .m { color: rgb(32, 128, 80); }

.highlight .s { color: rgb(64, 112, 160); }

.highlight .na { color: rgb(64, 112, 160); }

.highlight .nb { color: rgb(0, 112, 32); }

.highlight .nc { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .no { color: rgb(96, 173, 213); }

.highlight .nd { color: rgb(85, 85, 85); font-weight: bold; }

.highlight .ni { color: rgb(213, 85, 55); font-weight: bold; }

.highlight .ne { color: rgb(0, 112, 32); }

.highlight .nf { color: rgb(6, 40, 126); }

.highlight .nl { color: rgb(0, 32, 112); font-weight: bold; }

.highlight .nn { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .nt { color: rgb(6, 40, 115); font-weight: bold; }

.highlight .nv { color: rgb(187, 96, 213); }

.highlight .ow { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .mb { color: rgb(32, 128, 80); }

.highlight .mf { color: rgb(32, 128, 80); }

.highlight .mh { color: rgb(32, 128, 80); }

.highlight .mi { color: rgb(32, 128, 80); }

.highlight .mo { color: rgb(32, 128, 80); }

.highlight .sa { color: rgb(64, 112, 160); }

.highlight .sb { color: rgb(64, 112, 160); }

.highlight .sc { color: rgb(64, 112, 160); }

.highlight .dl { color: rgb(64, 112, 160); }

.highlight .sd { color: rgb(64, 112, 160); font-style: italic; }

.highlight .s2 { color: rgb(64, 112, 160); }

.highlight .se { color: rgb(64, 112, 160); font-weight: bold; }

.highlight .sh { color: rgb(64, 112, 160); }

.highlight .si { color: rgb(112, 160, 208); font-style: italic; }

.highlight .sx { color: rgb(198, 93, 9); }

.highlight .sr { color: rgb(35, 83, 136); }

.highlight .s1 { color: rgb(64, 112, 160); }

.highlight .ss { color: rgb(81, 121, 24); }

.highlight .bp { color: rgb(0, 112, 32); }

.highlight .fm { color: rgb(6, 40, 126); }

.highlight .vc { color: rgb(187, 96, 213); }

.highlight .vg { color: rgb(187, 96, 213); }

.highlight .vi { color: rgb(187, 96, 213); }

.highlight .vm { color: rgb(187, 96, 213); }

.highlight .il { color: rgb(32, 128, 80); }
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/plot_directive.css

@charset "utf-8";

img.plot-directive { border: 0px; max-width: 100%; }
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/sg_gallery.css

@charset "utf-8";

.sphx-glr-thumbcontainer { background: rgb(255, 255, 255); border: 1px soli=
d rgb(255, 255, 255); border-radius: 5px; box-shadow: none; float: left; ma=
rgin: 5px; min-height: 230px; padding-top: 5px; position: relative; }

.sphx-glr-thumbcontainer:hover { border: 1px solid rgb(180, 221, 252); box-=
shadow: rgba(142, 176, 202, 0.5) 0px 0px 15px; }

.sphx-glr-thumbcontainer a.internal { inset: 0px; display: block; padding: =
150px 10px 0px; position: absolute; }

.sphx-glr-thumbcontainer a.internal:hover { background-color: transparent; =
}

.sphx-glr-thumbcontainer p { margin: 0px 0px 0.1em; }

.sphx-glr-thumbcontainer .figure { margin: 10px; width: 160px; }

.sphx-glr-thumbcontainer img { display: inline; max-height: 112px; max-widt=
h: 160px; }

.sphx-glr-thumbcontainer[tooltip]:hover::after { background: rgba(0, 0, 0, =
0.8); border-radius: 5px; color: rgb(255, 255, 255); content: attr(tooltip)=
; left: 95%; padding: 5px 15px; position: absolute; z-index: 98; width: 220=
px; bottom: 52%; }

.sphx-glr-thumbcontainer[tooltip]:hover::before { border-style: solid; bord=
er-image: initial; border-color: rgb(51, 51, 51) transparent; border-width:=
 18px 0px 0px 20px; bottom: 58%; content: ""; left: 85%; position: absolute=
; z-index: 99; }

.sphx-glr-script-out { color: rgb(136, 136, 136); margin: 0px; }

p.sphx-glr-script-out { padding-top: 0.7em; }

.sphx-glr-script-out .highlight { background-color: transparent; margin-lef=
t: 2.5em; margin-top: -2.1em; }

.sphx-glr-script-out .highlight pre { background-color: rgb(250, 250, 226);=
 border: 0px; max-height: 30em; overflow: auto; padding-left: 1ex; margin: =
0px; word-break: break-word; }

.sphx-glr-script-out + p { margin-top: 1.8em; }

blockquote.sphx-glr-script-out { margin-left: 0pt; }

.sphx-glr-script-out.highlight-pytb .highlight pre { color: rgb(0, 0, 0); b=
ackground-color: rgb(255, 228, 228); border: 1px solid rgb(255, 102, 102); =
margin-top: 10px; padding: 7px; }

div.sphx-glr-footer { text-align: center; }

div.sphx-glr-download { margin: 1em auto; vertical-align: middle; }

div.sphx-glr-download a { background-color: rgb(255, 255, 204); background-=
image: linear-gradient(rgb(255, 255, 204), rgb(213, 213, 126)); border-radi=
us: 4px; border: 1px solid rgb(194, 194, 45); color: rgb(0, 0, 0); display:=
 inline-block; font-weight: bold; padding: 1ex; text-align: center; }

div.sphx-glr-download code.download { display: inline-block; white-space: n=
ormal; word-break: normal; overflow-wrap: break-word; border: none; backgro=
und: none; }

div.sphx-glr-download a:hover { box-shadow: rgba(255, 255, 255, 0.1) 0px 1p=
x 0px inset, rgba(0, 0, 0, 0.25) 0px 1px 5px; text-decoration: none; backgr=
ound-image: none; background-color: rgb(213, 213, 126); }

.sphx-glr-example-title:target::before { display: block; content: ""; margi=
n-top: -50px; height: 50px; visibility: hidden; }

ul.sphx-glr-horizontal { list-style: none; padding: 0px; }

ul.sphx-glr-horizontal li { display: inline; }

ul.sphx-glr-horizontal img { height: auto !important; }

.sphx-glr-single-img { margin: auto; display: block; max-width: 100%; }

.sphx-glr-multi-img { max-width: 42%; height: auto; }

div.sphx-glr-animation { margin: auto; display: block; max-width: 100%; }

div.sphx-glr-animation .animation { display: block; }

p.sphx-glr-signature a.reference.external { border-radius: 5px; padding: 3p=
x; font-size: 75%; text-align: right; margin-left: auto; display: table; }

.sphx-glr-clear { clear: both; }

a.sphx-glr-backref-instance { text-decoration: none; }
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/sg_gallery-binder.css

@charset "utf-8";

div.binder-badge { margin: 1em auto; vertical-align: middle; }
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/sg_gallery-dataframe.css

@charset "utf-8";

table.dataframe { border-collapse: collapse; border-spacing: 0px; color: bl=
ack; font-size: 12px; table-layout: fixed; border: none !important; }

table.dataframe thead { border-bottom: 1px solid black; vertical-align: bot=
tom; }

table.dataframe tr, table.dataframe th, table.dataframe td { text-align: ri=
ght; vertical-align: middle; padding: 0.5em; line-height: normal; white-spa=
ce: normal; max-width: none; border: none; }

table.dataframe th { font-weight: bold; }

table.dataframe tbody tr:nth-child(2n+1) { background: rgb(245, 245, 245); =
}

table.dataframe tbody tr:hover { background: rgba(66, 165, 245, 0.2); }
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/sg_gallery-rendered-html.css

@charset "utf-8";

.rendered_html { color: rgb(0, 0, 0); }

.rendered_html em { font-style: italic; }

.rendered_html strong { font-weight: bold; }

.rendered_html u { text-decoration: underline; }

.rendered_html :link { text-decoration: underline; }

.rendered_html :visited { text-decoration: underline; }

.rendered_html h1 { font-size: 185.7%; margin: 1.08em 0px 0px; font-weight:=
 bold; line-height: 1; }

.rendered_html h2 { font-size: 157.1%; margin: 1.27em 0px 0px; font-weight:=
 bold; line-height: 1; }

.rendered_html h3 { font-size: 128.6%; margin: 1.55em 0px 0px; font-weight:=
 bold; line-height: 1; }

.rendered_html h4 { font-size: 100%; margin: 2em 0px 0px; font-weight: bold=
; line-height: 1; }

.rendered_html h5 { font-size: 100%; margin: 2em 0px 0px; font-weight: bold=
; line-height: 1; font-style: italic; }

.rendered_html h6 { font-size: 100%; margin: 2em 0px 0px; font-weight: bold=
; line-height: 1; font-style: italic; }

.rendered_html h1:first-child { margin-top: 0.538em; }

.rendered_html h2:first-child { margin-top: 0.636em; }

.rendered_html h3:first-child { margin-top: 0.777em; }

.rendered_html h4:first-child { margin-top: 1em; }

.rendered_html h5:first-child { margin-top: 1em; }

.rendered_html h6:first-child { margin-top: 1em; }

.rendered_html ul:not(.list-inline), .rendered_html ol:not(.list-inline) { =
padding-left: 2em; }

.rendered_html ul { list-style: disc; }

.rendered_html ul ul { list-style: square; margin-top: 0px; }

.rendered_html ul ul ul { list-style: circle; }

.rendered_html ol { list-style: decimal; }

.rendered_html ol ol { list-style: upper-alpha; margin-top: 0px; }

.rendered_html ol ol ol { list-style: lower-alpha; }

.rendered_html ol ol ol ol { list-style: lower-roman; }

.rendered_html ol ol ol ol ol { list-style: decimal; }

.rendered_html * + ul { margin-top: 1em; }

.rendered_html * + ol { margin-top: 1em; }

.rendered_html hr { color: black; background-color: black; }

.rendered_html pre { margin: 1em 2em; padding: 0px; background-color: rgb(2=
55, 255, 255); }

.rendered_html code { background-color: rgb(239, 240, 241); }

.rendered_html p code { padding: 1px 5px; }

.rendered_html pre code { background-color: rgb(255, 255, 255); }

.rendered_html pre, .rendered_html code { border: 0px; color: rgb(0, 0, 0);=
 font-size: 100%; }

.rendered_html blockquote { margin: 1em 2em; }

.rendered_html table { margin-left: auto; margin-right: auto; border: none;=
 border-collapse: collapse; border-spacing: 0px; color: black; font-size: 1=
2px; table-layout: fixed; }

.rendered_html thead { border-bottom: 1px solid black; vertical-align: bott=
om; }

.rendered_html tr, .rendered_html th, .rendered_html td { text-align: right=
; vertical-align: middle; padding: 0.5em; line-height: normal; white-space:=
 normal; max-width: none; border: none; }

.rendered_html th { font-weight: bold; }

.rendered_html tbody tr:nth-child(2n+1) { background: rgb(245, 245, 245); }

.rendered_html tbody tr:hover { background: rgba(66, 165, 245, 0.2); }

.rendered_html * + table { margin-top: 1em; }

.rendered_html p { text-align: left; }

.rendered_html * + p { margin-top: 1em; }

.rendered_html img { display: block; margin-left: auto; margin-right: auto;=
 }

.rendered_html * + img { margin-top: 1em; }

.rendered_html img, .rendered_html svg { max-width: 100%; height: auto; }

.rendered_html img.unconfined, .rendered_html svg.unconfined { max-width: n=
one; }

.rendered_html .alert { margin-bottom: initial; }

.rendered_html * + .alert { margin-top: 1em; }

[dir=3D"rtl"] .rendered_html p { text-align: right; }
------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png

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

------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_release_highlights_0_24_0_thumb.png

iVBORw0KGgoAAAANSUhEUgAAAZAAAAEYCAYAAAByXKB5AAC+7klEQVR42uydd3RlV3X/83f++q2V
laz0CukhpBJKSCFAgNB7sSFAiME4AQIG29SAbTAOBlfcbaqNex/b03vVNI26Rr13Pb2ien/ns8/e
V+fdeU8jafSeZux7Zt010tN9t5yzz/7uvn8uiqKfW8WRjnSkIx3peO6M1eDAz/1clAJIOtKRjnSk
AJICSDrSkY50pCMFkHSkIx3pSEcKIOlIRzrSkY4UQM4pAOns7IwOHDgQ7d27N2ptbV3Rd2dmZqKp
qan49/7+frneUqOrqyuamJhY8pzh4WG5VrXH9PR01NbWFs3NzZ0Va5PL5aJDhw5FjY2N0cLCQvx5
b29vNDQ0dM7sur6+PlnT59pgTaAX1mmtrpfJZGL6Y3/V1dXJ/2c62HP79++P2tvbV/xdnml2djaF
jxRATiXYd7/73dFb3vKW6DOf+Uz0yle+MrrpppuW/f3du3dHl112Wfw7BLpp06Ylv/Pv//7v0YMP
PrjkOd/73veiSy+9tOrz0d3dHf3rv/5rNDo6elasz6c+9anogx/8YHTvvfdG8/Pz8eef/vSno+98
5zvnzK77/Oc/H333u999znETmOrrX/96Afm1GPl8PvrEJz4RC0/ZbDa6++67hYGf6T7/wAc+EF1w
wQXRU089tSo6PHHiRAofKYCcSljvec97YqJ64oknope97GXCSB999NHohhtuiB566CGRzBktLS3R
008/HT355JPC1C688MLoz/7sz4Ths4mam5tFm2Ggzdx1113R97///aIN9tGPfjR6+OGHT3kWmPbt
t98e/fSnP42+8Y1vRF/5ylfkcxgnz3XttddGmzdvLvqM6952223R/fffXyQh7dixI7ruuuvkHYzx
bt26Ndq3b1/0k5/8JPrxj39cpDnxTjfeeKO815vf/OYYQJD+ANQf/vCHsdZ05MgRuf7jjz8e3Xrr
rSJd2+D9b775ZjnQGhjc55577omuv/766OjRoyXXYWxsTBgFz2Df41l++7d/W4D02LFjRedffPHF
0de//nVZA743Pj4e/23Pnj3y7qybzQnvbtol93rsscdiDYe543z+LxQK8nlTU5Os25133hmNjIwU
3Zv55PuDg4PxZzxrT0+PfMb6QTfbtm2L/847sH4M5s3m9+TJk/JsNhA+eBauF2pcIb3yN84xWrD1
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
oVAoFDOfQP4/9AVEt4ZiPVAAAAAASUVORK5CYII=

------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_classifier_comparison_thumb.png

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
Jwzw2y6++/qK1iVyWfqHhwCYmJxirlzhdXeLQmCaOjHTwJQefrP5uq/j9HNtJeIMrR8BYHZunpPT
JUwrKk+NZOXzODsQGWc/Y4KV+3H2H8kwjGY1LvDL+W3/leXPV65Hs0yGN26IjmJIKSWKoiiK8rqD
taIoiqJcBoP/xbtrFUVRFDUCURRFURQVQBRFURQVQBRFURQVQBRFURQVQBRFURQVQBRFURRFBRBF
URRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFUQFEURRFUQFEURRFUQFEURRFUQFEURRFUQFEURRF
UVQAURRFUVQAURRFUVQAURRFUVQAURRFUVQAURRFURQVQBRFURQVQBRFURQVQBRFURQVQBRFURQV
QBRFURRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFUQFEURRFUQFEURRFUQFEURRFUQFE
URRFUVQAURRFUVQAURRFUVQAURRFUVQAURRFUVQAURRFURQVQBRFURQVQBRFURQVQBRFURQVQBRF
URQVQBRFURRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFUQFEURRFUQFEURRFUQFEURRF
UQFEURRFUQFEURRFUVQAURRFUVQAURRFUVQAURRFUVQAURRFUVQAURRFURQVQBRFURQVQBRFURQV
QBRFURQVQBRFURQVQBRFURRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFUQFEURRFUQFEURRFUQFE
URRFUQFEURRF+b/S/w+duA9gnSxSmgAAAABJRU5ErkJggg==

------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_voting_decision_regions_thumb.png

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
YII=

------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_classification_thumb.png

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

------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_caching_nearest_neighbors_thumb.png

iVBORw0KGgoAAAANSUhEUgAAAZAAAAEYCAYAAAByXKB5AAAwfUlEQVR42u2d93+UVdrG9994f3rX
uupa1vVd166oK2tFRGwgICIKgkhXmnQQC0gVRKQLiIj0ntARQpHQQYoUCSUQIJAE5H7ne4YTn8QJ
JCGZeSa5rs/n+mQyM895zsyc+1znPuW+/2JmfxFFURTFklJfgiiKoigBEUVRFCUgoiiKogREFEVR
lICIoiiKogREFEVRlICIoiiKEhBRFEVRAiKKoihKQERRFEVRAiKKoihKQERRFEUJiCiKoigBEUVR
FCUgoiiKoigBEUVRFCUgoiiKogREFEVRlICIoiiKEhBRFEVRlICIoiiKEhBRFEVRAiKKoihKQERR
FEUJiCiKoihKQERRFEUJiCiKoigBEUVRFCUgoiiKogREFEVRFCUgoiiKogREFEVRlICIoiiKEhBR
FEVRAiKKoiiKEhBRFEVRAiKKoihKQERRFEUJiCiKoiheEhBBEARBKDEkIIIgCIIERBAEQZCACIIg
CBIQQRAEQQIiCIIgCBIQQRAEQQJSxli0aJF99tln9sUXX9i6dessNzfXJk+ebOfOnbuqMg8fPuwe
U9agQYNs9erVtnbt2mKXcejQIdu1a5d7fPbsWZs5c6adP39eP5hQLti3b5/16tXL+vTpY59++qlr
rwsXLrSLFy/axo0b/2QPPI+9+DaZlpZmmzZtKpO6bNmyxd3/cti7d68tXbrUPV6/fr39/vvv7vG8
efNs+/btZf79LFu2zH3GIH777Tdn6yUBdVu1apUEpCJg4MCB9sYbbzhDmTt3rg0bNsw1ihdeeMFO
njxpeXl5lpGRYUeOHClw3fHjx10H742KDv7gwYPuGrB161bLyspy5f73v/+12bNnuwYPPSgTXrhw
wfHo0aP5ogO+/PJLa9WqlSuX8jFi3gdOnDjh6uVBPXJyctz1CGBh8Bqf69ixYwWeP3PmjPsc/C1c
LwyScn15/jEdBuXxHfB5fdmZmZkFyj516lT+d5Sdne2+y+BrdEBCeED7f/HFF50oQNod7Zi2UaNG
DVuyZIlrdx48fvLJJ13nTVunbXMNbZTfnNf9+31bCYL2W7jNAK5v1qyZqwPl+Hbj2wztkvZEW2aA
hd1Qj/T0dPee5s2b23fffVekLQDqG7Rf6hb8P5YtdO/e3QYMGOD+xx79dXxH1Is68Tz3DbZtvgM+
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

------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_nca_dim_reduction_thumb.png

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
YII=

------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_nca_classification_thumb.png

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

------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_digits_classification_exercise_thumb.png

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
AABJRU5ErkJggg==

------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_document_classification_20newsgroups_thumb.png

iVBORw0KGgoAAAANSUhEUgAAAZAAAAEYCAYAAAByXKB5AAAxw0lEQVR42u2deXCU553nlarU7IAh
8WSS7Di1NZWZqp0jmexs1SSZPyY1qUol2T+SeOytSSrZTbbiOHZsxhcOxmBkEIcAIYG5wdynJBA3
AglJ6OCWuCV0cLpbN7oQEkhIQvz2/TzQWGYwagkkd7e+36pv9fG+/ar19NPPp5/3+P6izCxKlmVZ
lvtqNYIsy7IsgMiyLMsCiCzLsiyAyLIsywKILMuyLPcAiCRJkiT1WQKIJEmSJIBIkiRJAogkSZIk
gEiSJEkCiCRJkiQJIJL02am7u9uOHz9uaWlpVl9frwaRBBBJkoJTbm6uzZw5006dOuUAUlJSYvv2
7bPW1lYrLS219PR0a2trs/Pnz1teXp5VVlbawYMH3fqSJIBI0hCW3++36OhoS0hIsOzsbJs2bZoV
FBTYuXPnbOrUqbZ7925btmyZxcTE2NatW23hwoW2ZMkSGz9+vCAiCSCSNJTV0dFhzc3NDhQ/+clP
bOnSpdbZ2Wlnz561Dz74wKqrq2369OkWHx9v165dsxkzZjjYrFy50i5fvqwGlAQQSRrKM5APP/zQ
zSwKCwstOTnZzTAAx6ZNmxws2H2VmprqAFJVVWUrVqxw67W0tKgBJQFEkiRJEkCkJ6g7d+6oESRJ
EkCk4MXZOPPmzbMNGzbY+vXrZVkewua42JEjRwQQKThduXLFHVRlBsJ1ArIs9998j8LVvP9Lly65
Y2ACiBSUPvroI3dhmSRJj6/29na7fv162Jn3HS7jgQAigEhSxKmrq8vtEr5165Z3v6NXd3TccuuG
gnnfzEB8Pp8AIgkgkjTYYiDm1zy6fv2WNTc/2p2d3SHz3nnft2/fFkAkAUSSPiuA3LjRYteu3bK/
+7sF9tWvxnmO/xRPt507z3/i9VysmZ+fb1evXnVJAVyLc/r0aTtz5owb4A8dOmQVFRUuz4xbAUQS
QCQpwgDS2NhuTz89w6Kioj1P/BSPt02bzt1/LbuPuJBz27Zt7qzIkydP2okTJ2zNmjXu7ChuFy9e
7G4nT57somdIERBAJAFEkiIIIA0N7TZ8+DQHiaioCZ/isZaUVHT/tZwFxcwCMIwePdqFWwIQ4JGY
mGirVq2yo0ePuowyTrUl5BLoCCCSACJJEQKQlpbr1tFx2zZvLvYG/7OP8BlvsG7+xOvZXcU1GKQg
k4zc2NjodmkReNnQ0GC1tbUuzywnJ8eKioqe6HsXQCQBRJI+Y4AEDqKHmwQQqf8AychWQ0iSACKA
SH0ESHmVpc34mVnar832eM581ayjVQ0jSf0ECKly173BuLmr65HufCB/jrRkriV5UOy2YllP9Rav
T2x/XV2dM2dzCSDSwACkotbSXn3KbJb3sczwPG+4WZvKnUpSfwByo6XFrnkQ+Pv8fPuLQ4fsLw4f
frgPHrRdDQ33X8vg/frrr9vOnTvdgfP9+/e7A+VJSUnumMhh7zWcoUXBr+LiYreMU32J5+c4CcdP
iOYnlgjt2bPHxo4d69Zj2fLly90ZXGyP04GJLOHAPAfqBRDpMQHiQSPO+1imA5BhAogkPQZAGj2A
jPQG7qisLIvyQPBQZ2Za8tWrn3g9AGDGQFEvZg2bN2+2t99+2515RdgpRb84UwtoUOSLs7GAx6JF
i1yNF87c4lRgxPNAiNLE1HqhrgtgAjpAaOLEiTZnzhwHFgFE6j9AfOW2f2W0WdkGs1LPF1LM7nSq
YSSpnwBp8gDy9aNH7QsHDtgXPJA81N7Avr3+kz/U1q5daxkZGe6WAl5UhJwyZYpt3779PkQ4ZslM
glN7KfTFgL9u3TpLSUlxYKDmPWKGAWiYiTAr4ZZtU76Y7WzZssVBiNmJACL1W+Veh4zdutN2X2+3
3c1tnm/a7oZGzw0Da+/LU93RoQ9AiiiAMBBzdcZVr2/X9OL2B67jINCQU3Xb2trcY2YhzEjYLst4
nkGe24ADjy9evOhq3Ad2YSGuaOf9BF5/N6Or6/72uZr94+gVAUTqh2r9fhvhTXujvF9EnzrdHgh7
U/ikB6bwkhQJAPksdPPmTVeauL8SQHpRx6f82uVqTiIBAnHGQxEgTwkgkhTWAHlcCSAPEdM5DjSx
/y8wNQyc0gZQWltb7fz5866ACoWVAElTU9P9iADuR7qqvA7zw+XL7NnSEnu2uGjwXFRoR1pbNOpI
EaPOzg53JbpxIi+nwne0PNrdnzxlt7y83A3iDxO7mwKn+HJVOuMYZ2c9qR++AshDxFkNmd4v3Z//
/OfulpwZzlggU4ZbDjhxgIqzHbhdvXq1zZ0713bs2OHMPsVdu3ZFdKfnoFzqjlTrvNE56L7Rwhfu
lixHhBsaWqzpWot1t3k/PFd/w2zxM94g9Cle6Pnyx2NL4DRefuwSZ8KBdM6q2rhxozuFd8yYMe5A
OmIZYxlnWJ06der+GVase/bsWSssLHSn6JaVlQkgjyNOaeOMA85WwECDsxAAx7hx49yZC4AiEFbG
B8HZC6zHcl7LaW+RrJqaSvurv3rNnnlmjufZg+wEWY4Yf/Ob8y0n96KVnCyz2x+MuHtq/Kwejuvh
WM9lyZ/4LrK3hFnIG2+84RJ5GZcWLFjgsq84w6rh3nUjnE3F6bwAhXU4o4rTeAEPP5rfffdd93pO
3xVAHkM0NNM+dk/xIdCwfEg0EuAAIGTtHzhwwJ0zjTkQxWyFADNmJCUlJZF9DKS20kaO/J1FRU3y
/L4sy/1ytH3xi9NsX0apnTlWYrcW/De7PecpDyR33T3XA8r8kR97jueL2z7xXWRmwRjE6bcM/sxA
uHiQ6zU4VTfwY5aL/1g38AOYCwOByYULF9yPXmYj3LJ7XgB5Qrpx44bt27dPO2ofApBnnnnFg8hM
z9NlWe6XY+3rX5/tAaDUzp6pscJjZ63o6Gnns0dOm7+k1BuEqj92q+euTx6/4Bgtp94Goks4s4rj
HNzyXE1NjVuP6Hd+6HKtCMdAWMZrA6foBkDA6wQQaUBFh0lM3G5VVS2yLD+G/f4Ga2ho8gbybuvs
svvu8Hy7O7THAQFE6vdBdHb1SZL0eLpz57Y7TsHZWJzR+aCZKYSqed+cfSqASH0GSNru7XdPO+xq
V4NI0mOIXUgk4YabA1enh0N9IAEklABSUWNpY/7abPHXzDL+oAaRpKH+g1IAkYIHSK2ljRp5N8p9
x/NqEEkSQAQQqQ8AeesZM85b3/sbNYgkCSACiBRsh/FZxo5Es9ZKs/ZGNYgkCSACiBR8h4lN2aqG
kCRJAJH63mFeXLtWDSFJkgDyoEit5IrNYEVqL1etP4445xtxYQ5Xg9bX14d0hxFAJEkSQB4QmVZk
X1GonoYhM4ZL/wlUJE+GnKvLly9bY2OjW0Z8ANkzPE+SJVW+ANCxY8dcLg2vAQhUCTt58qS7T/ol
iZgsj4uLc0XsR48e7bZFTDzBjNQdJu03VDvMytRd+uZIkiSABMRVlZMnT76foc9ATvAYIWOxsbEO
LAzspFwSPkYSL4+TkpJcvHt0dLR7PSm9hJtNmjTJBZyxnJj3mJgYF3DGtrhlGQmYhDCOHz/e1S0G
GiT/8jz1h0NR5eU+S5i11tLTL8my/Jn4gtXUtAogoQQQAscYuIk4Li4uttmzZ1tubq6DBMDgeWYL
ZOgDDyKRuSXlEjPwk4wJBIACICHtkthkwEKdEOqK8HpmKNzyuvz8fJfpP2HCBAen+fPnu78DaLq7
Qy8QhzDFESNI453oEkVlWR5sv2vJyecEkFDbhUVAGIM5A3yg8iBVBtk1xbEO0i3ZhcWMg9x9dm2R
x886vCawW4tdVsCD3VlEw2MamSphvJ5tVVVVOVBQzIVETeqKAC5AxcyHx6EoAPLUUy8IILL8GQIk
KUkACTmABL8bpzxsaxk/rqqrK+z7359gP/7xBs/rZVkedK+2vDy/ABKuABnqB82yslQnRZIkAUTq
T4fJyFJDSJIkgEh97DA+v6Wtn2Xmy/h0f+S57qwaS5IEEAFE6tFhAmm88d7HEvcpjiWp9zk1liQJ
IAKI9CBARpjN8j6WmZ/iaZ63/5saS5IEEAFE6tFhyqstPeZfzbb80CzlU5zs+ehUNZYkCSACiPTJ
DrMrPcPuqCkkSeOBACL1RZV+v31n8RJruCOESJIAIoBIfVCVB5Cvz5tntQKIJAkgAsjHIj6EeBGi
RvojYklI4D1z5oyLLSHCpKGhwUWdYGJKSOUNBDaGK0D+fsECqxNAJEkAEUA+FmGKBCcSgMhATxIv
OVgEH+7evduFH6akpDgYsCwjI8OKioqssrLSZWElJye79F3W4fGcOXNcyGJ6erpr5OnTp7uwRLYd
zh1mc/oefXMkSRJAHgQIsepTpkyx119/3ebOneseAwKCE0nLJW0XwOTl5TmIEPvOMtJ3ExMTHTyI
al+9erW7XbJkiQMHSb1s94MPPnChi+Eqv99ncxLW2f6sK5Yly/IA+bI3xviss7NbAAkXgCxevNgl
4TJrYKAndZfiT8wqfD6fS+fNyclxkKDmB0DJyspykCB+fevWrQ4w3AITZiTsFvvtb39r2dnZFh8f
70DDzCVcRRrvyJHEuU/y/L4sywPiCd73bLo1NLQJIOECECoNEuNOidqOjg43+Le2trrHHLegomBb
W5u7Txw7ce2IdF5ey3LM+pjXUmeEXV5UNuSYCCAKZ92tB6I4d1keWL9nTz0Va/X1AkjYAETqXcS5
f+974+0HP1jnea0sywPi1fbcc0l2/fotAUQAiayDZpmZinOXJEkAkfrTYTKy1RCSJAkgUh87jL/S
0uJ/YZY5yqxwhRpEkgQQAUQKssOQxvvq8LuR7dufVYNIkgAigEgCiCRJAog0kB3GX2HpS0ebnVro
PUhTg0iSACKASMF3mD0Z+9UQkiQJIFLfO8zojRvVEJIkCSDBqrv740warlIPVp2dnXb79u1PbKfn
tsKxw/x+7Vp9cyRJEkB6ihys0tJSKysrc5lWgcGe2JItW7a43Cvi2S9fvuygQFQJIq4kcB9gEHcC
ZIg8qa6udlEmLOc1RL2Tp0VIY3Nzs+Xn51tBQYFL+s3MzPwEbEK1w7yyfr2+OZIkCSA9RWouSbuE
I7711luuYYheJ8qdEMTXXnvNQYTHy5cvd4GLDPrbtm1zSb6k7BKYOHv2bLeNdevWuRBFIt8BEGGN
pPgCqldeecU9B0hI9SWYkUBG4BPqHWZ3Zrq+OZIkCSA9xWA+a9YsB4AZM2a4OiDU8iBZl0F+5cqV
bgbCYL906VJXK4Sod2BBQxL/DmiABPHt1BbBO3fudOm9RMQDG0zcO0Ah4p3UXmY8AKSuri6kP4zK
ynL7P7+a6f0v6Z73yrI8KE71xpZTAkgoA2Tv3r1udxW7nRj0GfwBRG5uroMCMe001r59+9wthaQA
DGYGcvr0aRfVTn0QqhMyWwEkBw4ccAABMIcPH3ZVD5m5AKC4uDi3S4vlAIoU31AWabzDh79wP3Ja
luXB8Dv27LOJAkgoAyQYfdoB8DuPWeI1XMrc3gXIb+8B5D1ZlgfFAkhEAGSoq6LCb2++ucCbceV7
PibL8qD4iO3de0EAEUDC/6BZdnaGGkKSJAFE6keHUZy7JEkCiNTnDkOc++xfmeW8aZbt+eB7Zp03
1DCSJIAIIFIvHYY03leGmc2MupvIO/e/mLXVq2EkSQARQKQgAPLGVzxw/InZHM9L/sIDSIMaRpIE
EAFE6qXD+Hy2b+sas2sXzZo8N182u3NbDSNJAogAIvXeYTak7lFDSJIkgEh97zAvrVunhpAkSQAJ
NZHmG7janavbH/cK94HoMIpzlyRJAHlAu3btsvPnz7vI9ZaWFrt58+b9QT2Qkkvcent7u7u9deuW
e45lmOwrbknwJZ6dmHYU2A6vYTmPSenl9Ww7sH3AUVFR4aLfWUbAInlbodZh3ktO0jdHkiQBpKdI
4A2k8OKEhASXnEs4IqGHgIW0XuLcCT8kaJFgRdJ7gQYR7Xv27HHbILUXE93OawlcZD3i4gltHDVq
lAtoJI2X1yxYsMCSkpIchAhcJO33zTffNL/fH3IdZk/qXg963bIsP5Zvez8quwWQSAEIce5Et1P3
49VXX7UVK1Y4ADCwT5482Q3q+NKlS/bGG2+4iHcgQIQ7sxfWLy8vd8BAzCJGjx59P9Kd2HcgxPps
0+fzuVvgcurUKff3qTNCzDu1RYiNv3LlSkh9GDU1FfaNb7xlf/M3izwvkGW53/7AG0fSBJBIAUhq
aqqrxxEdHe1mFgz0zCw2bdrk4tqBBLMFdmExQ0lJSbHi4mI38DMr2bx5sx05csStx+DPTIJdVdT+
OHv2rHst8AE6FJtitgEoampq3PbZZUX0O38zUGDq6tWrIfVhkMY7cuTvLCpq0r1EXlmW++dx9vzz
yQJIpADkQRGxHjiI/bAY90AEe88o9kBJWo5rBMT9hx0Mf7BWek+F2sHzngD58pdfss9/fprnKbIs
99vv2y9/mSKARCpApP8sdrutWrXZzp9vkGX5sVxvVVUtAogAMrTOusjIVJy7JEkCiNSfDrM31ay7
665DdFebJEkCiAASah2mvMbSxn3TbPXfmi3z/FGaGkWSBBABRAqiw5DGO2qkWfy9OPeyZDWKJAkg
AogUJEBe/3OzuZ83m+X5QooaRZIEEAFECqLD+HyWvXW1WfMFs2ueb99Uo0iSACKASL2r0gPIb9Zt
sHf8lfbOR+X2zuUr9s6lS/33xYu2vrZWDStJAogAEumq9ftteHy8ReXmWlRW1uM7I8OeLSxUw0qS
ABL+ACEJN3CFeOA+V4X3fD6wjCvQiRp52FXqPUWoIlejk/QbatEkoQCQnwkgkiSAhDtAyLYi+JDc
KnKwyLgi5JBcLAIOCUPkSuytW7e64EQyrQg/rK6utqKiIhcBf/36dfd67peUlLhlgCM5OdmmT5/u
lgETEn5Zhxws8rR6xqGEsiq8///N5ESbW1djc2urHt81lZbWck3fREkSQMIbIKTrMtADEu5Ti4P7
hCQCjtLSUps2bZqLcQ8IkFy4cMHFtM+dO9eFJBKeePToUYuJiXEQoTYIoCGUESixDsvmz5/vot8z
MzM/MbsJZfn9Plu+KMmKjtc8MZ8pqLZjxyplWf5UV9iJE9XeD81uASRUAcJsICcnx15++WWXjkvj
EM0OAPLz813KLoM/zwEUZhcAhGRe4DFmzBgHmfj4eDdr2bJli5u1sA5x7iT1rly50tUFASSk9TKz
YXdY2OzCqq20L37xRYuKmnwvkVeW5YH3+/ZnfzbTGhraBJBQBcjx48fdoE+jsOuK2Qj1O5hFBIo9
sauJGQezCZaxK4qIdgDBLi12ZRHtzjrEw7PLinUuXrzoZjSFhYUuMp46I9zHgcqG4QKQESOIc5/o
OVqW5UHxe973Ltbq6wWQkAWI1Luqqyvs298ea9/97grPy2VZHhR/aD/60Tprbr4lgAgg4X3QbN++
dDWEJEkCiNSPDrMvSw0hSZIAIvWxw/j8lpa00KymwOzqqbuR7pIkCSACiNRrhyFM8T+eNkvwPpaF
f2bW1qBGkSQBRACRggTIqBFms7yPZb5321avRpEkAUQAkYLoMOXVlh79T2Ybv2OW8kOzW81qFEkS
QAQQKbgOszct3bgetr9WEVxJEkAEkCGoar/fvrVwkf3DqVP2DwXHPRf0zceO2dsXL6ohJUkAEUCG
mkjjHZGQYFF5eRa1f3/fnZlpzxUVqSElSQCJLICQpEuEybVr16ypqclOnjxp9fX11tjYaCdOnHD5
V+jGjRtuGVlYPN9bFEl5ebmLcSfa5GKY//oGIF+aPds+d/CgfS4np+/2IPKLc+f0zZMkASSyAEIg
IjlWp0+fvh+IyH3ysfCyZctc2CIpuiwDNoQl0ohkWxGkSDQ793lu27Zt7jEZW4QzxsbGugBFQhvZ
Hhlb5GcBFiLew0E+7/9albrLznfdsvOd7f1y7R1dOyJJAkiEAaSgoMCl7TLQU/ODQlDAglDFqqoq
83u/vidOnOhgEBDpuoQqEufOMsBAnPuxY8ds1qxZbhlR7sTC7/d+fbM+zxPjvmDBAps5c6arF0LR
qnAQce7LliRZ4alazzX98pmTNS6aWpblh7nKGzdqQi66XQDpRQz2RLZPnTrVRa5TpwMwJCYmupog
S5cutYMHD7qBf+/evW43FlHv1A5JSEiw6Ohol8YLHJjJkNgLbFiHx8S5c5/tARJ2f3HLrrOw2YVV
W2lPP/17xbnL8gBGt3/pS6EX3S6A9CKOaRCv3tHRYc3NzQ4oHA/B3K+oqHDrtbW1uZh2jmuw7ObN
m1ZWVuYNrrVu9xRR7tT4YBcV22EdIMF6HFuheBTLWJdl4VJMKgCQYcN+ez9iWpblJ+1x9qd/OjXk
otsFEOmxVVHht5dfnmNTphzwnCfL8hN3riUkHPZ+qHYJIAJI5B00y87OVENIkiSASP3oMBnZaghJ
kgQQqY8dxl9pafNeNDs00axskxpEkgQQAUQKssOQxvvqcLNY72PZ/qwaRJIEEAFEEkAkSRJApIHs
MP4KS5//ktnhyWbnU9QgkiSACCBSHzqMDqJLkiSASH0Vce7/c9Ei+8dTp+wfjx8feOfnW0ZTkxpe
kgSQ8AAIV4Z3d3erdzxEpPEOi4+3qNxci8rKGnhnZFji1atqeEkSQEIbIKTrEjdCpAkRI0AkEDPC
bSDwsGd8Oym6hCESoki2FYGMiOgTYtxJ5iVfi2gTzUA0A5EkASRCAUJYIplVJOmSnEtq7ocffugA
sXjxYrecPCzSdQlTJIad+yTqbt++3WVbEbQIgBZ5gyxBjLneL3UeA6ZI6TC6El2SJAHkAVHvg6DE
9PR027hxo4t0p+4HIJk0aZKLac/IyHCQGD9+vHtMgSgKTjHT4PXMQCZPnuy2wXpEwKNwiWvvTWRh
vfTSHO9/zPOcO2iOiZHlSHeON9YcCosMLAHkIVqzZo2DAAN/VlaWHTp0yI4ePWoHDhywFStWuIZi
RkFEOzMMZiEk8jJjoY4Iu7FI8n377betrq7OLl26dL+eCJCJBJHGO3y40nhleSBSeIcNmxYWKbwC
yEPEMQ92NQGBB8UxkMCxjweXs4yZy8PU1dXVa8nb8ATI+/rCy7IAIoBIwauystxefHG2TZyY6zlH
luUn5mybMeOg9yO2UwARQCL3oJkOokuSJIBI/eswuhJdkiQBROpzh/FXWNr8l82OTTE77LmhWI0i
SQKIACIF0WFI431lmFmc97FM8VyaqEaRJAFEAJGCBMhrT5vN9j6WGZ7Pb1ajSJIAIoBIQXQYn98y
Ny0xqztldtVzR7MaRZIEEAFE6l1+r8Ms25VqRe1dnjut6Gabldy8abcj5Ep7SZIEEGmARBrvl2bP
ts8dPGify8mxz2Vn25cPHbKGzk41jiQJIEMbIFw13jN192EJvIHHXLne1NTUa/Q7yb5ckU5j19fX
hz1ARiQkWFRenkXt3+8i10ccOGD1AogkCSBDGSA7d+60tWvXWmFhoW3YsMGFJZ4+fdrlYpF9RTJv
VVWV7d6922VmkYu1cuVKq62tdYm9xJkQhVJaWupuL1++7LKyCFzctm2bzZgxw4qKilz0Cc+xTkND
g8vMCsTGh7qIc/8fixbat06dsm8dL7BvFRTY97w2ar7dpW+TJAkgQxcgq1atspSUFAcSwhED9Tw2
b95sV65ccYM/EJg9e7Zbn9kJce7AgOh2ILN+/XoHHkIYY2JirKSkxD0HfEj4ZbtJSUkusZf1iYIn
lDFcAOI6THqavjmSJAkgPcVsITs7237/+9+7RN7Kyko3wDMrodgUDUUqb1xcnKv9we4oAAIQ5s6d
a2PGjHHAADCZmZkORsxUWAcoHTlyxM1YiIcHMgcPHnQQCadiU9XVFfbtf3rHvvudFZ6XOX/H87e/
LcvywHqxjRuXKYCEKkCYNRC9XlZW5u6zG4v6HmfPnnUQ2bNnj0viPXfunFtGBUJ2cQENZinUDqES
IbHuxcXFrsgUrwc+7NaiNsjJkyfdbjDgwro8bm9vDxuAkMY7YsTvLCpq4r1Id1mWB8fv2nPPJQsg
oQoQKTiAPP30i15nnux5kizLg+b37N//fZMAIoCEr/x+ny1cmOjNrKpkWR5UV9qlS40CiAAS3gfN
MrMy1BCSJAkgUj86TPo+NYQkSQKI1McOU15tadHfNlv/XTN/lhpEkgQQAUQKssOQxjtqxN0k3rIk
NYgkCSACiNQHgPzHF+/WAzm/SQ0iSQKIACIF2WF8fsvetMis9rhZp6LcJUkAEUCkIFXh89moxGSL
q66zuPJKi/P7++R5lZXW1kv4pCRJAogAEoEijXd4fLxF5ea6JN4+OTPThuXlKblXkgSQyAXIjRs3
/lN8e2/q9AbFh8W6E7hIlLsAIoBIkgASwQDZtWuXXb9+3SoqKlxEO9lV3EfkVxGeCChI3yW/qqWl
xaX0pqam2po1a+zw4cMuEwsR+U6e1pIlS1zYYmNjY0R0mEqfz17YsM4mVPptQvlHfbP/I4utKjfh
Q5IEkIgDCJHrzD5I5KV+x7Rp02zx4sWWkZHh4tcnTZrk6n6QoLt06VIXzR6oGxKIfw/UECGFl1Re
AIO6I2S/v88DyIbVW6z8QlO/XVZab6WyLPfJFy402u3bdwSQUAUIYGDGATyo3cHMYv/+/ZaQkODq
gKSnp9vWrVtddPu4cePcrANoUJXwwIEDLvqd2cmLL75ox44duz8rYeZCsamI2IVVW2l//ucv2ec/
P83zFFmWB8Ux9tWvxltDQ5sAEqoAoYYHgz67nIhsJ4KdGQeNRJQ7lQkvXLjgIt9pNGLa2eXFbWJi
ootmRxSQotogu7hYl6JU3I8UgIwc+bt76aDvy7I8KJ7gfe+mez9GBZCQBYjUu2pqKuyb3xxtf/u3
izwvlGV5UDzf/vmfl9u1a+0CiAAS3gfNUlP3WldXtyzLg2wdRBdAwh4g6RmZaghJkgQQqY8dxuez
tC2rzJrOy3LwbvTcWqUvkAAigAzpDkOY4utfNpv7ebM5shykZ3ne/Ut9gQQQAWTIA2TUSLP4qLuJ
vLIcjGM973heXyABRAAZ0h2mvMbS3v2G2eq/MVspy0F6mefsN/QFEkAEkKHeYTL27jG70yXLfbMp
hVkAEUCGtKr9PvvnJUvtXwoL7V9On5bl4H0Kn5JD1SdOWPS96CUBRBoQkcY7IiHBovLyLGr/flmW
I8WZmfZcUZEA0l/V1dVZSUmJS9p9lCorK62mpuaR67CcbbW2tgb1t/mbt2/fdvcJLMTkbPG3HqWG
hgYXk3LkyBE7e/asi1AZaIB8AYAcOGBR2dmyLEeKs7Lsfwsg/RfJuyTyEsFeXFzsUngZnMnIIguL
wTk3N9diY2NdWCKpvTwm+n3nzp0ueJHARQIZSeIl0p0YeGLiycuisXmurKzM9u7d6+LiCwoKXBDj
ypUrXZgjz69YscJtiwwt/sbx48ft4MGD7r2wnNfzujxvFkA2F+/hpZdespycHAcuYuQPHTrk3gfb
qK6ufmJt5Pf+hwU7ttuxtlY7dlOW5d58tLXFDjY3h4VL+/gDVADpoXnz5llMTIyLamfg/uMf/+gG
YNJ4AcTy5ctdvQ8i3LlPMm9KSoqDDnHucXFxrjFJ8uU+QYrbt293gz4x72wXmJDaO336dJfqi3nN
li1bHBBYFgheBALAi789evRolw7Mds+cOWNz5sxx2wVs/A2gE4DP+PHjHeSIlOfv9rU41qPk4tzX
brHyS9dkWe7VTdZ09aZFqgSQHgIK/FpnJhAdHe1qgACGTZs2uaTdVatWubReBm/SdxmceY77DPaA
g9kB6zB4d3R0uJkCj9k265HwG6gfwjaJe58yZYpbBlwCUfK8DiAALKACFJhhACyAxi4rXse2mfXw
HkkLZjss5z5wYebyRHdh1VbaV77ysv3Jn8R6nirL8iM90X71qy0CyFAACLt/KPx09epVd/yCYwoc
Y+DYCLMCotup98EMgPoeRL2zC4kiVM3e9I/12M3F69mtFSgixfocy2CdQLlcdkuxe4ttYLbHelQ8
5O8WFRW5Koa8huXsUmP77Apj+4CK56lFgqk5wi3buXz5shUWFrrX856fNECGDfutRUVFe35PluVH
+h372c8SBRCdhSXdPYGg3PtFNdPefHOf5zRZlh/pPbZ69WkBRACRAh0mO1tpvJIkCSBSfzpMRrYa
QpIkAUTqY4fxV1jakjfNTs0zOynLcsT4hOcrewUQaQABQhrvq8PvJqzOkGU5YjzV8/ZnBRBJAJFl
WQARQEJuF1alpSX80iz7dbP9sixHjDM9F60SQCQdRJckSQfRBRB1GEmSNB5EBkACV5cPpu7cueOM
SOwN3FeHkSRJAAkRgBAPQnQI+VHkSBGxXnQv3jgwaBMT0hMiJN8SKYJI0O2ZfNtzoO8JgK6uLpdV
RYbV6dOnXa7Vg2AKPGZ94lSILyEji79x7dq1zwxsAogkSQLIQ0Qy7owZM1xU+69//WvXMKTbkk21
cOFC27dvn0vHJY+K6Hdi3wkxnDRpkotpJ9hw2rRpLgSRoMQPPvjA8vPzbe3atS6Zl4BFoEEgIkm+
ND4JvIQoAhG2R9YWYY68B4IVCVPk77FNItsBG49J72V7hC7OmjXrPsQGo8NkZ2fomyNJkgDSU0Ss
E5tOqCLR6/Pnz7f4+Hj3PFHvJOgCFO4zE2E50e4M9oF6HufOnXOvBUTU+wA8pPcShMi6gIS0XEIY
EaGHAAVQvPPOOw4abAtQEOMOfLjF/H1AQ3w8UfMAhFkJCbyDpYoKv9dGC73/q0CW5cf2Ue9HY6MA
EgkAYVYQmDkkJSW5dNyxY8feH7T5tU/tDWLVeTxu3Dg3M+DXP88z2AMHZiXsamI7gRkHqbg0NEBi
O0AoUAMEWDCjATrMcnge8FBoCvjwmKJRwIX3R60SYuR5v7w3Hg+WSOMdPpw03veVtCrLTyCtNzGx
SACJBIAESsoSt06sOgrcAoBA2VmOQQAQgMHxDI5v8DymhG3geEQgSj2wXZYFijuxLZazLq+ndghR
8DzmeV5DNHugRC3P81xg2/xdjtf0fG7wAPLCPYBMkGX5sTxWAIkUgASrwCA/FEWc+y9+McNGjdrr
eY8sy4/lXXbyZI0AMpQAMtQPminOXZIkAUTqX4fZJ4BIkiSASH3tMOXVljbpe2YpPzBL8lyRq0aR
JAFEAJGC6DCk8Y4aYTbL+1imeS5LUqNIkgAigEjBAmSkWbz3scQCkGQ1iiQJIAKIFESH8fktY0OC
Wfl+M7/ntjo1iiQJIAKI1Lt8XodZn5pmvi6761ud5mtvt7p718tIkiSACCDSQ1Xr99t/nTPHhh0+
bMPy8u46J8f+b0mJGkeSBJChDZBgotIH4yJCrkLn6vTe3ivrcFX7o8RyrqjnynVSfXvbbm8AGZmQ
YFEeOKL277/rzEx7vqhI3yZJEkCGLkAINCSDinyr8vJyN9Bin8/nIkiqqqqsqanJxb5zi4gnYZ2K
igo3oNfW1rqcK+4DAQIViSMJ3L9x44aLQmG9lpYWd4sqKyvdNoET2+Ix74GBPxCtQsgjr2cZyb28
X7K2yMkirLG+vt5ti/fZ2Njo3hvbIGKevK733nvPZW/xN3gPxMQThcL6vJdgVOP9D/99/nz7y4IC
+8ujR+/am428OkhpwJIkCSAhCRACDYllJxWXRN3ly5e7tFuCC0ncnTx5shUXF7tUXZJxub9+/XqX
0BsTE2Opqaku2JCU3tLSUreM7TDYsz7bZ1uxsbFuXcIT2SYJvTxHMi/R7ACM7fC3qRvCeyJQcerU
qS6sMS4uzqX5MvhTu4SIeTxx4kQHiClTprgIetYlKp7ngM3777/vtsX22QbR8zzPdgMgC6bD7MlI
N9K9elqSJAFkSANk9uzZtmPHDjegM4sYM2aMKyhFqi4DOim71PwACtTkIFKdZN7o6GiXjMtgziDO
+qToAg5AwkBO9DqDOiGM3GeWQXQ8f49t8TeBC9ugLglBjSTt8lr+HunAvD9mHGz/xIkTbtbA3wcC
CxYscMnBpPnyXoAfrw/E0JP4yzaYrRA7Tw0TIAaYgFSwqq6usO//6wT7Xz/a4Hn9ff/4R+vshz+U
ZXngvMr7MegTQEIVIIcPH3ZBidT6YAAnop34dGYcVA5koCZi/dChQ+64AiBglxIzBwZnnmdgR6yX
kZHhgAIYmAWwCwkA8XcCVQkZ7Nm9xLaBAaBiUD9+/Ljb9UQsPFUPgQWQYTvsemJ2w/sjcp6/T9Q7
oOB9sk22DSzYLu+JOiXEyAM0ilbxoTMbAZDskgtWpPGOGEEa70TP0bIsD5rf9caZcwJIqALkSYvd
TICIYxcM0gzw3A9nAZCRI3/ndeZJ9yLdZVkeHL/r/YgUQIYMQCJRfr/PZs1a482uLsuyPKi+6P2A
uyGACCDhfdAsK0s10SVJEkCk/nSYfVlqCEmSBBCpjx2GOPfJ3zfb+mOzTZ4r8tQokiSACCBSEB2G
NN5Xn1KcuyRJAojUD4BQD0Rx7pKk8UAAkfrUYXx+y94wy6w8w8yfaXazVo0iSQKIACL1rgrfRzZ2
0xZbUd9sK6422ZVbinGXJAFEAJGCEGm8w+PjLSo316IyMizx6lU1iiQJIAKI1AeAEOfuASRJAJEk
AUQAMUtJSXFx7mRIUTeDGHYyr4gfIY6dWHcyrIhCx6ThkldFnQ3SeknEJbMqELtOlDqx7iwnMj2Y
WiOhrkqvDf59zWp7+cole/lCmZ1uu6FvkSQJIAIIces0xs9//nObPn26S70l1Xb16tXulsBCwgpZ
hgkqJJKdZaTsYoITWX/lypXucSC2HTARthju8vk+si1JO+xazQ3n2qoWq6yUZfnJ+7o1NrYJIOEC
kECcO/U8iGMnOp3EXRqJ55iRkKRLfDtgIN6dmHRAAjBIvSWV98qVKw5GpOwSs842SMElTTfsd2HV
Vtozz7xiI0bM9DxdluUB82T7zW+2CSDhAhBqcbBbiop9iYmJLpKdKHV2QVHLg5kFu6V27tzpAELt
DYo08Zj6HgCCSHbWp8YH9UBI5GXmwa6uQNR7uANEabyyPBgeZ88/nyyAhAtA+irgQG2NoaSamgr7
679+3b72tQ88z5ZlecAcZ3/4w24BJFIBMlQPmm3fvttaWztkWR5gt7d3CSACSGQBZF+G4twlSRJA
pD53GJ+lbU80u1Fl1uq5vUmNIkkCiAAiBdFhCFN86xmzhSPN5nje+//UKJIkgAggUpAAGTXy4zTe
Hc+rUSRJABFApGAAUmNpf/wrsw+ZhXjOeFmNIkkCiAAiBddhslJ3mHXduOvuW2oUSRJABBCpd1X5
fPaDZcvtpyWl9tOiYs/n7KeFhYPjs2dtht+vD0GSBBABJBxFGu9TCQl303j37x9cZ2bavxUV6UOQ
JAEk9ABCBEkgcZf03IDItHqUKisrraGhwfze4Mo2HjkA19a6hN/8/Hy3XaJTwg0gIz5DgDwngEiS
ABKKAFm6dKkz6bpkXwEFGmfatGlWV1fnwhXJuCKyPTs72+VbkdBLRtZ+b4DbsGGDFRYWuvwswhOB
SVZWlgMMwDhz5oyVlJS47bzxxhsumJFtHTlyxMrKyhyAWJ/nQlV+r8Mk7NxmWe0tltV2fXB9s9lK
brfrWytJAkjoAWTevHkWExNjixYtsjVr1jiQMKATx05MO/djY2NdNPvUqVNt5syZDi4Bbd++3QUm
rl+/3saOHWu7du2yBO/X+rlz52zy5MkOFECG8EXWIbBx3bp1NmHCBLcdEny3bt1qnZ2hWya2vNxv
MdHLLGVD0Wfi5PWFXpudleUh5tPm8zULIKEMkEB0OzOKuXPnultSd6dMmeIGfNJ3gQnrrV271sEC
2AAWIEGsO1AAGm+99ZabxbAu8KHYFPChRgjrEwNPHPzGjRtd3RGSgHltb7vLPvNdWLWVNnz4C/fS
QifIsjwoHmtJSUUCSCgDhF1IHJPgll1N7Eoi0r24uNjFtTPjoGYI1QkZ8DlewvEMKhgWFRW5XVqN
jY1WUFDgCk+x64oodyoU8hxw4NhKfX29q3jIcrYFiHg9y1pbW0MeIE89JYDIsgAigAQtjmcAA46L
DGVVVZXbz342xX796+2et8myPChOsfz8SgEkXAEifdxhsrOVxitJkgAiRWCHkSRJ44EAog4jSZLG
AwFEHUaSJI0HAog6jAAiSZIAIgkgkiQJIJI6jCRJGg8EEHUYSZI0Hggg6jCSJGk8EECkux2GXC9J
kiTimAQQKWiR/zV9+nQXSU8gZDh67969LjmZtORw/R8w75//g/9Hn4U+i8H+LFif1HLuCyBSULpy
5YrrNOXl5S50MhzNe1+xYoULygzX/4P3zfvn/9Bnoc/is/osWI9AWAFECkrXrl1zEIkEEIZy4a5g
xPvXZ6HPQp+FACJJkiQJIJEnaqRQKZHpbeDXCfs9Kf9L/ZNwEeWIqTpJrRdEjRYKfhWFUZ31h30W
7EKgAFo4/XKkLMKSJUtcP7pz547dunXL/V8UbeNxOH4WvO/du3fbypUr3e6dcBG1ixYsWGDd3d3u
Md8Pvid8XwQQ6bHFfk4qMObk5FheXp77sjDwHjt2zH1hwkV8SS5cuODAhzo6OtyXhLLC4fhZ4MCg
NXHiRKurqwub/4MDtfQf+hH9ifuvvfaaJScnO5iE62dBNVLKU/PjJFxEe8+ZM8cVx0OAne8JpbsF
EOmJfFE4cM6XJCMjw/165It/9OjRsAMIVSGpPc+vdk5B5EtChchw/Sw4JhUXF2cvvPCCG4TDRfQb
+g/9qLa21rKzs13ZaH69c6p4OH4W169fd7/cKU3NWYrhIsAHQHj/fC/4gVVWViaASE9uqs7pffza
os775cuX3ReG+u5NTU1hNVXnS8Gs4+TJk+5/YtcP/1O4fhYXL150z2dlZYXVZ8GuT/oP/Yhf60B8
48aNtmXLFjczDNfPgl1yQJDT3cNFpaWlFhMT4yBOeW1mH/zYOnPmjAAiSZIkDV0JIJIkSZIAIkmS
JAkgkiRJkgAiSZIkCSCSJEmS1AMgsizLstxnqxFkWZZlAUSWZVkWQGRZlmUBRJZlWRZAZFmWZVkA
kWVZlh/H/x+nrBhjb9R6kwAAAABJRU5ErkJggg==

------MultipartBoundary--uFwHgp2pgQh2pstbq5qfV6yANWlof8oVdUKLChDWE0------
