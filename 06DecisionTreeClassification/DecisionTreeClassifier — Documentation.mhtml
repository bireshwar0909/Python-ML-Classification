From: <Saved by Blink>
Snapshot-Content-Location: https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html
Subject: =?utf-8?Q?sklearn.tree.DecisionTreeClassifier=20=E2=80=94=20scikit-learn?=
 =?utf-8?Q?=201.0.2=20documentation?=
Date: Thu, 17 Feb 2022 12:31:31 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----"


------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/html
Content-ID: <frame-7B0C3317DB3351A75F2A9D59F15066CA@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html

<!DOCTYPE html><!--[if IE 8]><html class=3D"no-js lt-ie9" lang=3D"en" > <![=
endif]--><!--[if gt IE 8]><!--><html class=3D"no-js" lang=3D"en"><!--<![end=
if]--><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-0d33f7=
5b-65fd-4992-89f2-16fe2af5cb0b@mhtml.blink" /><link rel=3D"stylesheet" type=
=3D"text/css" href=3D"cid:css-4774ef5b-203c-4262-905f-76ee06165677@mhtml.bl=
ink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-9840c8a2-=
b30b-49fd-80dc-636b17c555ae@mhtml.blink" /><link rel=3D"stylesheet" type=3D=
"text/css" href=3D"cid:css-ae59335f-8d31-41df-94bf-be1291123771@mhtml.blink=
" />
 =20
  <meta name=3D"generator" content=3D"Docutils 0.17.1: http://docutils.sour=
ceforge.net/">

  <meta property=3D"og:title" content=3D"sklearn.tree.DecisionTreeClassifie=
r">
  <meta property=3D"og:type" content=3D"website">
  <meta property=3D"og:url" content=3D"https://scikit-learn/stable/modules/=
generated/sklearn.tree.DecisionTreeClassifier.html">
  <meta property=3D"og:site_name" content=3D"scikit-learn">
  <meta property=3D"og:description" content=3D"Examples using sklearn.tree.=
DecisionTreeClassifier: Classifier comparison Classifier comparison, Plot t=
he decision surface of decision trees trained on the iris dataset Plot the =
decision surface of...">
  <meta property=3D"og:image" content=3D"https://scikit-learn/_images/sphx_=
glr_plot_classifier_comparison_thumb.png">
  <meta property=3D"og:image:alt" content=3D"Classifier comparison">
 =20
  <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1.0">

 =20
  <title>sklearn.tree.DecisionTreeClassifier =E2=80=94 scikit-learn 1.0.2 d=
ocumentation</title>
 =20
  <link rel=3D"canonical" href=3D"http://scikit-learn.org/stable/modules/ge=
nerated/sklearn.tree.DecisionTreeClassifier.html">

 =20
  <link rel=3D"shortcut icon" href=3D"https://scikit-learn.org/stable/_stat=
ic/favicon.ico">
 =20

  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
css/vendor/bootstrap.min.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
pygments.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
css/theme.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
plot_directive.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
sg_gallery.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
sg_gallery-binder.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
sg_gallery-dataframe.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
sg_gallery-rendered-html.css" type=3D"text/css">
  <link rel=3D"stylesheet" href=3D"https://scikit-learn.org/stable/_static/=
css/theme.css" type=3D"text/css">

=20
</head>
<body>
<nav id=3D"navbar" class=3D"sk-docs-navbar navbar navbar-expand-md navbar-l=
ight bg-light py-0" style=3D"top: -48px;">
  <div class=3D"container-fluid sk-docs-container px-0">
      <a class=3D"navbar-brand py-0" href=3D"https://scikit-learn.org/stabl=
e/index.html">
        <img class=3D"sk-brand-img" src=3D"https://scikit-learn.org/stable/=
_static/scikit-learn-logo-small.png" alt=3D"logo">
      </a>
    <button id=3D"sk-navbar-toggler" class=3D"navbar-toggler" type=3D"butto=
n" data-toggle=3D"collapse" data-target=3D"#navbarSupportedContent" aria-co=
ntrols=3D"navbarSupportedContent" aria-expanded=3D"false" aria-label=3D"Tog=
gle navigation">
      <span class=3D"navbar-toggler-icon"></span>
    </button>

    <div class=3D"sk-navbar-collapse collapse navbar-collapse" id=3D"navbar=
SupportedContent">
      <ul class=3D"navbar-nav mr-auto">
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link" href=3D"https://scikit-learn.or=
g/stable/install.html">Install</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link" href=3D"https://scikit-learn.or=
g/stable/user_guide.html">User Guide</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link" href=3D"https://scikit-learn.or=
g/stable/modules/classes.html">API</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link" href=3D"https://scikit-learn.or=
g/stable/auto_examples/index.html">Examples</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/getting_started.html">Getting Started</=
a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/tutorial/index.html">Tutorial</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/whats_new/v1.0.html">What's new</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/glossary.html">Glossary</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/developers/index.html">Development</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/faq.html">FAQ</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/support.html">Support</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/related_projects.html">Related packages=
</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/roadmap.html">Roadmap</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/stable/about.html">About us</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://github.com/scikit-learn/scikit-learn">GitHub</a>
        </li>
        <li class=3D"nav-item">
          <a class=3D"sk-nav-link nav-link nav-more-item-mobile-items" href=
=3D"https://scikit-learn.org/dev/versions.html">Other Versions and Download=
</a>
        </li>
        <li class=3D"nav-item dropdown nav-more-item-dropdown">
          <a class=3D"sk-nav-link nav-link dropdown-toggle" href=3D"https:/=
/scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassif=
ier.html#" id=3D"navbarDropdown" role=3D"button" data-toggle=3D"dropdown" a=
ria-haspopup=3D"true" aria-expanded=3D"false">More</a>
          <div class=3D"dropdown-menu" aria-labelledby=3D"navbarDropdown">
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/getting_started.html">Getting Started</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/tutorial/index.html">Tutorial</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/whats_new/v1.0.html">What's new</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/glossary.html">Glossary</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/developers/index.html">Development</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/faq.html">FAQ</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/support.html">Support</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/related_projects.html">Related packages</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/roadmap.html">Roadmap</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/stable/about.html">About us</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://github.com/scikit-learn/scikit-learn">GitHub</a>
              <a class=3D"sk-nav-dropdown-item dropdown-item" href=3D"https=
://scikit-learn.org/dev/versions.html">Other Versions and Download</a>
          </div>
        </li>
      </ul>
      <div id=3D"searchbox" role=3D"search">
          <div class=3D"searchformwrapper">
          <form class=3D"search" action=3D"https://scikit-learn.org/stable/=
search.html" method=3D"get">
            <input class=3D"sk-search-text-input" type=3D"text" name=3D"q" =
aria-labelledby=3D"searchlabel">
            <input class=3D"sk-search-text-btn" type=3D"submit" value=3D"Go=
">
          </form>
          </div>
      </div>
    </div>
  </div>
</nav>
<div class=3D"d-flex" id=3D"sk-doc-wrapper">
    <input type=3D"checkbox" name=3D"sk-toggle-checkbox" id=3D"sk-toggle-ch=
eckbox">
    <label id=3D"sk-sidemenu-toggle" class=3D"sk-btn-toggle-toc btn sk-btn-=
primary" for=3D"sk-toggle-checkbox">Toggle Menu</label>
    <div id=3D"sk-sidebar-wrapper" class=3D"border-right">
      <div class=3D"sk-sidebar-toc-wrapper">
        <div class=3D"sk-sidebar-toc-logo">
          <a href=3D"https://scikit-learn.org/stable/index.html">
            <img class=3D"sk-brand-img" src=3D"https://scikit-learn.org/sta=
ble/_static/scikit-learn-logo-small.png" alt=3D"logo">
          </a>
        </div>
        <div class=3D"btn-group w-100 mb-2" role=3D"group" aria-label=3D"re=
llinks">
            <a href=3D"https://scikit-learn.org/stable/modules/generated/sk=
learn.svm.l1_min_c.html" role=3D"button" class=3D"btn sk-btn-rellink py-1" =
sk-rellink-tooltip=3D"sklearn.svm.l1_min_c">Prev</a><a href=3D"https://scik=
it-learn.org/stable/modules/classes.html" role=3D"button" class=3D"btn sk-b=
tn-rellink py-1" sk-rellink-tooltip=3D"API Reference">Up</a>
            <a href=3D"https://scikit-learn.org/stable/modules/generated/sk=
learn.tree.DecisionTreeRegressor.html" role=3D"button" class=3D"btn sk-btn-=
rellink py-1" sk-rellink-tooltip=3D"sklearn.tree.DecisionTreeRegressor">Nex=
t</a>
        </div>
        <div class=3D"alert alert-danger p-1 mb-2" role=3D"alert">
          <p class=3D"text-center mb-0">
          <strong>scikit-learn 1.0.2</strong><br>
          <a href=3D"http://scikit-learn.org/dev/versions.html">Other versi=
ons</a>
          </p>
        </div>
        <div class=3D"alert alert-warning p-1 mb-2" role=3D"alert">
          <p class=3D"text-center mb-0">
            Please <a class=3D"font-weight-bold" href=3D"https://scikit-lea=
rn.org/stable/about.html#citing-scikit-learn"><string>cite us</string></a> =
if you use the software.
          </p>
        </div>
            <div class=3D"sk-sidebar-toc">
              <ul>
<li><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.tree.DecisionTreeClassifier.html#"><code class=
=3D"xref py py-mod docutils literal notranslate"><span class=3D"pre">sklear=
n.tree</span></code>.DecisionTreeClassifier</a><ul>
<li><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.tree.DecisionTreeClassifier.html#examples-using-=
sklearn-tree-decisiontreeclassifier">Examples using <code class=3D"docutils=
 literal notranslate"><span class=3D"pre">sklearn.tree.DecisionTreeClassifi=
er</span></code></a></li>
</ul>
</li>
</ul>

            </div>
      </div>
    </div>
    <div id=3D"sk-page-content-wrapper">
      <div class=3D"sk-page-content container-fluid body px-md-3" role=3D"m=
ain">
       =20
  <section id=3D"sklearn-tree-decisiontreeclassifier">
<h1><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/classes.html#module-sklearn.tree" title=3D"sklearn.tree"><code cla=
ss=3D"xref py py-mod docutils literal notranslate"><span class=3D"pre">skle=
arn.tree</span></code></a>.DecisionTreeClassifier<a class=3D"headerlink" hr=
ef=3D"https://scikit-learn.org/stable/modules/generated/sklearn.tree.Decisi=
onTreeClassifier.html#sklearn-tree-decisiontreeclassifier" title=3D"Permali=
nk to this headline">=C2=B6</a></h1>
<dl class=3D"py class">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier">
<em class=3D"property"><span class=3D"pre">class</span> </em><span class=3D=
"sig-prename descclassname"><span class=3D"pre">sklearn.tree.</span></span>=
<span class=3D"sig-name descname"><span class=3D"pre">DecisionTreeClassifie=
r</span></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><s=
pan class=3D"o"><span class=3D"pre">*</span></span></em>, <em class=3D"sig-=
param"><span class=3D"n"><span class=3D"pre">criterion</span></span><span c=
lass=3D"o"><span class=3D"pre">=3D</span></span><span class=3D"default_valu=
e"><span class=3D"pre">'gini'</span></span></em>, <em class=3D"sig-param"><=
span class=3D"n"><span class=3D"pre">splitter</span></span><span class=3D"o=
"><span class=3D"pre">=3D</span></span><span class=3D"default_value"><span =
class=3D"pre">'best'</span></span></em>, <em class=3D"sig-param"><span clas=
s=3D"n"><span class=3D"pre">max_depth</span></span><span class=3D"o"><span =
class=3D"pre">=3D</span></span><span class=3D"default_value"><span class=3D=
"pre">None</span></span></em>, <em class=3D"sig-param"><span class=3D"n"><s=
pan class=3D"pre">min_samples_split</span></span><span class=3D"o"><span cl=
ass=3D"pre">=3D</span></span><span class=3D"default_value"><span class=3D"p=
re">2</span></span></em>, <em class=3D"sig-param"><span class=3D"n"><span c=
lass=3D"pre">min_samples_leaf</span></span><span class=3D"o"><span class=3D=
"pre">=3D</span></span><span class=3D"default_value"><span class=3D"pre">1<=
/span></span></em>, <em class=3D"sig-param"><span class=3D"n"><span class=
=3D"pre">min_weight_fraction_leaf</span></span><span class=3D"o"><span clas=
s=3D"pre">=3D</span></span><span class=3D"default_value"><span class=3D"pre=
">0.0</span></span></em>, <em class=3D"sig-param"><span class=3D"n"><span c=
lass=3D"pre">max_features</span></span><span class=3D"o"><span class=3D"pre=
">=3D</span></span><span class=3D"default_value"><span class=3D"pre">None</=
span></span></em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D=
"pre">random_state</span></span><span class=3D"o"><span class=3D"pre">=3D</=
span></span><span class=3D"default_value"><span class=3D"pre">None</span></=
span></em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">m=
ax_leaf_nodes</span></span><span class=3D"o"><span class=3D"pre">=3D</span>=
</span><span class=3D"default_value"><span class=3D"pre">None</span></span>=
</em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">min_im=
purity_decrease</span></span><span class=3D"o"><span class=3D"pre">=3D</spa=
n></span><span class=3D"default_value"><span class=3D"pre">0.0</span></span=
></em>, <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">class=
_weight</span></span><span class=3D"o"><span class=3D"pre">=3D</span></span=
><span class=3D"default_value"><span class=3D"pre">None</span></span></em>,=
 <em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">ccp_alpha</s=
pan></span><span class=3D"o"><span class=3D"pre">=3D</span></span><span cla=
ss=3D"default_value"><span class=3D"pre">0.0</span></span></em><span class=
=3D"sig-paren">)</span><a class=3D"reference external" href=3D"https://gith=
ub.com/scikit-learn/scikit-learn/blob/7e1e6d09b/sklearn/tree/_classes.py#L6=
39"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></span=
></a><a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/module=
s/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionT=
reeClassifier" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>A decision tree classifier.</p>
<p>Read more in the <a class=3D"reference internal" href=3D"https://scikit-=
learn.org/stable/modules/tree.html#tree"><span class=3D"std std-ref">User G=
uide</span></a>.</p>
<dl class=3D"field-list">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl>
<dt><strong>criterion</strong><span class=3D"classifier">{=E2=80=9Cgini=E2=
=80=9D, =E2=80=9Centropy=E2=80=9D}, default=3D=E2=80=9Dgini=E2=80=9D</span>=
</dt><dd><p>The function to measure the quality of a split. Supported crite=
ria are
=E2=80=9Cgini=E2=80=9D for the Gini impurity and =E2=80=9Centropy=E2=80=9D =
for the information gain.</p>
</dd>
<dt><strong>splitter</strong><span class=3D"classifier">{=E2=80=9Cbest=E2=
=80=9D, =E2=80=9Crandom=E2=80=9D}, default=3D=E2=80=9Dbest=E2=80=9D</span><=
/dt><dd><p>The strategy used to choose the split at each node. Supported
strategies are =E2=80=9Cbest=E2=80=9D to choose the best split and =E2=80=
=9Crandom=E2=80=9D to choose
the best random split.</p>
</dd>
<dt><strong>max_depth</strong><span class=3D"classifier">int, default=3DNon=
e</span></dt><dd><p>The maximum depth of the tree. If None, then nodes are =
expanded until
all leaves are pure or until all leaves contain less than
min_samples_split samples.</p>
</dd>
<dt><strong>min_samples_split</strong><span class=3D"classifier">int or flo=
at, default=3D2</span></dt><dd><p>The minimum number of samples required to=
 split an internal node:</p>
<ul class=3D"simple">
<li><p>If int, then consider <code class=3D"docutils literal notranslate"><=
span class=3D"pre">min_samples_split</span></code> as the minimum number.</=
p></li>
<li><p>If float, then <code class=3D"docutils literal notranslate"><span cl=
ass=3D"pre">min_samples_split</span></code> is a fraction and
<code class=3D"docutils literal notranslate"><span class=3D"pre">ceil(min_s=
amples_split</span> <span class=3D"pre">*</span> <span class=3D"pre">n_samp=
les)</span></code> are the minimum
number of samples for each split.</p></li>
</ul>
<div class=3D"versionchanged">
<p><span class=3D"versionmodified changed">Changed in version 0.18: </span>=
Added float values for fractions.</p>
</div>
</dd>
<dt><strong>min_samples_leaf</strong><span class=3D"classifier">int or floa=
t, default=3D1</span></dt><dd><p>The minimum number of samples required to =
be at a leaf node.
A split point at any depth will only be considered if it leaves at
least <code class=3D"docutils literal notranslate"><span class=3D"pre">min_=
samples_leaf</span></code> training samples in each of the left and
right branches.  This may have the effect of smoothing the model,
especially in regression.</p>
<ul class=3D"simple">
<li><p>If int, then consider <code class=3D"docutils literal notranslate"><=
span class=3D"pre">min_samples_leaf</span></code> as the minimum number.</p=
></li>
<li><p>If float, then <code class=3D"docutils literal notranslate"><span cl=
ass=3D"pre">min_samples_leaf</span></code> is a fraction and
<code class=3D"docutils literal notranslate"><span class=3D"pre">ceil(min_s=
amples_leaf</span> <span class=3D"pre">*</span> <span class=3D"pre">n_sampl=
es)</span></code> are the minimum
number of samples for each node.</p></li>
</ul>
<div class=3D"versionchanged">
<p><span class=3D"versionmodified changed">Changed in version 0.18: </span>=
Added float values for fractions.</p>
</div>
</dd>
<dt><strong>min_weight_fraction_leaf</strong><span class=3D"classifier">flo=
at, default=3D0.0</span></dt><dd><p>The minimum weighted fraction of the su=
m total of weights (of all
the input samples) required to be at a leaf node. Samples have
equal weight when sample_weight is not provided.</p>
</dd>
<dt><strong>max_features</strong><span class=3D"classifier">int, float or {=
=E2=80=9Cauto=E2=80=9D, =E2=80=9Csqrt=E2=80=9D, =E2=80=9Clog2=E2=80=9D}, de=
fault=3DNone</span></dt><dd><p>The number of features to consider when look=
ing for the best split:</p>
<blockquote>
<div><ul class=3D"simple">
<li><p>If int, then consider <code class=3D"docutils literal notranslate"><=
span class=3D"pre">max_features</span></code> features at each split.</p></=
li>
<li><p>If float, then <code class=3D"docutils literal notranslate"><span cl=
ass=3D"pre">max_features</span></code> is a fraction and
<code class=3D"docutils literal notranslate"><span class=3D"pre">int(max_fe=
atures</span> <span class=3D"pre">*</span> <span class=3D"pre">n_features)<=
/span></code> features are considered at each
split.</p></li>
<li><p>If =E2=80=9Cauto=E2=80=9D, then <code class=3D"docutils literal notr=
anslate"><span class=3D"pre">max_features=3Dsqrt(n_features)</span></code>.=
</p></li>
<li><p>If =E2=80=9Csqrt=E2=80=9D, then <code class=3D"docutils literal notr=
anslate"><span class=3D"pre">max_features=3Dsqrt(n_features)</span></code>.=
</p></li>
<li><p>If =E2=80=9Clog2=E2=80=9D, then <code class=3D"docutils literal notr=
anslate"><span class=3D"pre">max_features=3Dlog2(n_features)</span></code>.=
</p></li>
<li><p>If None, then <code class=3D"docutils literal notranslate"><span cla=
ss=3D"pre">max_features=3Dn_features</span></code>.</p></li>
</ul>
</div></blockquote>
<p>Note: the search for a split does not stop until at least one
valid partition of the node samples is found, even if it requires to
effectively inspect more than <code class=3D"docutils literal notranslate">=
<span class=3D"pre">max_features</span></code> features.</p>
</dd>
<dt><strong>random_state</strong><span class=3D"classifier">int, RandomStat=
e instance or None, default=3DNone</span></dt><dd><p>Controls the randomnes=
s of the estimator. The features are always
randomly permuted at each split, even if <code class=3D"docutils literal no=
translate"><span class=3D"pre">splitter</span></code> is set to
<code class=3D"docutils literal notranslate"><span class=3D"pre">"best"</sp=
an></code>. When <code class=3D"docutils literal notranslate"><span class=
=3D"pre">max_features</span> <span class=3D"pre">&lt;</span> <span class=3D=
"pre">n_features</span></code>, the algorithm will
select <code class=3D"docutils literal notranslate"><span class=3D"pre">max=
_features</span></code> at random at each split before finding the best
split among them. But the best found split may vary across different
runs, even if <code class=3D"docutils literal notranslate"><span class=3D"p=
re">max_features=3Dn_features</span></code>. That is the case, if the
improvement of the criterion is identical for several splits and one
split has to be selected at random. To obtain a deterministic behaviour
during fitting, <code class=3D"docutils literal notranslate"><span class=3D=
"pre">random_state</span></code> has to be fixed to an integer.
See <a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/glossary.html#term-random_state"><span class=3D"xref std std-term">Glossar=
y</span></a> for details.</p>
</dd>
<dt><strong>max_leaf_nodes</strong><span class=3D"classifier">int, default=
=3DNone</span></dt><dd><p>Grow a tree with <code class=3D"docutils literal =
notranslate"><span class=3D"pre">max_leaf_nodes</span></code> in best-first=
 fashion.
Best nodes are defined as relative reduction in impurity.
If None then unlimited number of leaf nodes.</p>
</dd>
<dt><strong>min_impurity_decrease</strong><span class=3D"classifier">float,=
 default=3D0.0</span></dt><dd><p>A node will be split if this split induces=
 a decrease of the impurity
greater than or equal to this value.</p>
<p>The weighted impurity decrease equation is the following:</p>
<div class=3D"highlight-default notranslate" style=3D"position: relative;">=
<div class=3D"highlight"><pre><span></span><span class=3D"n">N_t</span> <sp=
an class=3D"o">/</span> <span class=3D"n">N</span> <span class=3D"o">*</spa=
n> <span class=3D"p">(</span><span class=3D"n">impurity</span> <span class=
=3D"o">-</span> <span class=3D"n">N_t_R</span> <span class=3D"o">/</span> <=
span class=3D"n">N_t</span> <span class=3D"o">*</span> <span class=3D"n">ri=
ght_impurity</span>
                    <span class=3D"o">-</span> <span class=3D"n">N_t_L</spa=
n> <span class=3D"o">/</span> <span class=3D"n">N_t</span> <span class=3D"o=
">*</span> <span class=3D"n">left_impurity</span><span class=3D"p">)</span>
</pre></div>
</div>
<p>where <code class=3D"docutils literal notranslate"><span class=3D"pre">N=
</span></code> is the total number of samples, <code class=3D"docutils lite=
ral notranslate"><span class=3D"pre">N_t</span></code> is the number of
samples at the current node, <code class=3D"docutils literal notranslate"><=
span class=3D"pre">N_t_L</span></code> is the number of samples in the
left child, and <code class=3D"docutils literal notranslate"><span class=3D=
"pre">N_t_R</span></code> is the number of samples in the right child.</p>
<p><code class=3D"docutils literal notranslate"><span class=3D"pre">N</span=
></code>, <code class=3D"docutils literal notranslate"><span class=3D"pre">=
N_t</span></code>, <code class=3D"docutils literal notranslate"><span class=
=3D"pre">N_t_R</span></code> and <code class=3D"docutils literal notranslat=
e"><span class=3D"pre">N_t_L</span></code> all refer to the weighted sum,
if <code class=3D"docutils literal notranslate"><span class=3D"pre">sample_=
weight</span></code> is passed.</p>
<div class=3D"versionadded">
<p><span class=3D"versionmodified added">New in version 0.19.</span></p>
</div>
</dd>
<dt><strong>class_weight</strong><span class=3D"classifier">dict, list of d=
ict or =E2=80=9Cbalanced=E2=80=9D, default=3DNone</span></dt><dd><p>Weights=
 associated with classes in the form <code class=3D"docutils literal notran=
slate"><span class=3D"pre">{class_label:</span> <span class=3D"pre">weight}=
</span></code>.
If None, all classes are supposed to have weight one. For
multi-output problems, a list of dicts can be provided in the same
order as the columns of y.</p>
<p>Note that for multioutput (including multilabel) weights should be
defined for each class of every column in its own dict. For example,
for four-class multilabel classification weights should be
[{0: 1, 1: 1}, {0: 1, 1: 5}, {0: 1, 1: 1}, {0: 1, 1: 1}] instead of
[{1:1}, {2:5}, {3:1}, {4:1}].</p>
<p>The =E2=80=9Cbalanced=E2=80=9D mode uses the values of y to automaticall=
y adjust
weights inversely proportional to class frequencies in the input data
as <code class=3D"docutils literal notranslate"><span class=3D"pre">n_sampl=
es</span> <span class=3D"pre">/</span> <span class=3D"pre">(n_classes</span=
> <span class=3D"pre">*</span> <span class=3D"pre">np.bincount(y))</span></=
code></p>
<p>For multi-output, the weights of each column of y will be multiplied.</p=
>
<p>Note that these weights will be multiplied with sample_weight (passed
through the fit method) if sample_weight is specified.</p>
</dd>
<dt><strong>ccp_alpha</strong><span class=3D"classifier">non-negative float=
, default=3D0.0</span></dt><dd><p>Complexity parameter used for Minimal Cos=
t-Complexity Pruning. The
subtree with the largest cost complexity that is smaller than
<code class=3D"docutils literal notranslate"><span class=3D"pre">ccp_alpha<=
/span></code> will be chosen. By default, no pruning is performed. See
<a class=3D"reference internal" href=3D"https://scikit-learn.org/stable/mod=
ules/tree.html#minimal-cost-complexity-pruning"><span class=3D"std std-ref"=
>Minimal Cost-Complexity Pruning</span></a> for details.</p>
<div class=3D"versionadded">
<p><span class=3D"versionmodified added">New in version 0.22.</span></p>
</div>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Attributes</dt>
<dd class=3D"field-even"><dl>
<dt><strong>classes_</strong><span class=3D"classifier">ndarray of shape (n=
_classes,) or list of ndarray</span></dt><dd><p>The classes labels (single =
output problem),
or a list of arrays of class labels (multi-output problem).</p>
</dd>
<dt><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.De=
cisionTreeClassifier.feature_importances_" title=3D"sklearn.tree.DecisionTr=
eeClassifier.feature_importances_"><code class=3D"xref py py-obj docutils l=
iteral notranslate"><span class=3D"pre">feature_importances_</span></code><=
/a><span class=3D"classifier">ndarray of shape (n_features,)</span></dt><dd=
><p>Return the feature importances.</p>
</dd>
<dt><strong>max_features_</strong><span class=3D"classifier">int</span></dt=
><dd><p>The inferred value of max_features.</p>
</dd>
<dt><strong>n_classes_</strong><span class=3D"classifier">int or list of in=
t</span></dt><dd><p>The number of classes (for single output problems),
or a list containing the number of classes for each
output (for multi-output problems).</p>
</dd>
<dt><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.De=
cisionTreeClassifier.n_features_" title=3D"sklearn.tree.DecisionTreeClassif=
ier.n_features_"><code class=3D"xref py py-obj docutils literal notranslate=
"><span class=3D"pre">n_features_</span></code></a><span class=3D"classifie=
r">int</span></dt><dd><p>DEPRECATED: The attribute <code class=3D"docutils =
literal notranslate"><span class=3D"pre">n_features_</span></code> is depre=
cated in 1.0 and will be removed in 1.2.</p>
</dd>
<dt><strong>n_features_in_</strong><span class=3D"classifier">int</span></d=
t><dd><p>Number of features seen during <a class=3D"reference internal" hre=
f=3D"https://scikit-learn.org/stable/glossary.html#term-fit"><span class=3D=
"xref std std-term">fit</span></a>.</p>
<div class=3D"versionadded">
<p><span class=3D"versionmodified added">New in version 0.24.</span></p>
</div>
</dd>
<dt><strong>feature_names_in_</strong><span class=3D"classifier">ndarray of=
 shape (<code class=3D"docutils literal notranslate"><span class=3D"pre">n_=
features_in_</span></code>,)</span></dt><dd><p>Names of features seen durin=
g <a class=3D"reference internal" href=3D"https://scikit-learn.org/stable/g=
lossary.html#term-fit"><span class=3D"xref std std-term">fit</span></a>. De=
fined only when <code class=3D"docutils literal notranslate"><span class=3D=
"pre">X</span></code>
has feature names that are all strings.</p>
<div class=3D"versionadded">
<p><span class=3D"versionmodified added">New in version 1.0.</span></p>
</div>
</dd>
<dt><strong>n_outputs_</strong><span class=3D"classifier">int</span></dt><d=
d><p>The number of outputs when <code class=3D"docutils literal notranslate=
"><span class=3D"pre">fit</span></code> is performed.</p>
</dd>
<dt><strong>tree_</strong><span class=3D"classifier">Tree instance</span></=
dt><dd><p>The underlying Tree object. Please refer to
<code class=3D"docutils literal notranslate"><span class=3D"pre">help(sklea=
rn.tree._tree.Tree)</span></code> for attributes of Tree object and
<a class=3D"reference internal" href=3D"https://scikit-learn.org/stable/aut=
o_examples/tree/plot_unveil_tree_structure.html#sphx-glr-auto-examples-tree=
-plot-unveil-tree-structure-py"><span class=3D"std std-ref">Understanding t=
he decision tree structure</span></a>
for basic usage of these attributes.</p>
</dd>
</dl>
</dd>
</dl>
<div class=3D"admonition seealso">
<p class=3D"admonition-title">See also</p>
<dl class=3D"simple">
<dt><a class=3D"reference internal" href=3D"https://scikit-learn.org/stable=
/modules/generated/sklearn.tree.DecisionTreeRegressor.html#sklearn.tree.Dec=
isionTreeRegressor" title=3D"sklearn.tree.DecisionTreeRegressor"><code clas=
s=3D"xref py py-obj docutils literal notranslate"><span class=3D"pre">Decis=
ionTreeRegressor</span></code></a></dt><dd><p>A decision tree regressor.</p=
>
</dd>
</dl>
</div>
<p class=3D"rubric">Notes</p>
<p>The default values for the parameters controlling the size of the trees
(e.g. <code class=3D"docutils literal notranslate"><span class=3D"pre">max_=
depth</span></code>, <code class=3D"docutils literal notranslate"><span cla=
ss=3D"pre">min_samples_leaf</span></code>, etc.) lead to fully grown and
unpruned trees which can potentially be very large on some data sets. To
reduce memory consumption, the complexity and size of the trees should be
controlled by setting those parameter values.</p>
<p>The <a class=3D"reference internal" href=3D"https://scikit-learn.org/sta=
ble/modules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree=
.DecisionTreeClassifier.predict" title=3D"sklearn.tree.DecisionTreeClassifi=
er.predict"><code class=3D"xref py py-meth docutils literal notranslate"><s=
pan class=3D"pre">predict</span></code></a> method operates using the <a cl=
ass=3D"reference external" href=3D"https://numpy.org/doc/stable/reference/g=
enerated/numpy.argmax.html#numpy.argmax" title=3D"(in NumPy v1.21)"><code c=
lass=3D"xref py py-func docutils literal notranslate"><span class=3D"pre">n=
umpy.argmax</span></code></a>
function on the outputs of <a class=3D"reference internal" href=3D"https://=
scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifi=
er.html#sklearn.tree.DecisionTreeClassifier.predict_proba" title=3D"sklearn=
.tree.DecisionTreeClassifier.predict_proba"><code class=3D"xref py py-meth =
docutils literal notranslate"><span class=3D"pre">predict_proba</span></cod=
e></a>. This means that in
case the highest predicted probabilities are tied, the classifier will
predict the tied class with the lowest index in <a class=3D"reference inter=
nal" href=3D"https://scikit-learn.org/stable/glossary.html#term-classes_"><=
span class=3D"xref std std-term">classes_</span></a>.</p>
<p class=3D"rubric">References</p>
<dl class=3D"citation">
<dt class=3D"label" id=3D"rb1ec977cd307-1"><span class=3D"brackets">1</span=
></dt>
<dd><p><a class=3D"reference external" href=3D"https://en.wikipedia.org/wik=
i/Decision_tree_learning">https://en.wikipedia.org/wiki/Decision_tree_learn=
ing</a></p>
</dd>
<dt class=3D"label" id=3D"rb1ec977cd307-2"><span class=3D"brackets">2</span=
></dt>
<dd><p>L. Breiman, J. Friedman, R. Olshen, and C. Stone, =E2=80=9CClassific=
ation
and Regression Trees=E2=80=9D, Wadsworth, Belmont, CA, 1984.</p>
</dd>
<dt class=3D"label" id=3D"rb1ec977cd307-3"><span class=3D"brackets">3</span=
></dt>
<dd><p>T. Hastie, R. Tibshirani and J. Friedman. =E2=80=9CElements of Stati=
stical
Learning=E2=80=9D, Springer, 2009.</p>
</dd>
<dt class=3D"label" id=3D"rb1ec977cd307-4"><span class=3D"brackets">4</span=
></dt>
<dd><p>L. Breiman, and A. Cutler, =E2=80=9CRandom Forests=E2=80=9D,
<a class=3D"reference external" href=3D"https://www.stat.berkeley.edu/~brei=
man/RandomForests/cc_home.htm">https://www.stat.berkeley.edu/~breiman/Rando=
mForests/cc_home.htm</a></p>
</dd>
</dl>
<p class=3D"rubric">Examples</p>
<div class=3D"doctest highlight-default notranslate" style=3D"position: rel=
ative;"><div class=3D"highlight"><span class=3D"copybutton" title=3D"Hide p=
rompts and outputs">&gt;&gt;&gt;</span><pre><span></span><span class=3D"gp"=
>&gt;&gt;&gt; </span><span class=3D"kn">from</span> <span class=3D"nn">skle=
arn.datasets</span> <span class=3D"kn">import</span> <span class=3D"n">load=
_iris</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"kn">from</span> <span=
 class=3D"nn">sklearn.model_selection</span> <span class=3D"kn">import</spa=
n> <span class=3D"n">cross_val_score</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"kn">from</span> <span=
 class=3D"nn">sklearn.tree</span> <span class=3D"kn">import</span> <span cl=
ass=3D"n">DecisionTreeClassifier</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">clf</span> <span c=
lass=3D"o">=3D</span> <span class=3D"n">DecisionTreeClassifier</span><span =
class=3D"p">(</span><span class=3D"n">random_state</span><span class=3D"o">=
=3D</span><span class=3D"mi">0</span><span class=3D"p">)</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">iris</span> <span =
class=3D"o">=3D</span> <span class=3D"n">load_iris</span><span class=3D"p">=
()</span>
<span class=3D"gp">&gt;&gt;&gt; </span><span class=3D"n">cross_val_score</s=
pan><span class=3D"p">(</span><span class=3D"n">clf</span><span class=3D"p"=
>,</span> <span class=3D"n">iris</span><span class=3D"o">.</span><span clas=
s=3D"n">data</span><span class=3D"p">,</span> <span class=3D"n">iris</span>=
<span class=3D"o">.</span><span class=3D"n">target</span><span class=3D"p">=
,</span> <span class=3D"n">cv</span><span class=3D"o">=3D</span><span class=
=3D"mi">10</span><span class=3D"p">)</span>
<span class=3D"gp">... </span>                           =20
<span class=3D"gp">...</span>
<span class=3D"go">array([ 1.     ,  0.93...,  0.86...,  0.93...,  0.93...,=
</span>
<span class=3D"go">        0.93...,  0.93...,  1.     ,  0.93...,  1.      =
])</span>
</pre></div>
</div>
<p class=3D"rubric">Methods</p>
<table class=3D"longtable docutils align-default">
<colgroup>
<col style=3D"width: 10%">
<col style=3D"width: 90%">
</colgroup>
<tbody>
<tr class=3D"row-odd"><td><p><a class=3D"reference internal" href=3D"https:=
//scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassi=
fier.html#sklearn.tree.DecisionTreeClassifier.apply" title=3D"sklearn.tree.=
DecisionTreeClassifier.apply"><code class=3D"xref py py-obj docutils litera=
l notranslate"><span class=3D"pre">apply</span></code></a>(X[,&nbsp;check_i=
nput])</p></td>
<td><p>Return the index of the leaf that each sample is predicted as.</p></=
td>
</tr>
<tr class=3D"row-even"><td><p><a class=3D"reference internal" href=3D"https=
://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClass=
ifier.html#sklearn.tree.DecisionTreeClassifier.cost_complexity_pruning_path=
" title=3D"sklearn.tree.DecisionTreeClassifier.cost_complexity_pruning_path=
"><code class=3D"xref py py-obj docutils literal notranslate"><span class=
=3D"pre">cost_complexity_pruning_path</span></code></a>(X,&nbsp;y[,&nbsp;..=
.])</p></td>
<td><p>Compute the pruning path during Minimal Cost-Complexity Pruning.</p>=
</td>
</tr>
<tr class=3D"row-odd"><td><p><a class=3D"reference internal" href=3D"https:=
//scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassi=
fier.html#sklearn.tree.DecisionTreeClassifier.decision_path" title=3D"sklea=
rn.tree.DecisionTreeClassifier.decision_path"><code class=3D"xref py py-obj=
 docutils literal notranslate"><span class=3D"pre">decision_path</span></co=
de></a>(X[,&nbsp;check_input])</p></td>
<td><p>Return the decision path in the tree.</p></td>
</tr>
<tr class=3D"row-even"><td><p><a class=3D"reference internal" href=3D"https=
://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClass=
ifier.html#sklearn.tree.DecisionTreeClassifier.fit" title=3D"sklearn.tree.D=
ecisionTreeClassifier.fit"><code class=3D"xref py py-obj docutils literal n=
otranslate"><span class=3D"pre">fit</span></code></a>(X,&nbsp;y[,&nbsp;samp=
le_weight,&nbsp;check_input,&nbsp;...])</p></td>
<td><p>Build a decision tree classifier from the training set (X, y).</p></=
td>
</tr>
<tr class=3D"row-odd"><td><p><a class=3D"reference internal" href=3D"https:=
//scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassi=
fier.html#sklearn.tree.DecisionTreeClassifier.get_depth" title=3D"sklearn.t=
ree.DecisionTreeClassifier.get_depth"><code class=3D"xref py py-obj docutil=
s literal notranslate"><span class=3D"pre">get_depth</span></code></a>()</p=
></td>
<td><p>Return the depth of the decision tree.</p></td>
</tr>
<tr class=3D"row-even"><td><p><a class=3D"reference internal" href=3D"https=
://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClass=
ifier.html#sklearn.tree.DecisionTreeClassifier.get_n_leaves" title=3D"sklea=
rn.tree.DecisionTreeClassifier.get_n_leaves"><code class=3D"xref py py-obj =
docutils literal notranslate"><span class=3D"pre">get_n_leaves</span></code=
></a>()</p></td>
<td><p>Return the number of leaves of the decision tree.</p></td>
</tr>
<tr class=3D"row-odd"><td><p><a class=3D"reference internal" href=3D"https:=
//scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassi=
fier.html#sklearn.tree.DecisionTreeClassifier.get_params" title=3D"sklearn.=
tree.DecisionTreeClassifier.get_params"><code class=3D"xref py py-obj docut=
ils literal notranslate"><span class=3D"pre">get_params</span></code></a>([=
deep])</p></td>
<td><p>Get parameters for this estimator.</p></td>
</tr>
<tr class=3D"row-even"><td><p><a class=3D"reference internal" href=3D"https=
://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClass=
ifier.html#sklearn.tree.DecisionTreeClassifier.predict" title=3D"sklearn.tr=
ee.DecisionTreeClassifier.predict"><code class=3D"xref py py-obj docutils l=
iteral notranslate"><span class=3D"pre">predict</span></code></a>(X[,&nbsp;=
check_input])</p></td>
<td><p>Predict class or regression value for X.</p></td>
</tr>
<tr class=3D"row-odd"><td><p><a class=3D"reference internal" href=3D"https:=
//scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassi=
fier.html#sklearn.tree.DecisionTreeClassifier.predict_log_proba" title=3D"s=
klearn.tree.DecisionTreeClassifier.predict_log_proba"><code class=3D"xref p=
y py-obj docutils literal notranslate"><span class=3D"pre">predict_log_prob=
a</span></code></a>(X)</p></td>
<td><p>Predict class log-probabilities of the input samples X.</p></td>
</tr>
<tr class=3D"row-even"><td><p><a class=3D"reference internal" href=3D"https=
://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClass=
ifier.html#sklearn.tree.DecisionTreeClassifier.predict_proba" title=3D"skle=
arn.tree.DecisionTreeClassifier.predict_proba"><code class=3D"xref py py-ob=
j docutils literal notranslate"><span class=3D"pre">predict_proba</span></c=
ode></a>(X[,&nbsp;check_input])</p></td>
<td><p>Predict class probabilities of the input samples X.</p></td>
</tr>
<tr class=3D"row-odd"><td><p><a class=3D"reference internal" href=3D"https:=
//scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassi=
fier.html#sklearn.tree.DecisionTreeClassifier.score" title=3D"sklearn.tree.=
DecisionTreeClassifier.score"><code class=3D"xref py py-obj docutils litera=
l notranslate"><span class=3D"pre">score</span></code></a>(X,&nbsp;y[,&nbsp=
;sample_weight])</p></td>
<td><p>Return the mean accuracy on the given test data and labels.</p></td>
</tr>
<tr class=3D"row-even"><td><p><a class=3D"reference internal" href=3D"https=
://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClass=
ifier.html#sklearn.tree.DecisionTreeClassifier.set_params" title=3D"sklearn=
.tree.DecisionTreeClassifier.set_params"><code class=3D"xref py py-obj docu=
tils literal notranslate"><span class=3D"pre">set_params</span></code></a>(=
**params)</p></td>
<td><p>Set the parameters of this estimator.</p></td>
</tr>
</tbody>
</table>
<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.a=
pply">
<span class=3D"sig-name descname"><span class=3D"pre">apply</span></span><s=
pan class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"><=
span class=3D"pre">X</span></span></em>, <em class=3D"sig-param"><span clas=
s=3D"n"><span class=3D"pre">check_input</span></span><span class=3D"o"><spa=
n class=3D"pre">=3D</span></span><span class=3D"default_value"><span class=
=3D"pre">True</span></span></em><span class=3D"sig-paren">)</span><a class=
=3D"reference external" href=3D"https://github.com/scikit-learn/scikit-lear=
n/blob/7e1e6d09b/sklearn/tree/_classes.py#L494"><span class=3D"viewcode-lin=
k"><span class=3D"pre">[source]</span></span></a><a class=3D"headerlink" hr=
ef=3D"https://scikit-learn.org/stable/modules/generated/sklearn.tree.Decisi=
onTreeClassifier.html#sklearn.tree.DecisionTreeClassifier.apply" title=3D"P=
ermalink to this definition">=C2=B6</a></dt>
<dd><p>Return the index of the leaf that each sample is predicted as.</p>
<div class=3D"versionadded">
<p><span class=3D"versionmodified added">New in version 0.17.</span></p>
</div>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">{array-like, sparse matrix=
} of shape (n_samples, n_features)</span></dt><dd><p>The input samples. Int=
ernally, it will be converted to
<code class=3D"docutils literal notranslate"><span class=3D"pre">dtype=3Dnp=
.float32</span></code> and if a sparse matrix is provided
to a sparse <code class=3D"docutils literal notranslate"><span class=3D"pre=
">csr_matrix</span></code>.</p>
</dd>
<dt><strong>check_input</strong><span class=3D"classifier">bool, default=3D=
True</span></dt><dd><p>Allow to bypass several input checking.
Don=E2=80=99t use this parameter unless you know what you do.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>X_leaves</strong><span class=3D"classifier">array-like of shape=
 (n_samples,)</span></dt><dd><p>For each datapoint x in X, return the index=
 of the leaf x
ends up in. Leaves are numbered within
<code class=3D"docutils literal notranslate"><span class=3D"pre">[0;</span>=
 <span class=3D"pre">self.tree_.node_count)</span></code>, possibly with ga=
ps in the
numbering.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.c=
ost_complexity_pruning_path">
<span class=3D"sig-name descname"><span class=3D"pre">cost_complexity_pruni=
ng_path</span></span><span class=3D"sig-paren">(</span><em class=3D"sig-par=
am"><span class=3D"n"><span class=3D"pre">X</span></span></em>, <em class=
=3D"sig-param"><span class=3D"n"><span class=3D"pre">y</span></span></em>, =
<em class=3D"sig-param"><span class=3D"n"><span class=3D"pre">sample_weight=
</span></span><span class=3D"o"><span class=3D"pre">=3D</span></span><span =
class=3D"default_value"><span class=3D"pre">None</span></span></em><span cl=
ass=3D"sig-paren">)</span><a class=3D"reference external" href=3D"https://g=
ithub.com/scikit-learn/scikit-learn/blob/7e1e6d09b/sklearn/tree/_classes.py=
#L572"><span class=3D"viewcode-link"><span class=3D"pre">[source]</span></s=
pan></a><a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/mod=
ules/generated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.Decisi=
onTreeClassifier.cost_complexity_pruning_path" title=3D"Permalink to this d=
efinition">=C2=B6</a></dt>
<dd><p>Compute the pruning path during Minimal Cost-Complexity Pruning.</p>
<p>See <a class=3D"reference internal" href=3D"https://scikit-learn.org/sta=
ble/modules/tree.html#minimal-cost-complexity-pruning"><span class=3D"std s=
td-ref">Minimal Cost-Complexity Pruning</span></a> for details on the pruni=
ng
process.</p>
<dl class=3D"field-list">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">{array-like, sparse matrix=
} of shape (n_samples, n_features)</span></dt><dd><p>The training input sam=
ples. Internally, it will be converted to
<code class=3D"docutils literal notranslate"><span class=3D"pre">dtype=3Dnp=
.float32</span></code> and if a sparse matrix is provided
to a sparse <code class=3D"docutils literal notranslate"><span class=3D"pre=
">csc_matrix</span></code>.</p>
</dd>
<dt><strong>y</strong><span class=3D"classifier">array-like of shape (n_sam=
ples,) or (n_samples, n_outputs)</span></dt><dd><p>The target values (class=
 labels) as integers or strings.</p>
</dd>
<dt><strong>sample_weight</strong><span class=3D"classifier">array-like of =
shape (n_samples,), default=3DNone</span></dt><dd><p>Sample weights. If Non=
e, then samples are equally weighted. Splits
that would create child nodes with net zero or negative weight are
ignored while searching for a split in each node. Splits are also
ignored if they would result in any single class carrying a
negative weight in either child node.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl>
<dt><strong>ccp_path</strong><span class=3D"classifier"><a class=3D"referen=
ce internal" href=3D"https://scikit-learn.org/stable/modules/generated/skle=
arn.utils.Bunch.html#sklearn.utils.Bunch" title=3D"sklearn.utils.Bunch"><co=
de class=3D"xref py py-class docutils literal notranslate"><span class=3D"p=
re">Bunch</span></code></a></span></dt><dd><p>Dictionary-like object, with =
the following attributes.</p>
<dl class=3D"simple">
<dt>ccp_alphas<span class=3D"classifier">ndarray</span></dt><dd><p>Effectiv=
e alphas of subtree during pruning.</p>
</dd>
<dt>impurities<span class=3D"classifier">ndarray</span></dt><dd><p>Sum of t=
he impurities of the subtree leaves for the
corresponding alpha value in <code class=3D"docutils literal notranslate"><=
span class=3D"pre">ccp_alphas</span></code>.</p>
</dd>
</dl>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.d=
ecision_path">
<span class=3D"sig-name descname"><span class=3D"pre">decision_path</span><=
/span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">X</span></span></em>, <em class=3D"sig-param"><s=
pan class=3D"n"><span class=3D"pre">check_input</span></span><span class=3D=
"o"><span class=3D"pre">=3D</span></span><span class=3D"default_value"><spa=
n class=3D"pre">True</span></span></em><span class=3D"sig-paren">)</span><a=
 class=3D"reference external" href=3D"https://github.com/scikit-learn/sciki=
t-learn/blob/7e1e6d09b/sklearn/tree/_classes.py#L522"><span class=3D"viewco=
de-link"><span class=3D"pre">[source]</span></span></a><a class=3D"headerli=
nk" href=3D"https://scikit-learn.org/stable/modules/generated/sklearn.tree.=
DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier.decision_pa=
th" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Return the decision path in the tree.</p>
<div class=3D"versionadded">
<p><span class=3D"versionmodified added">New in version 0.18.</span></p>
</div>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">{array-like, sparse matrix=
} of shape (n_samples, n_features)</span></dt><dd><p>The input samples. Int=
ernally, it will be converted to
<code class=3D"docutils literal notranslate"><span class=3D"pre">dtype=3Dnp=
.float32</span></code> and if a sparse matrix is provided
to a sparse <code class=3D"docutils literal notranslate"><span class=3D"pre=
">csr_matrix</span></code>.</p>
</dd>
<dt><strong>check_input</strong><span class=3D"classifier">bool, default=3D=
True</span></dt><dd><p>Allow to bypass several input checking.
Don=E2=80=99t use this parameter unless you know what you do.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>indicator</strong><span class=3D"classifier">sparse matrix of s=
hape (n_samples, n_nodes)</span></dt><dd><p>Return a node indicator CSR mat=
rix where non zero elements
indicates that the samples goes through the nodes.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py property">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.f=
eature_importances_">
<em class=3D"property"><span class=3D"pre">property</span> </em><span class=
=3D"sig-name descname"><span class=3D"pre">feature_importances_</span></spa=
n><a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/g=
enerated/sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTree=
Classifier.feature_importances_" title=3D"Permalink to this definition">=C2=
=B6</a></dt>
<dd><p>Return the feature importances.</p>
<p>The importance of a feature is computed as the (normalized) total
reduction of the criterion brought by that feature.
It is also known as the Gini importance.</p>
<p>Warning: impurity-based feature importances can be misleading for
high cardinality features (many unique values). See
<a class=3D"reference internal" href=3D"https://scikit-learn.org/stable/mod=
ules/generated/sklearn.inspection.permutation_importance.html#sklearn.inspe=
ction.permutation_importance" title=3D"sklearn.inspection.permutation_impor=
tance"><code class=3D"xref py py-func docutils literal notranslate"><span c=
lass=3D"pre">sklearn.inspection.permutation_importance</span></code></a> as=
 an alternative.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Returns</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>feature_importances_</strong><span class=3D"classifier">ndarray=
 of shape (n_features,)</span></dt><dd><p>Normalized total reduction of cri=
teria by feature
(Gini importance).</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.f=
it">
<span class=3D"sig-name descname"><span class=3D"pre">fit</span></span><spa=
n class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"><sp=
an class=3D"pre">X</span></span></em>, <em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">y</span></span></em>, <em class=3D"sig-param"><s=
pan class=3D"n"><span class=3D"pre">sample_weight</span></span><span class=
=3D"o"><span class=3D"pre">=3D</span></span><span class=3D"default_value"><=
span class=3D"pre">None</span></span></em>, <em class=3D"sig-param"><span c=
lass=3D"n"><span class=3D"pre">check_input</span></span><span class=3D"o"><=
span class=3D"pre">=3D</span></span><span class=3D"default_value"><span cla=
ss=3D"pre">True</span></span></em>, <em class=3D"sig-param"><span class=3D"=
n"><span class=3D"pre">X_idx_sorted</span></span><span class=3D"o"><span cl=
ass=3D"pre">=3D</span></span><span class=3D"default_value"><span class=3D"p=
re">'deprecated'</span></span></em><span class=3D"sig-paren">)</span><a cla=
ss=3D"reference external" href=3D"https://github.com/scikit-learn/scikit-le=
arn/blob/7e1e6d09b/sklearn/tree/_classes.py#L899"><span class=3D"viewcode-l=
ink"><span class=3D"pre">[source]</span></span></a><a class=3D"headerlink" =
href=3D"https://scikit-learn.org/stable/modules/generated/sklearn.tree.Deci=
sionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier.fit" title=3D"P=
ermalink to this definition">=C2=B6</a></dt>
<dd><p>Build a decision tree classifier from the training set (X, y).</p>
<dl class=3D"field-list">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl>
<dt><strong>X</strong><span class=3D"classifier">{array-like, sparse matrix=
} of shape (n_samples, n_features)</span></dt><dd><p>The training input sam=
ples. Internally, it will be converted to
<code class=3D"docutils literal notranslate"><span class=3D"pre">dtype=3Dnp=
.float32</span></code> and if a sparse matrix is provided
to a sparse <code class=3D"docutils literal notranslate"><span class=3D"pre=
">csc_matrix</span></code>.</p>
</dd>
<dt><strong>y</strong><span class=3D"classifier">array-like of shape (n_sam=
ples,) or (n_samples, n_outputs)</span></dt><dd><p>The target values (class=
 labels) as integers or strings.</p>
</dd>
<dt><strong>sample_weight</strong><span class=3D"classifier">array-like of =
shape (n_samples,), default=3DNone</span></dt><dd><p>Sample weights. If Non=
e, then samples are equally weighted. Splits
that would create child nodes with net zero or negative weight are
ignored while searching for a split in each node. Splits are also
ignored if they would result in any single class carrying a
negative weight in either child node.</p>
</dd>
<dt><strong>check_input</strong><span class=3D"classifier">bool, default=3D=
True</span></dt><dd><p>Allow to bypass several input checking.
Don=E2=80=99t use this parameter unless you know what you do.</p>
</dd>
<dt><strong>X_idx_sorted</strong><span class=3D"classifier">deprecated, def=
ault=3D=E2=80=9Ddeprecated=E2=80=9D</span></dt><dd><p>This parameter is dep=
recated and has no effect.
It will be removed in 1.1 (renaming of 0.26).</p>
<div class=3D"deprecated">
<p><span class=3D"versionmodified deprecated">Deprecated since version 0.24=
.</span></p>
</div>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>self</strong><span class=3D"classifier">DecisionTreeClassifier<=
/span></dt><dd><p>Fitted estimator.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.g=
et_depth">
<span class=3D"sig-name descname"><span class=3D"pre">get_depth</span></spa=
n><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a cl=
ass=3D"reference external" href=3D"https://github.com/scikit-learn/scikit-l=
earn/blob/7e1e6d09b/sklearn/tree/_classes.py#L125"><span class=3D"viewcode-=
link"><span class=3D"pre">[source]</span></span></a><a class=3D"headerlink"=
 href=3D"https://scikit-learn.org/stable/modules/generated/sklearn.tree.Dec=
isionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier.get_depth" tit=
le=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Return the depth of the decision tree.</p>
<p>The depth of a tree is the maximum distance between the root
and any leaf.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Returns</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>self.tree_.max_depth</strong><span class=3D"classifier">int</sp=
an></dt><dd><p>The maximum depth of the tree.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.g=
et_n_leaves">
<span class=3D"sig-name descname"><span class=3D"pre">get_n_leaves</span></=
span><span class=3D"sig-paren">(</span><span class=3D"sig-paren">)</span><a=
 class=3D"reference external" href=3D"https://github.com/scikit-learn/sciki=
t-learn/blob/7e1e6d09b/sklearn/tree/_classes.py#L139"><span class=3D"viewco=
de-link"><span class=3D"pre">[source]</span></span></a><a class=3D"headerli=
nk" href=3D"https://scikit-learn.org/stable/modules/generated/sklearn.tree.=
DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier.get_n_leave=
s" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Return the number of leaves of the decision tree.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Returns</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>self.tree_.n_leaves</strong><span class=3D"classifier">int</spa=
n></dt><dd><p>Number of leaves.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.g=
et_params">
<span class=3D"sig-name descname"><span class=3D"pre">get_params</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"n"><span class=3D"pre">deep</span></span><span class=3D"o"><span class=3D"=
pre">=3D</span></span><span class=3D"default_value"><span class=3D"pre">Tru=
e</span></span></em><span class=3D"sig-paren">)</span><a class=3D"reference=
 external" href=3D"https://github.com/scikit-learn/scikit-learn/blob/7e1e6d=
09b/sklearn/base.py#L193"><span class=3D"viewcode-link"><span class=3D"pre"=
>[source]</span></span></a><a class=3D"headerlink" href=3D"https://scikit-l=
earn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html#=
sklearn.tree.DecisionTreeClassifier.get_params" title=3D"Permalink to this =
definition">=C2=B6</a></dt>
<dd><p>Get parameters for this estimator.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>deep</strong><span class=3D"classifier">bool, default=3DTrue</s=
pan></dt><dd><p>If True, will return the parameters for this estimator and
contained subobjects that are estimators.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>params</strong><span class=3D"classifier">dict</span></dt><dd><=
p>Parameter names mapped to their values.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py property">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.n=
_features_">
<em class=3D"property"><span class=3D"pre">property</span> </em><span class=
=3D"sig-name descname"><span class=3D"pre">n_features_</span></span><a clas=
s=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/generated/=
sklearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifie=
r.n_features_" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>DEPRECATED: The attribute <code class=3D"docutils literal notranslat=
e"><span class=3D"pre">n_features_</span></code> is deprecated in 1.0 and w=
ill be removed in 1.2. Use <code class=3D"docutils literal notranslate"><sp=
an class=3D"pre">n_features_in_</span></code> instead.</p>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.p=
redict">
<span class=3D"sig-name descname"><span class=3D"pre">predict</span></span>=
<span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"=
><span class=3D"pre">X</span></span></em>, <em class=3D"sig-param"><span cl=
ass=3D"n"><span class=3D"pre">check_input</span></span><span class=3D"o"><s=
pan class=3D"pre">=3D</span></span><span class=3D"default_value"><span clas=
s=3D"pre">True</span></span></em><span class=3D"sig-paren">)</span><a class=
=3D"reference external" href=3D"https://github.com/scikit-learn/scikit-lear=
n/blob/7e1e6d09b/sklearn/tree/_classes.py#L443"><span class=3D"viewcode-lin=
k"><span class=3D"pre">[source]</span></span></a><a class=3D"headerlink" hr=
ef=3D"https://scikit-learn.org/stable/modules/generated/sklearn.tree.Decisi=
onTreeClassifier.html#sklearn.tree.DecisionTreeClassifier.predict" title=3D=
"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Predict class or regression value for X.</p>
<p>For a classification model, the predicted class for each sample in X is
returned. For a regression model, the predicted value based on X is
returned.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">{array-like, sparse matrix=
} of shape (n_samples, n_features)</span></dt><dd><p>The input samples. Int=
ernally, it will be converted to
<code class=3D"docutils literal notranslate"><span class=3D"pre">dtype=3Dnp=
.float32</span></code> and if a sparse matrix is provided
to a sparse <code class=3D"docutils literal notranslate"><span class=3D"pre=
">csr_matrix</span></code>.</p>
</dd>
<dt><strong>check_input</strong><span class=3D"classifier">bool, default=3D=
True</span></dt><dd><p>Allow to bypass several input checking.
Don=E2=80=99t use this parameter unless you know what you do.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>y</strong><span class=3D"classifier">array-like of shape (n_sam=
ples,) or (n_samples, n_outputs)</span></dt><dd><p>The predicted classes, o=
r the predict values.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.p=
redict_log_proba">
<span class=3D"sig-name descname"><span class=3D"pre">predict_log_proba</sp=
an></span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span c=
lass=3D"n"><span class=3D"pre">X</span></span></em><span class=3D"sig-paren=
">)</span><a class=3D"reference external" href=3D"https://github.com/scikit=
-learn/scikit-learn/blob/7e1e6d09b/sklearn/tree/_classes.py#L994"><span cla=
ss=3D"viewcode-link"><span class=3D"pre">[source]</span></span></a><a class=
=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/generated/s=
klearn.tree.DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier=
.predict_log_proba" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Predict class log-probabilities of the input samples X.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">{array-like, sparse matrix=
} of shape (n_samples, n_features)</span></dt><dd><p>The input samples. Int=
ernally, it will be converted to
<code class=3D"docutils literal notranslate"><span class=3D"pre">dtype=3Dnp=
.float32</span></code> and if a sparse matrix is provided
to a sparse <code class=3D"docutils literal notranslate"><span class=3D"pre=
">csr_matrix</span></code>.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>proba</strong><span class=3D"classifier">ndarray of shape (n_sa=
mples, n_classes) or list of n_outputs             such arrays if n_outputs=
 &gt; 1</span></dt><dd><p>The class log-probabilities of the input samples.=
 The order of the
classes corresponds to that in the attribute <a class=3D"reference internal=
" href=3D"https://scikit-learn.org/stable/glossary.html#term-classes_"><spa=
n class=3D"xref std std-term">classes_</span></a>.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.p=
redict_proba">
<span class=3D"sig-name descname"><span class=3D"pre">predict_proba</span><=
/span><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=
=3D"n"><span class=3D"pre">X</span></span></em>, <em class=3D"sig-param"><s=
pan class=3D"n"><span class=3D"pre">check_input</span></span><span class=3D=
"o"><span class=3D"pre">=3D</span></span><span class=3D"default_value"><spa=
n class=3D"pre">True</span></span></em><span class=3D"sig-paren">)</span><a=
 class=3D"reference external" href=3D"https://github.com/scikit-learn/sciki=
t-learn/blob/7e1e6d09b/sklearn/tree/_classes.py#L946"><span class=3D"viewco=
de-link"><span class=3D"pre">[source]</span></span></a><a class=3D"headerli=
nk" href=3D"https://scikit-learn.org/stable/modules/generated/sklearn.tree.=
DecisionTreeClassifier.html#sklearn.tree.DecisionTreeClassifier.predict_pro=
ba" title=3D"Permalink to this definition">=C2=B6</a></dt>
<dd><p>Predict class probabilities of the input samples X.</p>
<p>The predicted class probability is the fraction of samples of the same
class in a leaf.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">{array-like, sparse matrix=
} of shape (n_samples, n_features)</span></dt><dd><p>The input samples. Int=
ernally, it will be converted to
<code class=3D"docutils literal notranslate"><span class=3D"pre">dtype=3Dnp=
.float32</span></code> and if a sparse matrix is provided
to a sparse <code class=3D"docutils literal notranslate"><span class=3D"pre=
">csr_matrix</span></code>.</p>
</dd>
<dt><strong>check_input</strong><span class=3D"classifier">bool, default=3D=
True</span></dt><dd><p>Allow to bypass several input checking.
Don=E2=80=99t use this parameter unless you know what you do.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>proba</strong><span class=3D"classifier">ndarray of shape (n_sa=
mples, n_classes) or list of n_outputs             such arrays if n_outputs=
 &gt; 1</span></dt><dd><p>The class probabilities of the input samples. The=
 order of the
classes corresponds to that in the attribute <a class=3D"reference internal=
" href=3D"https://scikit-learn.org/stable/glossary.html#term-classes_"><spa=
n class=3D"xref std std-term">classes_</span></a>.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.s=
core">
<span class=3D"sig-name descname"><span class=3D"pre">score</span></span><s=
pan class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D"n"><=
span class=3D"pre">X</span></span></em>, <em class=3D"sig-param"><span clas=
s=3D"n"><span class=3D"pre">y</span></span></em>, <em class=3D"sig-param"><=
span class=3D"n"><span class=3D"pre">sample_weight</span></span><span class=
=3D"o"><span class=3D"pre">=3D</span></span><span class=3D"default_value"><=
span class=3D"pre">None</span></span></em><span class=3D"sig-paren">)</span=
><a class=3D"reference external" href=3D"https://github.com/scikit-learn/sc=
ikit-learn/blob/7e1e6d09b/sklearn/base.py#L625"><span class=3D"viewcode-lin=
k"><span class=3D"pre">[source]</span></span></a><a class=3D"headerlink" hr=
ef=3D"https://scikit-learn.org/stable/modules/generated/sklearn.tree.Decisi=
onTreeClassifier.html#sklearn.tree.DecisionTreeClassifier.score" title=3D"P=
ermalink to this definition">=C2=B6</a></dt>
<dd><p>Return the mean accuracy on the given test data and labels.</p>
<p>In multi-label classification, this is the subset accuracy
which is a harsh metric since you require for each sample that
each label set be correctly predicted.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>X</strong><span class=3D"classifier">array-like of shape (n_sam=
ples, n_features)</span></dt><dd><p>Test samples.</p>
</dd>
<dt><strong>y</strong><span class=3D"classifier">array-like of shape (n_sam=
ples,) or (n_samples, n_outputs)</span></dt><dd><p>True labels for <code cl=
ass=3D"docutils literal notranslate"><span class=3D"pre">X</span></code>.</=
p>
</dd>
<dt><strong>sample_weight</strong><span class=3D"classifier">array-like of =
shape (n_samples,), default=3DNone</span></dt><dd><p>Sample weights.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>score</strong><span class=3D"classifier">float</span></dt><dd><=
p>Mean accuracy of <code class=3D"docutils literal notranslate"><span class=
=3D"pre">self.predict(X)</span></code> wrt. <code class=3D"docutils literal=
 notranslate"><span class=3D"pre">y</span></code>.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

<dl class=3D"py method">
<dt class=3D"sig sig-object py" id=3D"sklearn.tree.DecisionTreeClassifier.s=
et_params">
<span class=3D"sig-name descname"><span class=3D"pre">set_params</span></sp=
an><span class=3D"sig-paren">(</span><em class=3D"sig-param"><span class=3D=
"o"><span class=3D"pre">**</span></span><span class=3D"n"><span class=3D"pr=
e">params</span></span></em><span class=3D"sig-paren">)</span><a class=3D"r=
eference external" href=3D"https://github.com/scikit-learn/scikit-learn/blo=
b/7e1e6d09b/sklearn/base.py#L217"><span class=3D"viewcode-link"><span class=
=3D"pre">[source]</span></span></a><a class=3D"headerlink" href=3D"https://=
scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifi=
er.html#sklearn.tree.DecisionTreeClassifier.set_params" title=3D"Permalink =
to this definition">=C2=B6</a></dt>
<dd><p>Set the parameters of this estimator.</p>
<p>The method works on simple estimators as well as on nested objects
(such as <a class=3D"reference internal" href=3D"https://scikit-learn.org/s=
table/modules/generated/sklearn.pipeline.Pipeline.html#sklearn.pipeline.Pip=
eline" title=3D"sklearn.pipeline.Pipeline"><code class=3D"xref py py-class =
docutils literal notranslate"><span class=3D"pre">Pipeline</span></code></a=
>). The latter have
parameters of the form <code class=3D"docutils literal notranslate"><span c=
lass=3D"pre">&lt;component&gt;__&lt;parameter&gt;</span></code> so that it=
=E2=80=99s
possible to update each component of a nested object.</p>
<dl class=3D"field-list simple">
<dt class=3D"field-odd">Parameters</dt>
<dd class=3D"field-odd"><dl class=3D"simple">
<dt><strong>**params</strong><span class=3D"classifier">dict</span></dt><dd=
><p>Estimator parameters.</p>
</dd>
</dl>
</dd>
<dt class=3D"field-even">Returns</dt>
<dd class=3D"field-even"><dl class=3D"simple">
<dt><strong>self</strong><span class=3D"classifier">estimator instance</spa=
n></dt><dd><p>Estimator instance.</p>
</dd>
</dl>
</dd>
</dl>
</dd></dl>

</dd></dl>

<section id=3D"examples-using-sklearn-tree-decisiontreeclassifier">
<h2>Examples using <code class=3D"docutils literal notranslate"><span class=
=3D"pre">sklearn.tree.DecisionTreeClassifier</span></code><a class=3D"heade=
rlink" href=3D"https://scikit-learn.org/stable/modules/generated/sklearn.tr=
ee.DecisionTreeClassifier.html#examples-using-sklearn-tree-decisiontreeclas=
sifier" title=3D"Permalink to this headline">=C2=B6</a></h2>
<div class=3D"sphx-glr-thumbcontainer" tooltip=3D"A comparison of a several=
 classifiers in scikit-learn on synthetic datasets. The point of this ...">=
<figure class=3D"align-default" id=3D"id5">
<img alt=3D"Classifier comparison" src=3D"https://scikit-learn.org/stable/_=
images/sphx_glr_plot_classifier_comparison_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/classification/plot_classifier_c=
omparison.html#sphx-glr-auto-examples-classification-plot-classifier-compar=
ison-py"><span class=3D"std std-ref">Classifier comparison</span></a></span=
><a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/ge=
nerated/sklearn.tree.DecisionTreeClassifier.html#id5" title=3D"Permalink to=
 this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"Plot the decision s=
urface of a decision tree trained on pairs of features of the iris dataset.=
"><figure class=3D"align-default" id=3D"id6">
<img alt=3D"Plot the decision surface of decision trees trained on the iris=
 dataset" src=3D"https://scikit-learn.org/stable/_images/sphx_glr_plot_iris=
_dtc_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/tree/plot_iris_dtc.html#sphx-glr=
-auto-examples-tree-plot-iris-dtc-py"><span class=3D"std std-ref">Plot the =
decision surface of decision trees trained on the iris dataset</span></a></=
span><a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/module=
s/generated/sklearn.tree.DecisionTreeClassifier.html#id6" title=3D"Permalin=
k to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"The DecisionTreeCla=
ssifier provides parameters such as min_samples_leaf and max_depth to preve=
n..."><figure class=3D"align-default" id=3D"id7">
<img alt=3D"Post pruning decision trees with cost complexity pruning" src=
=3D"https://scikit-learn.org/stable/_images/sphx_glr_plot_cost_complexity_p=
runing_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/tree/plot_cost_complexity_prunin=
g.html#sphx-glr-auto-examples-tree-plot-cost-complexity-pruning-py"><span c=
lass=3D"std std-ref">Post pruning decision trees with cost complexity pruni=
ng</span></a></span><a class=3D"headerlink" href=3D"https://scikit-learn.or=
g/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html#id7" ti=
tle=3D"Permalink to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"The decision tree s=
tructure can be analysed to gain further insight on the relation between th=
e..."><figure class=3D"align-default" id=3D"id8">
<img alt=3D"Understanding the decision tree structure" src=3D"https://sciki=
t-learn.org/stable/_images/sphx_glr_plot_unveil_tree_structure_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/tree/plot_unveil_tree_structure.=
html#sphx-glr-auto-examples-tree-plot-unveil-tree-structure-py"><span class=
=3D"std std-ref">Understanding the decision tree structure</span></a></span=
><a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/ge=
nerated/sklearn.tree.DecisionTreeClassifier.html#id8" title=3D"Permalink to=
 this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"Plot the decision b=
oundaries of a VotingClassifier for two features of the Iris dataset."><fig=
ure class=3D"align-default" id=3D"id9">
<img alt=3D"Plot the decision boundaries of a VotingClassifier" src=3D"http=
s://scikit-learn.org/stable/_images/sphx_glr_plot_voting_decision_regions_t=
humb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/ensemble/plot_voting_decision_re=
gions.html#sphx-glr-auto-examples-ensemble-plot-voting-decision-regions-py"=
><span class=3D"std std-ref">Plot the decision boundaries of a VotingClassi=
fier</span></a></span><a class=3D"headerlink" href=3D"https://scikit-learn.=
org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html#id9" =
title=3D"Permalink to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"This example fits a=
n AdaBoosted decision stump on a non-linearly separable classification data=
s..."><figure class=3D"align-default" id=3D"id10">
<img alt=3D"Two-class AdaBoost" src=3D"https://scikit-learn.org/stable/_ima=
ges/sphx_glr_plot_adaboost_twoclass_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/ensemble/plot_adaboost_twoclass.=
html#sphx-glr-auto-examples-ensemble-plot-adaboost-twoclass-py"><span class=
=3D"std std-ref">Two-class AdaBoost</span></a></span><a class=3D"headerlink=
" href=3D"https://scikit-learn.org/stable/modules/generated/sklearn.tree.De=
cisionTreeClassifier.html#id10" title=3D"Permalink to this image">=C2=B6</a=
></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"This example reprod=
uces Figure 1 of Zhu et al [1]_ and shows how boosting can improve predicti=
o..."><figure class=3D"align-default" id=3D"id11">
<img alt=3D"Multi-class AdaBoosted Decision Trees" src=3D"https://scikit-le=
arn.org/stable/_images/sphx_glr_plot_adaboost_multiclass_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/ensemble/plot_adaboost_multiclas=
s.html#sphx-glr-auto-examples-ensemble-plot-adaboost-multiclass-py"><span c=
lass=3D"std std-ref">Multi-class AdaBoosted Decision Trees</span></a></span=
><a class=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/ge=
nerated/sklearn.tree.DecisionTreeClassifier.html#id11" title=3D"Permalink t=
o this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"This example is bas=
ed on Figure 10.2 from Hastie et al 2009 [1]_ and illustrates the differenc=
e..."><figure class=3D"align-default" id=3D"id12">
<img alt=3D"Discrete versus Real AdaBoost" src=3D"https://scikit-learn.org/=
stable/_images/sphx_glr_plot_adaboost_hastie_10_2_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/ensemble/plot_adaboost_hastie_10=
_2.html#sphx-glr-auto-examples-ensemble-plot-adaboost-hastie-10-2-py"><span=
 class=3D"std std-ref">Discrete versus Real AdaBoost</span></a></span><a cl=
ass=3D"headerlink" href=3D"https://scikit-learn.org/stable/modules/generate=
d/sklearn.tree.DecisionTreeClassifier.html#id12" title=3D"Permalink to this=
 image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"Plot the decision s=
urfaces of forests of randomized trees trained on pairs of features of the =
i..."><figure class=3D"align-default" id=3D"id13">
<img alt=3D"Plot the decision surfaces of ensembles of trees on the iris da=
taset" src=3D"https://scikit-learn.org/stable/_images/sphx_glr_plot_forest_=
iris_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/ensemble/plot_forest_iris.html#s=
phx-glr-auto-examples-ensemble-plot-forest-iris-py"><span class=3D"std std-=
ref">Plot the decision surfaces of ensembles of trees on the iris dataset</=
span></a></span><a class=3D"headerlink" href=3D"https://scikit-learn.org/st=
able/modules/generated/sklearn.tree.DecisionTreeClassifier.html#id13" title=
=3D"Permalink to this image">=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"sphx-glr-thumbcontainer" tooltip=3D"Multiple metric par=
ameter search can be done by setting the scoring parameter to a list of met=
r..."><figure class=3D"align-default" id=3D"id14">
<img alt=3D"Demonstration of multi-metric evaluation on cross_val_score and=
 GridSearchCV" src=3D"https://scikit-learn.org/stable/_images/sphx_glr_plot=
_multi_metric_evaluation_thumb.png">
<figcaption>
<p><span class=3D"caption-text"><a class=3D"reference internal" href=3D"htt=
ps://scikit-learn.org/stable/auto_examples/model_selection/plot_multi_metri=
c_evaluation.html#sphx-glr-auto-examples-model-selection-plot-multi-metric-=
evaluation-py"><span class=3D"std std-ref">Demonstration of multi-metric ev=
aluation on cross_val_score and GridSearchCV</span></a></span><a class=3D"h=
eaderlink" href=3D"https://scikit-learn.org/stable/modules/generated/sklear=
n.tree.DecisionTreeClassifier.html#id14" title=3D"Permalink to this image">=
=C2=B6</a></p>
</figcaption>
</figure>
</div><div class=3D"clearer"></div></section>
</section>


      </div>
    <div class=3D"container">
      <footer class=3D"sk-content-footer">
            =C2=A9 2007 - 2021, scikit-learn developers (BSD License).
          <a href=3D"https://scikit-learn.org/stable/_sources/modules/gener=
ated/sklearn.tree.DecisionTreeClassifier.rst.txt" rel=3D"nofollow">Show thi=
s page source</a>
      </footer>
    </div>
  </div>
</div>







   =20

   =20
   =20

</body></html>
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-0d33f75b-65fd-4992-89f2-16fe2af5cb0b@mhtml.blink

@charset "utf-8";

.CtxtMenu_InfoClose { top: 0.2em; right: 0.2em; }

.CtxtMenu_InfoContent { overflow: auto; text-align: left; font-size: 80%; p=
adding: 0.4em 0.6em; border: 1px inset; margin: 1em 0px; max-height: 20em; =
max-width: 30em; background-color: rgb(238, 238, 238); white-space: normal;=
 }

.CtxtMenu_Info.CtxtMenu_MousePost { outline: none; }

.CtxtMenu_Info { position: fixed; left: 50%; width: auto; text-align: cente=
r; border: 3px outset; padding: 1em 2em; background-color: rgb(221, 221, 22=
1); color: black; cursor: default; font-family: message-box; font-size: 120=
%; font-style: normal; text-indent: 0px; text-transform: none; line-height:=
 normal; letter-spacing: normal; word-spacing: normal; overflow-wrap: norma=
l; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; box=
-shadow: rgb(128, 128, 128) 0px 10px 20px; }
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-4774ef5b-203c-4262-905f-76ee06165677@mhtml.blink

@charset "utf-8";

.CtxtMenu_MenuClose { position: absolute; cursor: pointer; display: inline-=
block; border: 2px solid rgb(170, 170, 170); border-radius: 18px; font-fami=
ly: "Courier New", Courier; font-size: 24px; color: rgb(240, 240, 240); }

.CtxtMenu_MenuClose span { display: block; background-color: rgb(170, 170, =
170); border: 1.5px solid; border-radius: 18px; line-height: 0; padding: 8p=
x 0px 6px; }

.CtxtMenu_MenuClose:hover { color: white !important; border: 2px solid rgb(=
204, 204, 204) !important; }

.CtxtMenu_MenuClose:hover span { background-color: rgb(204, 204, 204) !impo=
rtant; }

.CtxtMenu_MenuClose:hover:focus { outline: none; }
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-9840c8a2-b30b-49fd-80dc-636b17c555ae@mhtml.blink

@charset "utf-8";

.CtxtMenu_Menu { position: absolute; background-color: white; color: black;=
 width: auto; padding: 5px 0px; border: 1px solid rgb(204, 204, 204); margi=
n: 0px; cursor: default; font-style: ; font-variant: normal; font-weight: ;=
 font-stretch: ; font-size: ; font-family: ; text-align: left; text-indent:=
 0px; text-transform: none; line-height: normal; letter-spacing: normal; wo=
rd-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none=
; z-index: 201; border-radius: 5px; box-shadow: rgb(128, 128, 128) 0px 10px=
 20px; }

.CtxtMenu_MenuItem { padding: 1px 2em; background: transparent; }

.CtxtMenu_MenuArrow { position: absolute; right: 0.5em; padding-top: 0.25em=
; color: rgb(102, 102, 102); font-family: null; font-size: 0.75em; }

.CtxtMenu_MenuActive .CtxtMenu_MenuArrow { color: white; }

.CtxtMenu_MenuArrow.CtxtMenu_RTL { left: 0.5em; right: auto; }

.CtxtMenu_MenuCheck { position: absolute; left: 0.7em; font-family: null; }

.CtxtMenu_MenuCheck.CtxtMenu_RTL { right: 0.7em; left: auto; }

.CtxtMenu_MenuRadioCheck { position: absolute; left: 0.7em; }

.CtxtMenu_MenuRadioCheck.CtxtMenu_RTL { right: 0.7em; left: auto; }

.CtxtMenu_MenuInputBox { padding-left: 1em; right: 0.5em; color: rgb(102, 1=
02, 102); font-family: null; }

.CtxtMenu_MenuInputBox.CtxtMenu_RTL { left: 0.1em; }

.CtxtMenu_MenuComboBox { left: 0.1em; padding-bottom: 0.5em; }

.CtxtMenu_MenuSlider { left: 0.1em; }

.CtxtMenu_SliderValue { position: absolute; right: 0.1em; padding-top: 0.25=
em; color: rgb(51, 51, 51); font-size: 0.75em; }

.CtxtMenu_SliderBar { outline: none; background: rgb(211, 211, 211); }

.CtxtMenu_MenuLabel { padding: 1px 2em 3px 1.33em; font-style: italic; }

.CtxtMenu_MenuRule { border-top: 1px solid rgb(221, 221, 221); margin: 4px =
3px; }

.CtxtMenu_MenuDisabled { color: graytext; }

.CtxtMenu_MenuActive { background-color: rgb(96, 104, 114); color: white; }

.CtxtMenu_MenuDisabled:focus { background-color: rgb(232, 232, 232); }

.CtxtMenu_MenuLabel:focus { background-color: rgb(232, 232, 232); }

.CtxtMenu_ContextMenu:focus { outline: none; }

.CtxtMenu_ContextMenu .CtxtMenu_MenuItem:focus { outline: none; }

.CtxtMenu_SelectionMenu { position: relative; float: left; border-bottom: n=
one; box-shadow: none; border-radius: 0px; }

.CtxtMenu_SelectionItem { padding-right: 1em; }

.CtxtMenu_Selection { right: 40%; width: 50%; }

.CtxtMenu_SelectionBox { padding: 0em; max-height: 20em; max-width: none; b=
ackground-color: rgb(255, 255, 255); }

.CtxtMenu_SelectionDivider { clear: both; border-top: 2px solid rgb(0, 0, 0=
); }

.CtxtMenu_Menu .CtxtMenu_MenuClose { top: -10px; left: -10px; }
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-ae59335f-8d31-41df-94bf-be1291123771@mhtml.blink

@charset "utf-8";

mjx-container[jax=3D"CHTML"] { line-height: 0; }

mjx-container [space=3D"1"] { margin-left: 0.111em; }

mjx-container [space=3D"2"] { margin-left: 0.167em; }

mjx-container [space=3D"3"] { margin-left: 0.222em; }

mjx-container [space=3D"4"] { margin-left: 0.278em; }

mjx-container [space=3D"5"] { margin-left: 0.333em; }

mjx-container [rspace=3D"1"] { margin-right: 0.111em; }

mjx-container [rspace=3D"2"] { margin-right: 0.167em; }

mjx-container [rspace=3D"3"] { margin-right: 0.222em; }

mjx-container [rspace=3D"4"] { margin-right: 0.278em; }

mjx-container [rspace=3D"5"] { margin-right: 0.333em; }

mjx-container [size=3D"s"] { font-size: 70.7%; }

mjx-container [size=3D"ss"] { font-size: 50%; }

mjx-container [size=3D"Tn"] { font-size: 60%; }

mjx-container [size=3D"sm"] { font-size: 85%; }

mjx-container [size=3D"lg"] { font-size: 120%; }

mjx-container [size=3D"Lg"] { font-size: 144%; }

mjx-container [size=3D"LG"] { font-size: 173%; }

mjx-container [size=3D"hg"] { font-size: 207%; }

mjx-container [size=3D"HG"] { font-size: 249%; }

mjx-container [width=3D"full"] { width: 100%; }

mjx-box { display: inline-block; }

mjx-block { display: block; }

mjx-itable { display: inline-table; }

mjx-row { display: table-row; }

mjx-row > * { display: table-cell; }

mjx-mtext { display: inline-block; }

mjx-mstyle { display: inline-block; }

mjx-merror { display: inline-block; color: red; background-color: yellow; }

mjx-mphantom { visibility: hidden; }

mjx-assistive-mml { top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); us=
er-select: none; position: absolute !important; padding: 1px 0px 0px !impor=
tant; border: 0px !important; display: block !important; width: auto !impor=
tant; overflow: hidden !important; }

mjx-assistive-mml[display=3D"block"] { width: 100% !important; }

mjx-c::before { display: block; width: 0px; }

.MJX-TEX { font-family: MJXZERO, MJXTEX; }

.TEX-B { font-family: MJXZERO, MJXTEX-B; }

.TEX-I { font-family: MJXZERO, MJXTEX-I; }

.TEX-MI { font-family: MJXZERO, MJXTEX-MI; }

.TEX-BI { font-family: MJXZERO, MJXTEX-BI; }

.TEX-S1 { font-family: MJXZERO, MJXTEX-S1; }

.TEX-S2 { font-family: MJXZERO, MJXTEX-S2; }

.TEX-S3 { font-family: MJXZERO, MJXTEX-S3; }

.TEX-S4 { font-family: MJXZERO, MJXTEX-S4; }

.TEX-A { font-family: MJXZERO, MJXTEX-A; }

.TEX-C { font-family: MJXZERO, MJXTEX-C; }

.TEX-CB { font-family: MJXZERO, MJXTEX-CB; }

.TEX-FR { font-family: MJXZERO, MJXTEX-FR; }

.TEX-FRB { font-family: MJXZERO, MJXTEX-FRB; }

.TEX-SS { font-family: MJXZERO, MJXTEX-SS; }

.TEX-SSB { font-family: MJXZERO, MJXTEX-SSB; }

.TEX-SSI { font-family: MJXZERO, MJXTEX-SSI; }

.TEX-SC { font-family: MJXZERO, MJXTEX-SC; }

.TEX-T { font-family: MJXZERO, MJXTEX-T; }

.TEX-V { font-family: MJXZERO, MJXTEX-V; }

.TEX-VB { font-family: MJXZERO, MJXTEX-VB; }

mjx-stretchy-v mjx-c, mjx-stretchy-h mjx-c { font-family: MJXZERO, MJXTEX-S=
1, MJXTEX-S4, MJXTEX, MJXTEX-A !important; }

@font-face { font-family: MJXZERO; src: url("https://cdn.jsdelivr.net/npm/m=
athjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Zero.woff") format("woff");=
 }

@font-face { font-family: MJXTEX; src: url("https://cdn.jsdelivr.net/npm/ma=
thjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Main-Regular.woff") format("=
woff"); }

@font-face { font-family: MJXTEX-B; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Main-Bold.woff") format("w=
off"); }

@font-face { font-family: MJXTEX-I; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Math-Italic.woff") format(=
"woff"); }

@font-face { font-family: MJXTEX-MI; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Main-Italic.woff") format=
("woff"); }

@font-face { font-family: MJXTEX-BI; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Math-BoldItalic.woff") fo=
rmat("woff"); }

@font-face { font-family: MJXTEX-S1; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Size1-Regular.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-S2; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Size2-Regular.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-S3; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Size3-Regular.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-S4; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Size4-Regular.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-A; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_AMS-Regular.woff") format(=
"woff"); }

@font-face { font-family: MJXTEX-C; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Calligraphic-Regular.woff"=
) format("woff"); }

@font-face { font-family: MJXTEX-CB; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Calligraphic-Bold.woff") =
format("woff"); }

@font-face { font-family: MJXTEX-FR; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Fraktur-Regular.woff") fo=
rmat("woff"); }

@font-face { font-family: MJXTEX-FRB; src: url("https://cdn.jsdelivr.net/np=
m/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Fraktur-Bold.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-SS; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_SansSerif-Regular.woff") =
format("woff"); }

@font-face { font-family: MJXTEX-SSB; src: url("https://cdn.jsdelivr.net/np=
m/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_SansSerif-Bold.woff") fo=
rmat("woff"); }

@font-face { font-family: MJXTEX-SSI; src: url("https://cdn.jsdelivr.net/np=
m/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_SansSerif-Italic.woff") =
format("woff"); }

@font-face { font-family: MJXTEX-SC; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Script-Regular.woff") for=
mat("woff"); }

@font-face { font-family: MJXTEX-T; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Typewriter-Regular.woff") =
format("woff"); }

@font-face { font-family: MJXTEX-V; src: url("https://cdn.jsdelivr.net/npm/=
mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Vector-Regular.woff") form=
at("woff"); }

@font-face { font-family: MJXTEX-VB; src: url("https://cdn.jsdelivr.net/npm=
/mathjax@3/es5/output/chtml/fonts/woff-v2/MathJax_Vector-Bold.woff") format=
("woff"); }
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/css/vendor/bootstrap.min.css

@charset "utf-8";

:root { --blue:#007bff; --indigo:#6610f2; --purple:#6f42c1; --pink:#e83e8c;=
 --red:#dc3545; --orange:#fd7e14; --yellow:#ffc107; --green:#28a745; --teal=
:#20c997; --cyan:#17a2b8; --white:#fff; --gray:#6c757d; --gray-dark:#343a40=
; --primary:#007bff; --secondary:#6c757d; --success:#28a745; --info:#17a2b8=
; --warning:#ffc107; --danger:#dc3545; --light:#f8f9fa; --dark:#343a40; --b=
reakpoint-xs:0; --breakpoint-sm:576px; --breakpoint-md:768px; --breakpoint-=
lg:992px; --breakpoint-xl:1200px; --font-family-sans-serif:-apple-system,Bl=
inkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-=
serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Em=
oji"; --font-family-monospace:SFMono-Regular,Menlo,Monaco,Consolas,"Liberat=
ion Mono","Courier New",monospace; }

*, ::after, ::before { box-sizing: border-box; }

html { font-family: sans-serif; line-height: 1.15; text-size-adjust: 100%; =
-webkit-tap-highlight-color: transparent; }

article, aside, figcaption, figure, footer, header, hgroup, main, nav, sect=
ion { display: block; }

body { margin: 0px; font-family: -apple-system, BlinkMacSystemFont, "Segoe =
UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color=
 Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-size=
: 1rem; font-weight: 400; line-height: 1.5; color: rgb(33, 37, 41); text-al=
ign: left; background-color: rgb(255, 255, 255); }

[tabindex=3D"-1"]:focus { outline: 0px !important; }

hr { box-sizing: content-box; height: 0px; overflow: visible; }

h1, h2, h3, h4, h5, h6 { margin-top: 0px; margin-bottom: 0.5rem; }

p { margin-top: 0px; margin-bottom: 1rem; }

abbr[data-original-title], abbr[title] { text-decoration: underline dotted;=
 cursor: help; border-bottom: 0px; text-decoration-skip-ink: none; }

address { margin-bottom: 1rem; font-style: normal; line-height: inherit; }

dl, ol, ul { margin-top: 0px; margin-bottom: 1rem; }

ol ol, ol ul, ul ol, ul ul { margin-bottom: 0px; }

dt { font-weight: 700; }

dd { margin-bottom: 0.5rem; margin-left: 0px; }

blockquote { margin: 0px 0px 1rem; }

b, strong { font-weight: bolder; }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

a { color: rgb(0, 123, 255); text-decoration: none; background-color: trans=
parent; }

a:hover { color: rgb(0, 86, 179); text-decoration: underline; }

a:not([href]):not([tabindex]) { color: inherit; text-decoration: none; }

a:not([href]):not([tabindex]):focus, a:not([href]):not([tabindex]):hover { =
color: inherit; text-decoration: none; }

a:not([href]):not([tabindex]):focus { outline: 0px; }

code, kbd, pre, samp { font-family: SFMono-Regular, Menlo, Monaco, Consolas=
, "Liberation Mono", "Courier New", monospace; font-size: 1em; }

pre { margin-top: 0px; margin-bottom: 1rem; overflow: auto; }

figure { margin: 0px 0px 1rem; }

img { vertical-align: middle; border-style: none; }

svg { overflow: hidden; vertical-align: middle; }

table { border-collapse: collapse; }

caption { padding-top: 0.75rem; padding-bottom: 0.75rem; color: rgb(108, 11=
7, 125); text-align: left; caption-side: bottom; }

th { text-align: inherit; }

label { display: inline-block; margin-bottom: 0.5rem; }

button { border-radius: 0px; }

button:focus { outline: -webkit-focus-ring-color auto 5px; }

button, input, optgroup, select, textarea { margin: 0px; font-family: inher=
it; font-size: inherit; line-height: inherit; }

button, input { overflow: visible; }

button, select { text-transform: none; }

select { overflow-wrap: normal; }

[type=3D"button"], [type=3D"reset"], [type=3D"submit"], button { appearance=
: button; }

[type=3D"button"]:not(:disabled), [type=3D"reset"]:not(:disabled), [type=3D=
"submit"]:not(:disabled), button:not(:disabled) { cursor: pointer; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"date"], input[type=3D"datetime-local"], input[type=3D"month"]=
, input[type=3D"time"] { appearance: listbox; }

textarea { overflow: auto; resize: vertical; }

fieldset { min-width: 0px; padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; max-width: 100%; padding: 0px; margin=
-bottom: 0.5rem; font-size: 1.5rem; line-height: inherit; color: inherit; w=
hite-space: normal; }

progress { vertical-align: baseline; }

[type=3D"number"]::-webkit-inner-spin-button, [type=3D"number"]::-webkit-ou=
ter-spin-button { height: auto; }

[type=3D"search"] { outline-offset: -2px; appearance: none; }

[type=3D"search"]::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { font: inherit; appearance: button; }

output { display: inline-block; }

summary { display: list-item; cursor: pointer; }

template { display: none; }

[hidden] { display: none !important; }

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 { margin-bottom: 0.5re=
m; font-weight: 500; line-height: 1.2; }

.h1, h1 { font-size: 2.5rem; }

.h2, h2 { font-size: 2rem; }

.h3, h3 { font-size: 1.75rem; }

.h4, h4 { font-size: 1.5rem; }

.h5, h5 { font-size: 1.25rem; }

.h6, h6 { font-size: 1rem; }

.lead { font-size: 1.25rem; font-weight: 300; }

.display-1 { font-size: 6rem; font-weight: 300; line-height: 1.2; }

.display-2 { font-size: 5.5rem; font-weight: 300; line-height: 1.2; }

.display-3 { font-size: 4.5rem; font-weight: 300; line-height: 1.2; }

.display-4 { font-size: 3.5rem; font-weight: 300; line-height: 1.2; }

hr { margin-top: 1rem; margin-bottom: 1rem; border-width: 1px 0px 0px; bord=
er-right-style: initial; border-bottom-style: initial; border-left-style: i=
nitial; border-right-color: initial; border-bottom-color: initial; border-l=
eft-color: initial; border-image: initial; border-top-style: solid; border-=
top-color: rgba(0, 0, 0, 0.1); }

.small, small { font-size: 80%; font-weight: 400; }

.mark, mark { padding: 0.2em; background-color: rgb(252, 248, 227); }

.list-unstyled { padding-left: 0px; list-style: none; }

.list-inline { padding-left: 0px; list-style: none; }

.list-inline-item { display: inline-block; }

.list-inline-item:not(:last-child) { margin-right: 0.5rem; }

.initialism { font-size: 90%; text-transform: uppercase; }

.blockquote { margin-bottom: 1rem; font-size: 1.25rem; }

.blockquote-footer { display: block; font-size: 80%; color: rgb(108, 117, 1=
25); }

.blockquote-footer::before { content: "=E2=80=94=C2=A0"; }

.img-fluid { max-width: 100%; height: auto; }

.img-thumbnail { padding: 0.25rem; background-color: rgb(255, 255, 255); bo=
rder: 1px solid rgb(222, 226, 230); border-radius: 0.25rem; max-width: 100%=
; height: auto; }

.figure { display: inline-block; }

.figure-img { margin-bottom: 0.5rem; line-height: 1; }

.figure-caption { font-size: 90%; color: rgb(108, 117, 125); }

code { font-size: 87.5%; color: rgb(232, 62, 140); word-break: break-word; =
}

a > code { color: inherit; }

kbd { padding: 0.2rem 0.4rem; font-size: 87.5%; color: rgb(255, 255, 255); =
background-color: rgb(33, 37, 41); border-radius: 0.2rem; }

kbd kbd { padding: 0px; font-size: 100%; font-weight: 700; }

pre { display: block; font-size: 87.5%; color: rgb(33, 37, 41); }

pre code { font-size: inherit; color: inherit; word-break: normal; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { width: 100%; padding-right: 15px; padding-left: 15px; margin-r=
ight: auto; margin-left: auto; }

@media (min-width: 576px) {
  .container { max-width: 540px; }
}

@media (min-width: 768px) {
  .container { max-width: 720px; }
}

@media (min-width: 992px) {
  .container { max-width: 960px; }
}

@media (min-width: 1200px) {
  .container { max-width: 1140px; }
}

.container-fluid { width: 100%; padding-right: 15px; padding-left: 15px; ma=
rgin-right: auto; margin-left: auto; }

.row { display: flex; flex-wrap: wrap; margin-right: -15px; margin-left: -1=
5px; }

.no-gutters { margin-right: 0px; margin-left: 0px; }

.no-gutters > .col, .no-gutters > [class*=3D"col-"] { padding-right: 0px; p=
adding-left: 0px; }

.col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5, .c=
ol-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1, .col-lg-10, .c=
ol-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6=
, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto, .col-md, .col-md-1, .col-m=
d-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .=
col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-auto, .col-sm, .col-sm-1=
, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col=
-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .=
col-xl-1, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl=
-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto { p=
osition: relative; width: 100%; padding-right: 15px; padding-left: 15px; }

.col { flex-basis: 0px; flex-grow: 1; max-width: 100%; }

.col-auto { flex: 0 0 auto; width: auto; max-width: 100%; }

.col-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }

.col-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }

.col-3 { flex: 0 0 25%; max-width: 25%; }

.col-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }

.col-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }

.col-6 { flex: 0 0 50%; max-width: 50%; }

.col-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }

.col-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }

.col-9 { flex: 0 0 75%; max-width: 75%; }

.col-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }

.col-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }

.col-12 { flex: 0 0 100%; max-width: 100%; }

.order-first { order: -1; }

.order-last { order: 13; }

.order-0 { order: 0; }

.order-1 { order: 1; }

.order-2 { order: 2; }

.order-3 { order: 3; }

.order-4 { order: 4; }

.order-5 { order: 5; }

.order-6 { order: 6; }

.order-7 { order: 7; }

.order-8 { order: 8; }

.order-9 { order: 9; }

.order-10 { order: 10; }

.order-11 { order: 11; }

.order-12 { order: 12; }

.offset-1 { margin-left: 8.33333%; }

.offset-2 { margin-left: 16.6667%; }

.offset-3 { margin-left: 25%; }

.offset-4 { margin-left: 33.3333%; }

.offset-5 { margin-left: 41.6667%; }

.offset-6 { margin-left: 50%; }

.offset-7 { margin-left: 58.3333%; }

.offset-8 { margin-left: 66.6667%; }

.offset-9 { margin-left: 75%; }

.offset-10 { margin-left: 83.3333%; }

.offset-11 { margin-left: 91.6667%; }

@media (min-width: 576px) {
  .col-sm { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-sm-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-sm-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-sm-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-sm-3 { flex: 0 0 25%; max-width: 25%; }
  .col-sm-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-sm-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-sm-6 { flex: 0 0 50%; max-width: 50%; }
  .col-sm-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-sm-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-sm-9 { flex: 0 0 75%; max-width: 75%; }
  .col-sm-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-sm-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-sm-12 { flex: 0 0 100%; max-width: 100%; }
  .order-sm-first { order: -1; }
  .order-sm-last { order: 13; }
  .order-sm-0 { order: 0; }
  .order-sm-1 { order: 1; }
  .order-sm-2 { order: 2; }
  .order-sm-3 { order: 3; }
  .order-sm-4 { order: 4; }
  .order-sm-5 { order: 5; }
  .order-sm-6 { order: 6; }
  .order-sm-7 { order: 7; }
  .order-sm-8 { order: 8; }
  .order-sm-9 { order: 9; }
  .order-sm-10 { order: 10; }
  .order-sm-11 { order: 11; }
  .order-sm-12 { order: 12; }
  .offset-sm-0 { margin-left: 0px; }
  .offset-sm-1 { margin-left: 8.33333%; }
  .offset-sm-2 { margin-left: 16.6667%; }
  .offset-sm-3 { margin-left: 25%; }
  .offset-sm-4 { margin-left: 33.3333%; }
  .offset-sm-5 { margin-left: 41.6667%; }
  .offset-sm-6 { margin-left: 50%; }
  .offset-sm-7 { margin-left: 58.3333%; }
  .offset-sm-8 { margin-left: 66.6667%; }
  .offset-sm-9 { margin-left: 75%; }
  .offset-sm-10 { margin-left: 83.3333%; }
  .offset-sm-11 { margin-left: 91.6667%; }
}

@media (min-width: 768px) {
  .col-md { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-md-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-md-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-md-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-md-3 { flex: 0 0 25%; max-width: 25%; }
  .col-md-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-md-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-md-6 { flex: 0 0 50%; max-width: 50%; }
  .col-md-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-md-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-md-9 { flex: 0 0 75%; max-width: 75%; }
  .col-md-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-md-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-md-12 { flex: 0 0 100%; max-width: 100%; }
  .order-md-first { order: -1; }
  .order-md-last { order: 13; }
  .order-md-0 { order: 0; }
  .order-md-1 { order: 1; }
  .order-md-2 { order: 2; }
  .order-md-3 { order: 3; }
  .order-md-4 { order: 4; }
  .order-md-5 { order: 5; }
  .order-md-6 { order: 6; }
  .order-md-7 { order: 7; }
  .order-md-8 { order: 8; }
  .order-md-9 { order: 9; }
  .order-md-10 { order: 10; }
  .order-md-11 { order: 11; }
  .order-md-12 { order: 12; }
  .offset-md-0 { margin-left: 0px; }
  .offset-md-1 { margin-left: 8.33333%; }
  .offset-md-2 { margin-left: 16.6667%; }
  .offset-md-3 { margin-left: 25%; }
  .offset-md-4 { margin-left: 33.3333%; }
  .offset-md-5 { margin-left: 41.6667%; }
  .offset-md-6 { margin-left: 50%; }
  .offset-md-7 { margin-left: 58.3333%; }
  .offset-md-8 { margin-left: 66.6667%; }
  .offset-md-9 { margin-left: 75%; }
  .offset-md-10 { margin-left: 83.3333%; }
  .offset-md-11 { margin-left: 91.6667%; }
}

@media (min-width: 992px) {
  .col-lg { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-lg-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-lg-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-lg-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-lg-3 { flex: 0 0 25%; max-width: 25%; }
  .col-lg-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-lg-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-lg-6 { flex: 0 0 50%; max-width: 50%; }
  .col-lg-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-lg-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-lg-9 { flex: 0 0 75%; max-width: 75%; }
  .col-lg-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-lg-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-lg-12 { flex: 0 0 100%; max-width: 100%; }
  .order-lg-first { order: -1; }
  .order-lg-last { order: 13; }
  .order-lg-0 { order: 0; }
  .order-lg-1 { order: 1; }
  .order-lg-2 { order: 2; }
  .order-lg-3 { order: 3; }
  .order-lg-4 { order: 4; }
  .order-lg-5 { order: 5; }
  .order-lg-6 { order: 6; }
  .order-lg-7 { order: 7; }
  .order-lg-8 { order: 8; }
  .order-lg-9 { order: 9; }
  .order-lg-10 { order: 10; }
  .order-lg-11 { order: 11; }
  .order-lg-12 { order: 12; }
  .offset-lg-0 { margin-left: 0px; }
  .offset-lg-1 { margin-left: 8.33333%; }
  .offset-lg-2 { margin-left: 16.6667%; }
  .offset-lg-3 { margin-left: 25%; }
  .offset-lg-4 { margin-left: 33.3333%; }
  .offset-lg-5 { margin-left: 41.6667%; }
  .offset-lg-6 { margin-left: 50%; }
  .offset-lg-7 { margin-left: 58.3333%; }
  .offset-lg-8 { margin-left: 66.6667%; }
  .offset-lg-9 { margin-left: 75%; }
  .offset-lg-10 { margin-left: 83.3333%; }
  .offset-lg-11 { margin-left: 91.6667%; }
}

@media (min-width: 1200px) {
  .col-xl { flex-basis: 0px; flex-grow: 1; max-width: 100%; }
  .col-xl-auto { flex: 0 0 auto; width: auto; max-width: 100%; }
  .col-xl-1 { flex: 0 0 8.33333%; max-width: 8.33333%; }
  .col-xl-2 { flex: 0 0 16.6667%; max-width: 16.6667%; }
  .col-xl-3 { flex: 0 0 25%; max-width: 25%; }
  .col-xl-4 { flex: 0 0 33.3333%; max-width: 33.3333%; }
  .col-xl-5 { flex: 0 0 41.6667%; max-width: 41.6667%; }
  .col-xl-6 { flex: 0 0 50%; max-width: 50%; }
  .col-xl-7 { flex: 0 0 58.3333%; max-width: 58.3333%; }
  .col-xl-8 { flex: 0 0 66.6667%; max-width: 66.6667%; }
  .col-xl-9 { flex: 0 0 75%; max-width: 75%; }
  .col-xl-10 { flex: 0 0 83.3333%; max-width: 83.3333%; }
  .col-xl-11 { flex: 0 0 91.6667%; max-width: 91.6667%; }
  .col-xl-12 { flex: 0 0 100%; max-width: 100%; }
  .order-xl-first { order: -1; }
  .order-xl-last { order: 13; }
  .order-xl-0 { order: 0; }
  .order-xl-1 { order: 1; }
  .order-xl-2 { order: 2; }
  .order-xl-3 { order: 3; }
  .order-xl-4 { order: 4; }
  .order-xl-5 { order: 5; }
  .order-xl-6 { order: 6; }
  .order-xl-7 { order: 7; }
  .order-xl-8 { order: 8; }
  .order-xl-9 { order: 9; }
  .order-xl-10 { order: 10; }
  .order-xl-11 { order: 11; }
  .order-xl-12 { order: 12; }
  .offset-xl-0 { margin-left: 0px; }
  .offset-xl-1 { margin-left: 8.33333%; }
  .offset-xl-2 { margin-left: 16.6667%; }
  .offset-xl-3 { margin-left: 25%; }
  .offset-xl-4 { margin-left: 33.3333%; }
  .offset-xl-5 { margin-left: 41.6667%; }
  .offset-xl-6 { margin-left: 50%; }
  .offset-xl-7 { margin-left: 58.3333%; }
  .offset-xl-8 { margin-left: 66.6667%; }
  .offset-xl-9 { margin-left: 75%; }
  .offset-xl-10 { margin-left: 83.3333%; }
  .offset-xl-11 { margin-left: 91.6667%; }
}

.table { width: 100%; margin-bottom: 1rem; color: rgb(33, 37, 41); }

.table td, .table th { padding: 0.75rem; vertical-align: top; border-top: 1=
px solid rgb(222, 226, 230); }

.table thead th { vertical-align: bottom; border-bottom: 2px solid rgb(222,=
 226, 230); }

.table tbody + tbody { border-top: 2px solid rgb(222, 226, 230); }

.table-sm td, .table-sm th { padding: 0.3rem; }

.table-bordered { border: 1px solid rgb(222, 226, 230); }

.table-bordered td, .table-bordered th { border: 1px solid rgb(222, 226, 23=
0); }

.table-bordered thead td, .table-bordered thead th { border-bottom-width: 2=
px; }

.table-borderless tbody + tbody, .table-borderless td, .table-borderless th=
, .table-borderless thead th { border: 0px; }

.table-striped tbody tr:nth-of-type(2n+1) { background-color: rgba(0, 0, 0,=
 0.05); }

.table-hover tbody tr:hover { color: rgb(33, 37, 41); background-color: rgb=
a(0, 0, 0, 0.075); }

.table-primary, .table-primary > td, .table-primary > th { background-color=
: rgb(184, 218, 255); }

.table-primary tbody + tbody, .table-primary td, .table-primary th, .table-=
primary thead th { border-color: rgb(122, 186, 255); }

.table-hover .table-primary:hover { background-color: rgb(159, 205, 255); }

.table-hover .table-primary:hover > td, .table-hover .table-primary:hover >=
 th { background-color: rgb(159, 205, 255); }

.table-secondary, .table-secondary > td, .table-secondary > th { background=
-color: rgb(214, 216, 219); }

.table-secondary tbody + tbody, .table-secondary td, .table-secondary th, .=
table-secondary thead th { border-color: rgb(179, 183, 187); }

.table-hover .table-secondary:hover { background-color: rgb(200, 203, 207);=
 }

.table-hover .table-secondary:hover > td, .table-hover .table-secondary:hov=
er > th { background-color: rgb(200, 203, 207); }

.table-success, .table-success > td, .table-success > th { background-color=
: rgb(195, 230, 203); }

.table-success tbody + tbody, .table-success td, .table-success th, .table-=
success thead th { border-color: rgb(143, 209, 158); }

.table-hover .table-success:hover { background-color: rgb(177, 223, 187); }

.table-hover .table-success:hover > td, .table-hover .table-success:hover >=
 th { background-color: rgb(177, 223, 187); }

.table-info, .table-info > td, .table-info > th { background-color: rgb(190=
, 229, 235); }

.table-info tbody + tbody, .table-info td, .table-info th, .table-info thea=
d th { border-color: rgb(134, 207, 218); }

.table-hover .table-info:hover { background-color: rgb(171, 221, 229); }

.table-hover .table-info:hover > td, .table-hover .table-info:hover > th { =
background-color: rgb(171, 221, 229); }

.table-warning, .table-warning > td, .table-warning > th { background-color=
: rgb(255, 238, 186); }

.table-warning tbody + tbody, .table-warning td, .table-warning th, .table-=
warning thead th { border-color: rgb(255, 223, 126); }

.table-hover .table-warning:hover { background-color: rgb(255, 232, 161); }

.table-hover .table-warning:hover > td, .table-hover .table-warning:hover >=
 th { background-color: rgb(255, 232, 161); }

.table-danger, .table-danger > td, .table-danger > th { background-color: r=
gb(245, 198, 203); }

.table-danger tbody + tbody, .table-danger td, .table-danger th, .table-dan=
ger thead th { border-color: rgb(237, 150, 158); }

.table-hover .table-danger:hover { background-color: rgb(241, 176, 183); }

.table-hover .table-danger:hover > td, .table-hover .table-danger:hover > t=
h { background-color: rgb(241, 176, 183); }

.table-light, .table-light > td, .table-light > th { background-color: rgb(=
253, 253, 254); }

.table-light tbody + tbody, .table-light td, .table-light th, .table-light =
thead th { border-color: rgb(251, 252, 252); }

.table-hover .table-light:hover { background-color: rgb(236, 236, 246); }

.table-hover .table-light:hover > td, .table-hover .table-light:hover > th =
{ background-color: rgb(236, 236, 246); }

.table-dark, .table-dark > td, .table-dark > th { background-color: rgb(198=
, 200, 202); }

.table-dark tbody + tbody, .table-dark td, .table-dark th, .table-dark thea=
d th { border-color: rgb(149, 153, 156); }

.table-hover .table-dark:hover { background-color: rgb(185, 187, 190); }

.table-hover .table-dark:hover > td, .table-hover .table-dark:hover > th { =
background-color: rgb(185, 187, 190); }

.table-active, .table-active > td, .table-active > th { background-color: r=
gba(0, 0, 0, 0.075); }

.table-hover .table-active:hover { background-color: rgba(0, 0, 0, 0.075); =
}

.table-hover .table-active:hover > td, .table-hover .table-active:hover > t=
h { background-color: rgba(0, 0, 0, 0.075); }

.table .thead-dark th { color: rgb(255, 255, 255); background-color: rgb(52=
, 58, 64); border-color: rgb(69, 77, 85); }

.table .thead-light th { color: rgb(73, 80, 87); background-color: rgb(233,=
 236, 239); border-color: rgb(222, 226, 230); }

.table-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64);=
 }

.table-dark td, .table-dark th, .table-dark thead th { border-color: rgb(69=
, 77, 85); }

.table-dark.table-bordered { border: 0px; }

.table-dark.table-striped tbody tr:nth-of-type(2n+1) { background-color: rg=
ba(255, 255, 255, 0.05); }

.table-dark.table-hover tbody tr:hover { color: rgb(255, 255, 255); backgro=
und-color: rgba(255, 255, 255, 0.075); }

@media (max-width: 575.98px) {
  .table-responsive-sm { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-sm > .table-bordered { border: 0px; }
}

@media (max-width: 767.98px) {
  .table-responsive-md { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-md > .table-bordered { border: 0px; }
}

@media (max-width: 991.98px) {
  .table-responsive-lg { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-lg > .table-bordered { border: 0px; }
}

@media (max-width: 1199.98px) {
  .table-responsive-xl { display: block; width: 100%; overflow-x: auto; }
  .table-responsive-xl > .table-bordered { border: 0px; }
}

.table-responsive { display: block; width: 100%; overflow-x: auto; }

.table-responsive > .table-bordered { border: 0px; }

.form-control { display: block; width: 100%; height: calc(1.5em + 0.75rem +=
 2px); padding: 0.375rem 0.75rem; font-size: 1rem; font-weight: 400; line-h=
eight: 1.5; color: rgb(73, 80, 87); background-color: rgb(255, 255, 255); b=
ackground-clip: padding-box; border: 1px solid rgb(206, 212, 218); border-r=
adius: 0.25rem; transition: border-color 0.15s ease-in-out 0s, box-shadow 0=
.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .form-control { transition: none 0s ease 0s; }
}

.form-control:focus { color: rgb(73, 80, 87); background-color: rgb(255, 25=
5, 255); border-color: rgb(128, 189, 255); outline: 0px; box-shadow: rgba(0=
, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.form-control::-webkit-input-placeholder { color: rgb(108, 117, 125); opaci=
ty: 1; }

.form-control::placeholder { color: rgb(108, 117, 125); opacity: 1; }

.form-control:disabled, .form-control[readonly] { background-color: rgb(233=
, 236, 239); opacity: 1; }

.form-control-file, .form-control-range { display: block; width: 100%; }

.col-form-label { padding-top: calc(0.375rem + 1px); padding-bottom: calc(0=
.375rem + 1px); margin-bottom: 0px; font-size: inherit; line-height: 1.5; }

.col-form-label-lg { padding-top: calc(0.5rem + 1px); padding-bottom: calc(=
0.5rem + 1px); font-size: 1.25rem; line-height: 1.5; }

.col-form-label-sm { padding-top: calc(0.25rem + 1px); padding-bottom: calc=
(0.25rem + 1px); font-size: 0.875rem; line-height: 1.5; }

.form-control-plaintext { display: block; width: 100%; padding-top: 0.375re=
m; padding-bottom: 0.375rem; margin-bottom: 0px; line-height: 1.5; color: r=
gb(33, 37, 41); background-color: transparent; border-style: solid; border-=
color: transparent; border-image: initial; border-width: 1px 0px; }

.form-control-plaintext.form-control-lg, .form-control-plaintext.form-contr=
ol-sm { padding-right: 0px; padding-left: 0px; }

.form-control-sm { height: calc(1.5em + 0.5rem + 2px); padding: 0.25rem 0.5=
rem; font-size: 0.875rem; line-height: 1.5; border-radius: 0.2rem; }

.form-control-lg { height: calc(1.5em + 1rem + 2px); padding: 0.5rem 1rem; =
font-size: 1.25rem; line-height: 1.5; border-radius: 0.3rem; }

select.form-control[multiple], select.form-control[size] { height: auto; }

textarea.form-control { height: auto; }

.form-group { margin-bottom: 1rem; }

.form-text { display: block; margin-top: 0.25rem; }

.form-row { display: flex; flex-wrap: wrap; margin-right: -5px; margin-left=
: -5px; }

.form-row > .col, .form-row > [class*=3D"col-"] { padding-right: 5px; paddi=
ng-left: 5px; }

.form-check { position: relative; display: block; padding-left: 1.25rem; }

.form-check-input { position: absolute; margin-top: 0.3rem; margin-left: -1=
.25rem; }

.form-check-input:disabled ~ .form-check-label { color: rgb(108, 117, 125);=
 }

.form-check-label { margin-bottom: 0px; }

.form-check-inline { display: inline-flex; align-items: center; padding-lef=
t: 0px; margin-right: 0.75rem; }

.form-check-inline .form-check-input { position: static; margin-top: 0px; m=
argin-right: 0.3125rem; margin-left: 0px; }

.valid-feedback { display: none; width: 100%; margin-top: 0.25rem; font-siz=
e: 80%; color: rgb(40, 167, 69); }

.valid-tooltip { position: absolute; top: 100%; z-index: 5; display: none; =
max-width: 100%; padding: 0.25rem 0.5rem; margin-top: 0.1rem; font-size: 0.=
875rem; line-height: 1.5; color: rgb(255, 255, 255); background-color: rgba=
(40, 167, 69, 0.9); border-radius: 0.25rem; }

.form-control.is-valid, .was-validated .form-control:valid { border-color: =
rgb(40, 167, 69); padding-right: calc(1.5em + 0.75rem); background-image: u=
rl("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' viewBox=
=3D'0 0 8 8'%3e%3cpath fill=3D'%2328a745' d=3D'M2.3 6.73L.6 4.53c-.4-1.04.4=
6-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z=
'/%3e%3c/svg%3e"); background-repeat: no-repeat; background-position: right=
 calc(0.375em + 0.1875rem) center; background-size: calc(0.75em + 0.375rem)=
 calc(0.75em + 0.375rem); }

.form-control.is-valid:focus, .was-validated .form-control:valid:focus { bo=
rder-color: rgb(40, 167, 69); box-shadow: rgba(40, 167, 69, 0.25) 0px 0px 0=
px 0.2rem; }

.form-control.is-valid ~ .valid-feedback, .form-control.is-valid ~ .valid-t=
ooltip, .was-validated .form-control:valid ~ .valid-feedback, .was-validate=
d .form-control:valid ~ .valid-tooltip { display: block; }

.was-validated textarea.form-control:valid, textarea.form-control.is-valid =
{ padding-right: calc(1.5em + 0.75rem); background-position: right calc(0.3=
75em + 0.1875rem) top calc(0.375em + 0.1875rem); }

.custom-select.is-valid, .was-validated .custom-select:valid { border-color=
: rgb(40, 167, 69); padding-right: calc(((1em + 0.75rem) * 3) / 4 + 1.75rem=
); background: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/20=
00/svg' viewBox=3D'0 0 4 5'%3e%3cpath fill=3D'%23343a40' d=3D'M2 0L0 2h4zm0=
 5L0 3h4z'/%3e%3c/svg%3e") right 0.75rem center / 8px 10px no-repeat, url("=
data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' viewBox=3D'0=
 0 8 8'%3e%3cpath fill=3D'%2328a745' d=3D'M2.3 6.73L.6 4.53c-.4-1.04.46-1.4=
 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e=
%3c/svg%3e") right 1.75rem center / calc(0.75em + 0.375rem) calc(0.75em + 0=
.375rem) no-repeat rgb(255, 255, 255); }

.custom-select.is-valid:focus, .was-validated .custom-select:valid:focus { =
border-color: rgb(40, 167, 69); box-shadow: rgba(40, 167, 69, 0.25) 0px 0px=
 0px 0.2rem; }

.custom-select.is-valid ~ .valid-feedback, .custom-select.is-valid ~ .valid=
-tooltip, .was-validated .custom-select:valid ~ .valid-feedback, .was-valid=
ated .custom-select:valid ~ .valid-tooltip { display: block; }

.form-control-file.is-valid ~ .valid-feedback, .form-control-file.is-valid =
~ .valid-tooltip, .was-validated .form-control-file:valid ~ .valid-feedback=
, .was-validated .form-control-file:valid ~ .valid-tooltip { display: block=
; }

.form-check-input.is-valid ~ .form-check-label, .was-validated .form-check-=
input:valid ~ .form-check-label { color: rgb(40, 167, 69); }

.form-check-input.is-valid ~ .valid-feedback, .form-check-input.is-valid ~ =
.valid-tooltip, .was-validated .form-check-input:valid ~ .valid-feedback, .=
was-validated .form-check-input:valid ~ .valid-tooltip { display: block; }

.custom-control-input.is-valid ~ .custom-control-label, .was-validated .cus=
tom-control-input:valid ~ .custom-control-label { color: rgb(40, 167, 69); =
}

.custom-control-input.is-valid ~ .custom-control-label::before, .was-valida=
ted .custom-control-input:valid ~ .custom-control-label::before { border-co=
lor: rgb(40, 167, 69); }

.custom-control-input.is-valid ~ .valid-feedback, .custom-control-input.is-=
valid ~ .valid-tooltip, .was-validated .custom-control-input:valid ~ .valid=
-feedback, .was-validated .custom-control-input:valid ~ .valid-tooltip { di=
splay: block; }

.custom-control-input.is-valid:checked ~ .custom-control-label::before, .wa=
s-validated .custom-control-input:valid:checked ~ .custom-control-label::be=
fore { border-color: rgb(52, 206, 87); background-color: rgb(52, 206, 87); =
}

.custom-control-input.is-valid:focus ~ .custom-control-label::before, .was-=
validated .custom-control-input:valid:focus ~ .custom-control-label::before=
 { box-shadow: rgba(40, 167, 69, 0.25) 0px 0px 0px 0.2rem; }

.custom-control-input.is-valid:focus:not(:checked) ~ .custom-control-label:=
:before, .was-validated .custom-control-input:valid:focus:not(:checked) ~ .=
custom-control-label::before { border-color: rgb(40, 167, 69); }

.custom-file-input.is-valid ~ .custom-file-label, .was-validated .custom-fi=
le-input:valid ~ .custom-file-label { border-color: rgb(40, 167, 69); }

.custom-file-input.is-valid ~ .valid-feedback, .custom-file-input.is-valid =
~ .valid-tooltip, .was-validated .custom-file-input:valid ~ .valid-feedback=
, .was-validated .custom-file-input:valid ~ .valid-tooltip { display: block=
; }

.custom-file-input.is-valid:focus ~ .custom-file-label, .was-validated .cus=
tom-file-input:valid:focus ~ .custom-file-label { border-color: rgb(40, 167=
, 69); box-shadow: rgba(40, 167, 69, 0.25) 0px 0px 0px 0.2rem; }

.invalid-feedback { display: none; width: 100%; margin-top: 0.25rem; font-s=
ize: 80%; color: rgb(220, 53, 69); }

.invalid-tooltip { position: absolute; top: 100%; z-index: 5; display: none=
; max-width: 100%; padding: 0.25rem 0.5rem; margin-top: 0.1rem; font-size: =
0.875rem; line-height: 1.5; color: rgb(255, 255, 255); background-color: rg=
ba(220, 53, 69, 0.9); border-radius: 0.25rem; }

.form-control.is-invalid, .was-validated .form-control:invalid { border-col=
or: rgb(220, 53, 69); padding-right: calc(1.5em + 0.75rem); background-imag=
e: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' fill=
=3D'%23dc3545' viewBox=3D'-2 -2 7 7'%3e%3cpath stroke=3D'%23dc3545' d=3D'M0=
 0l3 3m0-3L0 3'/%3e%3ccircle r=3D'.5'/%3e%3ccircle cx=3D'3' r=3D'.5'/%3e%3c=
circle cy=3D'3' r=3D'.5'/%3e%3ccircle cx=3D'3' cy=3D'3' r=3D'.5'/%3e%3c/svg=
%3E"); background-repeat: no-repeat; background-position: right calc(0.375e=
m + 0.1875rem) center; background-size: calc(0.75em + 0.375rem) calc(0.75em=
 + 0.375rem); }

.form-control.is-invalid:focus, .was-validated .form-control:invalid:focus =
{ border-color: rgb(220, 53, 69); box-shadow: rgba(220, 53, 69, 0.25) 0px 0=
px 0px 0.2rem; }

.form-control.is-invalid ~ .invalid-feedback, .form-control.is-invalid ~ .i=
nvalid-tooltip, .was-validated .form-control:invalid ~ .invalid-feedback, .=
was-validated .form-control:invalid ~ .invalid-tooltip { display: block; }

.was-validated textarea.form-control:invalid, textarea.form-control.is-inva=
lid { padding-right: calc(1.5em + 0.75rem); background-position: right calc=
(0.375em + 0.1875rem) top calc(0.375em + 0.1875rem); }

.custom-select.is-invalid, .was-validated .custom-select:invalid { border-c=
olor: rgb(220, 53, 69); padding-right: calc(((1em + 0.75rem) * 3) / 4 + 1.7=
5rem); background: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.or=
g/2000/svg' viewBox=3D'0 0 4 5'%3e%3cpath fill=3D'%23343a40' d=3D'M2 0L0 2h=
4zm0 5L0 3h4z'/%3e%3c/svg%3e") right 0.75rem center / 8px 10px no-repeat, u=
rl("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'=
%23dc3545' viewBox=3D'-2 -2 7 7'%3e%3cpath stroke=3D'%23dc3545' d=3D'M0 0l3=
 3m0-3L0 3'/%3e%3ccircle r=3D'.5'/%3e%3ccircle cx=3D'3' r=3D'.5'/%3e%3ccirc=
le cy=3D'3' r=3D'.5'/%3e%3ccircle cx=3D'3' cy=3D'3' r=3D'.5'/%3e%3c/svg%3E"=
) right 1.75rem center / calc(0.75em + 0.375rem) calc(0.75em + 0.375rem) no=
-repeat rgb(255, 255, 255); }

.custom-select.is-invalid:focus, .was-validated .custom-select:invalid:focu=
s { border-color: rgb(220, 53, 69); box-shadow: rgba(220, 53, 69, 0.25) 0px=
 0px 0px 0.2rem; }

.custom-select.is-invalid ~ .invalid-feedback, .custom-select.is-invalid ~ =
.invalid-tooltip, .was-validated .custom-select:invalid ~ .invalid-feedback=
, .was-validated .custom-select:invalid ~ .invalid-tooltip { display: block=
; }

.form-control-file.is-invalid ~ .invalid-feedback, .form-control-file.is-in=
valid ~ .invalid-tooltip, .was-validated .form-control-file:invalid ~ .inva=
lid-feedback, .was-validated .form-control-file:invalid ~ .invalid-tooltip =
{ display: block; }

.form-check-input.is-invalid ~ .form-check-label, .was-validated .form-chec=
k-input:invalid ~ .form-check-label { color: rgb(220, 53, 69); }

.form-check-input.is-invalid ~ .invalid-feedback, .form-check-input.is-inva=
lid ~ .invalid-tooltip, .was-validated .form-check-input:invalid ~ .invalid=
-feedback, .was-validated .form-check-input:invalid ~ .invalid-tooltip { di=
splay: block; }

.custom-control-input.is-invalid ~ .custom-control-label, .was-validated .c=
ustom-control-input:invalid ~ .custom-control-label { color: rgb(220, 53, 6=
9); }

.custom-control-input.is-invalid ~ .custom-control-label::before, .was-vali=
dated .custom-control-input:invalid ~ .custom-control-label::before { borde=
r-color: rgb(220, 53, 69); }

.custom-control-input.is-invalid ~ .invalid-feedback, .custom-control-input=
.is-invalid ~ .invalid-tooltip, .was-validated .custom-control-input:invali=
d ~ .invalid-feedback, .was-validated .custom-control-input:invalid ~ .inva=
lid-tooltip { display: block; }

.custom-control-input.is-invalid:checked ~ .custom-control-label::before, .=
was-validated .custom-control-input:invalid:checked ~ .custom-control-label=
::before { border-color: rgb(228, 96, 109); background-color: rgb(228, 96, =
109); }

.custom-control-input.is-invalid:focus ~ .custom-control-label::before, .wa=
s-validated .custom-control-input:invalid:focus ~ .custom-control-label::be=
fore { box-shadow: rgba(220, 53, 69, 0.25) 0px 0px 0px 0.2rem; }

.custom-control-input.is-invalid:focus:not(:checked) ~ .custom-control-labe=
l::before, .was-validated .custom-control-input:invalid:focus:not(:checked)=
 ~ .custom-control-label::before { border-color: rgb(220, 53, 69); }

.custom-file-input.is-invalid ~ .custom-file-label, .was-validated .custom-=
file-input:invalid ~ .custom-file-label { border-color: rgb(220, 53, 69); }

.custom-file-input.is-invalid ~ .invalid-feedback, .custom-file-input.is-in=
valid ~ .invalid-tooltip, .was-validated .custom-file-input:invalid ~ .inva=
lid-feedback, .was-validated .custom-file-input:invalid ~ .invalid-tooltip =
{ display: block; }

.custom-file-input.is-invalid:focus ~ .custom-file-label, .was-validated .c=
ustom-file-input:invalid:focus ~ .custom-file-label { border-color: rgb(220=
, 53, 69); box-shadow: rgba(220, 53, 69, 0.25) 0px 0px 0px 0.2rem; }

.form-inline { display: flex; flex-flow: row wrap; align-items: center; }

.form-inline .form-check { width: 100%; }

@media (min-width: 576px) {
  .form-inline label { display: flex; align-items: center; justify-content:=
 center; margin-bottom: 0px; }
  .form-inline .form-group { display: flex; flex: 0 0 auto; flex-flow: row =
wrap; align-items: center; margin-bottom: 0px; }
  .form-inline .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .form-inline .form-control-plaintext { display: inline-block; }
  .form-inline .custom-select, .form-inline .input-group { width: auto; }
  .form-inline .form-check { display: flex; align-items: center; justify-co=
ntent: center; width: auto; padding-left: 0px; }
  .form-inline .form-check-input { position: relative; flex-shrink: 0; marg=
in-top: 0px; margin-right: 0.25rem; margin-left: 0px; }
  .form-inline .custom-control { align-items: center; justify-content: cent=
er; }
  .form-inline .custom-control-label { margin-bottom: 0px; }
}

.btn { display: inline-block; font-weight: 400; color: rgb(33, 37, 41); tex=
t-align: center; vertical-align: middle; user-select: none; background-colo=
r: transparent; border: 1px solid transparent; padding: 0.375rem 0.75rem; f=
ont-size: 1rem; line-height: 1.5; border-radius: 0.25rem; transition: color=
 0.15s ease-in-out 0s, background-color 0.15s ease-in-out 0s, border-color =
0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .btn { transition: none 0s ease 0s; }
}

.btn:hover { color: rgb(33, 37, 41); text-decoration: none; }

.btn.focus, .btn:focus { outline: 0px; box-shadow: rgba(0, 123, 255, 0.25) =
0px 0px 0px 0.2rem; }

.btn.disabled, .btn:disabled { opacity: 0.65; }

a.btn.disabled, fieldset:disabled a.btn { pointer-events: none; }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-primary:hover { color: rgb(255, 255, 255); background-color: rgb(0, 10=
5, 217); border-color: rgb(0, 98, 204); }

.btn-primary.focus, .btn-primary:focus { box-shadow: rgba(38, 143, 255, 0.5=
) 0px 0px 0px 0.2rem; }

.btn-primary.disabled, .btn-primary:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-primary:not(:disabled):not(.disabled).active, .btn-primary:not(:disabl=
ed):not(.disabled):active, .show > .btn-primary.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(0, 98, 204); border-color: rgb(0, 9=
2, 191); }

.btn-primary:not(:disabled):not(.disabled).active:focus, .btn-primary:not(:=
disabled):not(.disabled):active:focus, .show > .btn-primary.dropdown-toggle=
:focus { box-shadow: rgba(38, 143, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 117,=
 125); border-color: rgb(108, 117, 125); }

.btn-secondary:hover { color: rgb(255, 255, 255); background-color: rgb(90,=
 98, 104); border-color: rgb(84, 91, 98); }

.btn-secondary.focus, .btn-secondary:focus { box-shadow: rgba(130, 138, 145=
, 0.5) 0px 0px 0px 0.2rem; }

.btn-secondary.disabled, .btn-secondary:disabled { color: rgb(255, 255, 255=
); background-color: rgb(108, 117, 125); border-color: rgb(108, 117, 125); =
}

.btn-secondary:not(:disabled):not(.disabled).active, .btn-secondary:not(:di=
sabled):not(.disabled):active, .show > .btn-secondary.dropdown-toggle { col=
or: rgb(255, 255, 255); background-color: rgb(84, 91, 98); border-color: rg=
b(78, 85, 91); }

.btn-secondary:not(:disabled):not(.disabled).active:focus, .btn-secondary:n=
ot(:disabled):not(.disabled):active:focus, .show > .btn-secondary.dropdown-=
toggle:focus { box-shadow: rgba(130, 138, 145, 0.5) 0px 0px 0px 0.2rem; }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-success:hover { color: rgb(255, 255, 255); background-color: rgb(33, 1=
36, 56); border-color: rgb(30, 126, 52); }

.btn-success.focus, .btn-success:focus { box-shadow: rgba(72, 180, 97, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-success.disabled, .btn-success:disabled { color: rgb(255, 255, 255); b=
ackground-color: rgb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-success:not(:disabled):not(.disabled).active, .btn-success:not(:disabl=
ed):not(.disabled):active, .show > .btn-success.dropdown-toggle { color: rg=
b(255, 255, 255); background-color: rgb(30, 126, 52); border-color: rgb(28,=
 116, 48); }

.btn-success:not(:disabled):not(.disabled).active:focus, .btn-success:not(:=
disabled):not(.disabled):active:focus, .show > .btn-success.dropdown-toggle=
:focus { box-shadow: rgba(72, 180, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184);=
 border-color: rgb(23, 162, 184); }

.btn-info:hover { color: rgb(255, 255, 255); background-color: rgb(19, 132,=
 150); border-color: rgb(17, 122, 139); }

.btn-info.focus, .btn-info:focus { box-shadow: rgba(58, 176, 195, 0.5) 0px =
0px 0px 0.2rem; }

.btn-info.disabled, .btn-info:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-info:not(:disabled):not(.disabled).active, .btn-info:not(:disabled):no=
t(.disabled):active, .show > .btn-info.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(17, 122, 139); border-color: rgb(16, 112, 12=
7); }

.btn-info:not(:disabled):not(.disabled).active:focus, .btn-info:not(:disabl=
ed):not(.disabled):active:focus, .show > .btn-info.dropdown-toggle:focus { =
box-shadow: rgba(58, 176, 195, 0.5) 0px 0px 0px 0.2rem; }

.btn-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-warning:hover { color: rgb(33, 37, 41); background-color: rgb(224, 168=
, 0); border-color: rgb(211, 158, 0); }

.btn-warning.focus, .btn-warning:focus { box-shadow: rgba(222, 170, 12, 0.5=
) 0px 0px 0px 0.2rem; }

.btn-warning.disabled, .btn-warning:disabled { color: rgb(33, 37, 41); back=
ground-color: rgb(255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-warning:not(:disabled):not(.disabled).active, .btn-warning:not(:disabl=
ed):not(.disabled):active, .show > .btn-warning.dropdown-toggle { color: rg=
b(33, 37, 41); background-color: rgb(211, 158, 0); border-color: rgb(198, 1=
49, 0); }

.btn-warning:not(:disabled):not(.disabled).active:focus, .btn-warning:not(:=
disabled):not(.disabled):active:focus, .show > .btn-warning.dropdown-toggle=
:focus { box-shadow: rgba(222, 170, 12, 0.5) 0px 0px 0px 0.2rem; }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69)=
; border-color: rgb(220, 53, 69); }

.btn-danger:hover { color: rgb(255, 255, 255); background-color: rgb(200, 3=
5, 51); border-color: rgb(189, 33, 48); }

.btn-danger.focus, .btn-danger:focus { box-shadow: rgba(225, 83, 97, 0.5) 0=
px 0px 0px 0.2rem; }

.btn-danger.disabled, .btn-danger:disabled { color: rgb(255, 255, 255); bac=
kground-color: rgb(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-danger:not(:disabled):not(.disabled).active, .btn-danger:not(:disabled=
):not(.disabled):active, .show > .btn-danger.dropdown-toggle { color: rgb(2=
55, 255, 255); background-color: rgb(189, 33, 48); border-color: rgb(178, 3=
1, 45); }

.btn-danger:not(:disabled):not(.disabled).active:focus, .btn-danger:not(:di=
sabled):not(.disabled):active:focus, .show > .btn-danger.dropdown-toggle:fo=
cus { box-shadow: rgba(225, 83, 97, 0.5) 0px 0px 0px 0.2rem; }

.btn-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); =
border-color: rgb(248, 249, 250); }

.btn-light:hover { color: rgb(33, 37, 41); background-color: rgb(226, 230, =
234); border-color: rgb(218, 224, 229); }

.btn-light.focus, .btn-light:focus { box-shadow: rgba(216, 217, 219, 0.5) 0=
px 0px 0px 0.2rem; }

.btn-light.disabled, .btn-light:disabled { color: rgb(33, 37, 41); backgrou=
nd-color: rgb(248, 249, 250); border-color: rgb(248, 249, 250); }

.btn-light:not(:disabled):not(.disabled).active, .btn-light:not(:disabled):=
not(.disabled):active, .show > .btn-light.dropdown-toggle { color: rgb(33, =
37, 41); background-color: rgb(218, 224, 229); border-color: rgb(211, 217, =
223); }

.btn-light:not(:disabled):not(.disabled).active:focus, .btn-light:not(:disa=
bled):not(.disabled):active:focus, .show > .btn-light.dropdown-toggle:focus=
 { box-shadow: rgba(216, 217, 219, 0.5) 0px 0px 0px 0.2rem; }

.btn-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); b=
order-color: rgb(52, 58, 64); }

.btn-dark:hover { color: rgb(255, 255, 255); background-color: rgb(35, 39, =
43); border-color: rgb(29, 33, 36); }

.btn-dark.focus, .btn-dark:focus { box-shadow: rgba(82, 88, 93, 0.5) 0px 0p=
x 0px 0.2rem; }

.btn-dark.disabled, .btn-dark:disabled { color: rgb(255, 255, 255); backgro=
und-color: rgb(52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-dark:not(:disabled):not(.disabled).active, .btn-dark:not(:disabled):no=
t(.disabled):active, .show > .btn-dark.dropdown-toggle { color: rgb(255, 25=
5, 255); background-color: rgb(29, 33, 36); border-color: rgb(23, 26, 29); =
}

.btn-dark:not(:disabled):not(.disabled).active:focus, .btn-dark:not(:disabl=
ed):not(.disabled):active:focus, .show > .btn-dark.dropdown-toggle:focus { =
box-shadow: rgba(82, 88, 93, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary { color: rgb(0, 123, 255); border-color: rgb(0, 123, 2=
55); }

.btn-outline-primary:hover { color: rgb(255, 255, 255); background-color: r=
gb(0, 123, 255); border-color: rgb(0, 123, 255); }

.btn-outline-primary.focus, .btn-outline-primary:focus { box-shadow: rgba(0=
, 123, 255, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-primary.disabled, .btn-outline-primary:disabled { color: rgb(0=
, 123, 255); background-color: transparent; }

.btn-outline-primary:not(:disabled):not(.disabled).active, .btn-outline-pri=
mary:not(:disabled):not(.disabled):active, .show > .btn-outline-primary.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(0, 123, 255=
); border-color: rgb(0, 123, 255); }

.btn-outline-primary:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-primary:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-primary.dropdown-toggle:focus { box-shadow: rgba(0, 123, 255, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-secondary { color: rgb(108, 117, 125); border-color: rgb(108, =
117, 125); }

.btn-outline-secondary:hover { color: rgb(255, 255, 255); background-color:=
 rgb(108, 117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary.focus, .btn-outline-secondary:focus { box-shadow: rg=
ba(108, 117, 125, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-secondary.disabled, .btn-outline-secondary:disabled { color: r=
gb(108, 117, 125); background-color: transparent; }

.btn-outline-secondary:not(:disabled):not(.disabled).active, .btn-outline-s=
econdary:not(:disabled):not(.disabled):active, .show > .btn-outline-seconda=
ry.dropdown-toggle { color: rgb(255, 255, 255); background-color: rgb(108, =
117, 125); border-color: rgb(108, 117, 125); }

.btn-outline-secondary:not(:disabled):not(.disabled).active:focus, .btn-out=
line-secondary:not(:disabled):not(.disabled):active:focus, .show > .btn-out=
line-secondary.dropdown-toggle:focus { box-shadow: rgba(108, 117, 125, 0.5)=
 0px 0px 0px 0.2rem; }

.btn-outline-success { color: rgb(40, 167, 69); border-color: rgb(40, 167, =
69); }

.btn-outline-success:hover { color: rgb(255, 255, 255); background-color: r=
gb(40, 167, 69); border-color: rgb(40, 167, 69); }

.btn-outline-success.focus, .btn-outline-success:focus { box-shadow: rgba(4=
0, 167, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-success.disabled, .btn-outline-success:disabled { color: rgb(4=
0, 167, 69); background-color: transparent; }

.btn-outline-success:not(:disabled):not(.disabled).active, .btn-outline-suc=
cess:not(:disabled):not(.disabled):active, .show > .btn-outline-success.dro=
pdown-toggle { color: rgb(255, 255, 255); background-color: rgb(40, 167, 69=
); border-color: rgb(40, 167, 69); }

.btn-outline-success:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-success:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-success.dropdown-toggle:focus { box-shadow: rgba(40, 167, 69, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-info { color: rgb(23, 162, 184); border-color: rgb(23, 162, 18=
4); }

.btn-outline-info:hover { color: rgb(255, 255, 255); background-color: rgb(=
23, 162, 184); border-color: rgb(23, 162, 184); }

.btn-outline-info.focus, .btn-outline-info:focus { box-shadow: rgba(23, 162=
, 184, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-info.disabled, .btn-outline-info:disabled { color: rgb(23, 162=
, 184); background-color: transparent; }

.btn-outline-info:not(:disabled):not(.disabled).active, .btn-outline-info:n=
ot(:disabled):not(.disabled):active, .show > .btn-outline-info.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184); borde=
r-color: rgb(23, 162, 184); }

.btn-outline-info:not(:disabled):not(.disabled).active:focus, .btn-outline-=
info:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-info.=
dropdown-toggle:focus { box-shadow: rgba(23, 162, 184, 0.5) 0px 0px 0px 0.2=
rem; }

.btn-outline-warning { color: rgb(255, 193, 7); border-color: rgb(255, 193,=
 7); }

.btn-outline-warning:hover { color: rgb(33, 37, 41); background-color: rgb(=
255, 193, 7); border-color: rgb(255, 193, 7); }

.btn-outline-warning.focus, .btn-outline-warning:focus { box-shadow: rgba(2=
55, 193, 7, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-warning.disabled, .btn-outline-warning:disabled { color: rgb(2=
55, 193, 7); background-color: transparent; }

.btn-outline-warning:not(:disabled):not(.disabled).active, .btn-outline-war=
ning:not(:disabled):not(.disabled):active, .show > .btn-outline-warning.dro=
pdown-toggle { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7); =
border-color: rgb(255, 193, 7); }

.btn-outline-warning:not(:disabled):not(.disabled).active:focus, .btn-outli=
ne-warning:not(:disabled):not(.disabled):active:focus, .show > .btn-outline=
-warning.dropdown-toggle:focus { box-shadow: rgba(255, 193, 7, 0.5) 0px 0px=
 0px 0.2rem; }

.btn-outline-danger { color: rgb(220, 53, 69); border-color: rgb(220, 53, 6=
9); }

.btn-outline-danger:hover { color: rgb(255, 255, 255); background-color: rg=
b(220, 53, 69); border-color: rgb(220, 53, 69); }

.btn-outline-danger.focus, .btn-outline-danger:focus { box-shadow: rgba(220=
, 53, 69, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-danger.disabled, .btn-outline-danger:disabled { color: rgb(220=
, 53, 69); background-color: transparent; }

.btn-outline-danger:not(:disabled):not(.disabled).active, .btn-outline-dang=
er:not(:disabled):not(.disabled):active, .show > .btn-outline-danger.dropdo=
wn-toggle { color: rgb(255, 255, 255); background-color: rgb(220, 53, 69); =
border-color: rgb(220, 53, 69); }

.btn-outline-danger:not(:disabled):not(.disabled).active:focus, .btn-outlin=
e-danger:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-d=
anger.dropdown-toggle:focus { box-shadow: rgba(220, 53, 69, 0.5) 0px 0px 0p=
x 0.2rem; }

.btn-outline-light { color: rgb(248, 249, 250); border-color: rgb(248, 249,=
 250); }

.btn-outline-light:hover { color: rgb(33, 37, 41); background-color: rgb(24=
8, 249, 250); border-color: rgb(248, 249, 250); }

.btn-outline-light.focus, .btn-outline-light:focus { box-shadow: rgba(248, =
249, 250, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-light.disabled, .btn-outline-light:disabled { color: rgb(248, =
249, 250); background-color: transparent; }

.btn-outline-light:not(:disabled):not(.disabled).active, .btn-outline-light=
:not(:disabled):not(.disabled):active, .show > .btn-outline-light.dropdown-=
toggle { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250); bord=
er-color: rgb(248, 249, 250); }

.btn-outline-light:not(:disabled):not(.disabled).active:focus, .btn-outline=
-light:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-lig=
ht.dropdown-toggle:focus { box-shadow: rgba(248, 249, 250, 0.5) 0px 0px 0px=
 0.2rem; }

.btn-outline-dark { color: rgb(52, 58, 64); border-color: rgb(52, 58, 64); =
}

.btn-outline-dark:hover { color: rgb(255, 255, 255); background-color: rgb(=
52, 58, 64); border-color: rgb(52, 58, 64); }

.btn-outline-dark.focus, .btn-outline-dark:focus { box-shadow: rgba(52, 58,=
 64, 0.5) 0px 0px 0px 0.2rem; }

.btn-outline-dark.disabled, .btn-outline-dark:disabled { color: rgb(52, 58,=
 64); background-color: transparent; }

.btn-outline-dark:not(:disabled):not(.disabled).active, .btn-outline-dark:n=
ot(:disabled):not(.disabled):active, .show > .btn-outline-dark.dropdown-tog=
gle { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64); border-=
color: rgb(52, 58, 64); }

.btn-outline-dark:not(:disabled):not(.disabled).active:focus, .btn-outline-=
dark:not(:disabled):not(.disabled):active:focus, .show > .btn-outline-dark.=
dropdown-toggle:focus { box-shadow: rgba(52, 58, 64, 0.5) 0px 0px 0px 0.2re=
m; }

.btn-link { font-weight: 400; color: rgb(0, 123, 255); text-decoration: non=
e; }

.btn-link:hover { color: rgb(0, 86, 179); text-decoration: underline; }

.btn-link.focus, .btn-link:focus { text-decoration: underline; box-shadow: =
none; }

.btn-link.disabled, .btn-link:disabled { color: rgb(108, 117, 125); pointer=
-events: none; }

.btn-group-lg > .btn, .btn-lg { padding: 0.5rem 1rem; font-size: 1.25rem; l=
ine-height: 1.5; border-radius: 0.3rem; }

.btn-group-sm > .btn, .btn-sm { padding: 0.25rem 0.5rem; font-size: 0.875re=
m; line-height: 1.5; border-radius: 0.2rem; }

.btn-block { display: block; width: 100%; }

.btn-block + .btn-block { margin-top: 0.5rem; }

input[type=3D"button"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"submit"].btn-block { width: 100%; }

.fade { transition: opacity 0.15s linear 0s; }

@media (prefers-reduced-motion: reduce) {
  .fade { transition: none 0s ease 0s; }
}

.fade:not(.show) { opacity: 0; }

.collapse:not(.show) { display: none; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
: height 0.35s ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .collapsing { transition: none 0s ease 0s; }
}

.dropdown, .dropleft, .dropright, .dropup { position: relative; }

.dropdown-toggle { white-space: nowrap; }

.dropdown-toggle::after { display: inline-block; margin-left: 0.255em; vert=
ical-align: 0.255em; content: ""; border-width: 0.3em 0.3em 0px; border-top=
-style: solid; border-top-color: initial; border-right-style: solid; border=
-right-color: transparent; border-bottom-style: initial; border-bottom-colo=
r: initial; border-left-style: solid; border-left-color: transparent; }

.dropdown-toggle:empty::after { margin-left: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 10rem; padding: 0.5rem 0px; margin: 0=
.125rem 0px 0px; font-size: 1rem; color: rgb(33, 37, 41); text-align: left;=
 list-style: none; background-color: rgb(255, 255, 255); background-clip: p=
adding-box; border: 1px solid rgba(0, 0, 0, 0.15); border-radius: 0.25rem; =
}

.dropdown-menu-left { right: auto; left: 0px; }

.dropdown-menu-right { right: 0px; left: auto; }

@media (min-width: 576px) {
  .dropdown-menu-sm-left { right: auto; left: 0px; }
  .dropdown-menu-sm-right { right: 0px; left: auto; }
}

@media (min-width: 768px) {
  .dropdown-menu-md-left { right: auto; left: 0px; }
  .dropdown-menu-md-right { right: 0px; left: auto; }
}

@media (min-width: 992px) {
  .dropdown-menu-lg-left { right: auto; left: 0px; }
  .dropdown-menu-lg-right { right: 0px; left: auto; }
}

@media (min-width: 1200px) {
  .dropdown-menu-xl-left { right: auto; left: 0px; }
  .dropdown-menu-xl-right { right: 0px; left: auto; }
}

.dropup .dropdown-menu { top: auto; bottom: 100%; margin-top: 0px; margin-b=
ottom: 0.125rem; }

.dropup .dropdown-toggle::after { display: inline-block; margin-left: 0.255=
em; vertical-align: 0.255em; content: ""; border-width: 0px 0.3em 0.3em; bo=
rder-top-style: initial; border-top-color: initial; border-right-style: sol=
id; border-right-color: transparent; border-bottom-style: solid; border-bot=
tom-color: initial; border-left-style: solid; border-left-color: transparen=
t; }

.dropup .dropdown-toggle:empty::after { margin-left: 0px; }

.dropright .dropdown-menu { top: 0px; right: auto; left: 100%; margin-top: =
0px; margin-left: 0.125rem; }

.dropright .dropdown-toggle::after { display: inline-block; margin-left: 0.=
255em; vertical-align: 0.255em; content: ""; border-width: 0.3em 0px 0.3em =
0.3em; border-top-style: solid; border-top-color: transparent; border-right=
-style: initial; border-right-color: initial; border-bottom-style: solid; b=
order-bottom-color: transparent; border-left-style: solid; border-left-colo=
r: initial; }

.dropright .dropdown-toggle:empty::after { margin-left: 0px; }

.dropright .dropdown-toggle::after { vertical-align: 0px; }

.dropleft .dropdown-menu { top: 0px; right: 100%; left: auto; margin-top: 0=
px; margin-right: 0.125rem; }

.dropleft .dropdown-toggle::after { display: inline-block; margin-left: 0.2=
55em; vertical-align: 0.255em; content: ""; }

.dropleft .dropdown-toggle::after { display: none; }

.dropleft .dropdown-toggle::before { display: inline-block; margin-right: 0=
.255em; vertical-align: 0.255em; content: ""; border-top: 0.3em solid trans=
parent; border-right: 0.3em solid; border-bottom: 0.3em solid transparent; =
}

.dropleft .dropdown-toggle:empty::after { margin-left: 0px; }

.dropleft .dropdown-toggle::before { vertical-align: 0px; }

.dropdown-menu[x-placement^=3D"bottom"], .dropdown-menu[x-placement^=3D"lef=
t"], .dropdown-menu[x-placement^=3D"right"], .dropdown-menu[x-placement^=3D=
"top"] { right: auto; bottom: auto; }

.dropdown-divider { height: 0px; margin: 0.5rem 0px; overflow: hidden; bord=
er-top: 1px solid rgb(233, 236, 239); }

.dropdown-item { display: block; width: 100%; padding: 0.25rem 1.5rem; clea=
r: both; font-weight: 400; color: rgb(33, 37, 41); text-align: inherit; whi=
te-space: nowrap; background-color: transparent; border: 0px; }

.dropdown-item:focus, .dropdown-item:hover { color: rgb(22, 24, 27); text-d=
ecoration: none; background-color: rgb(248, 249, 250); }

.dropdown-item.active, .dropdown-item:active { color: rgb(255, 255, 255); t=
ext-decoration: none; background-color: rgb(0, 123, 255); }

.dropdown-item.disabled, .dropdown-item:disabled { color: rgb(108, 117, 125=
); pointer-events: none; background-color: transparent; }

.dropdown-menu.show { display: block; }

.dropdown-header { display: block; padding: 0.5rem 1.5rem; margin-bottom: 0=
px; font-size: 0.875rem; color: rgb(108, 117, 125); white-space: nowrap; }

.dropdown-item-text { display: block; padding: 0.25rem 1.5rem; color: rgb(3=
3, 37, 41); }

.btn-group, .btn-group-vertical { position: relative; display: inline-flex;=
 vertical-align: middle; }

.btn-group-vertical > .btn, .btn-group > .btn { position: relative; flex: 1=
 1 auto; }

.btn-group-vertical > .btn:hover, .btn-group > .btn:hover { z-index: 1; }

.btn-group-vertical > .btn.active, .btn-group-vertical > .btn:active, .btn-=
group-vertical > .btn:focus, .btn-group > .btn.active, .btn-group > .btn:ac=
tive, .btn-group > .btn:focus { z-index: 1; }

.btn-toolbar { display: flex; flex-wrap: wrap; justify-content: flex-start;=
 }

.btn-toolbar .input-group { width: auto; }

.btn-group > .btn-group:not(:first-child), .btn-group > .btn:not(:first-chi=
ld) { margin-left: -1px; }

.btn-group > .btn-group:not(:last-child) > .btn, .btn-group > .btn:not(:las=
t-child):not(.dropdown-toggle) { border-top-right-radius: 0px; border-botto=
m-right-radius: 0px; }

.btn-group > .btn-group:not(:first-child) > .btn, .btn-group > .btn:not(:fi=
rst-child) { border-top-left-radius: 0px; border-bottom-left-radius: 0px; }

.dropdown-toggle-split { padding-right: 0.5625rem; padding-left: 0.5625rem;=
 }

.dropdown-toggle-split::after, .dropright .dropdown-toggle-split::after, .d=
ropup .dropdown-toggle-split::after { margin-left: 0px; }

.dropleft .dropdown-toggle-split::before { margin-right: 0px; }

.btn-group-sm > .btn + .dropdown-toggle-split, .btn-sm + .dropdown-toggle-s=
plit { padding-right: 0.375rem; padding-left: 0.375rem; }

.btn-group-lg > .btn + .dropdown-toggle-split, .btn-lg + .dropdown-toggle-s=
plit { padding-right: 0.75rem; padding-left: 0.75rem; }

.btn-group-vertical { flex-direction: column; align-items: flex-start; just=
ify-content: center; }

.btn-group-vertical > .btn, .btn-group-vertical > .btn-group { width: 100%;=
 }

.btn-group-vertical > .btn-group:not(:first-child), .btn-group-vertical > .=
btn:not(:first-child) { margin-top: -1px; }

.btn-group-vertical > .btn-group:not(:last-child) > .btn, .btn-group-vertic=
al > .btn:not(:last-child):not(.dropdown-toggle) { border-bottom-right-radi=
us: 0px; border-bottom-left-radius: 0px; }

.btn-group-vertical > .btn-group:not(:first-child) > .btn, .btn-group-verti=
cal > .btn:not(:first-child) { border-top-left-radius: 0px; border-top-righ=
t-radius: 0px; }

.btn-group-toggle > .btn, .btn-group-toggle > .btn-group > .btn { margin-bo=
ttom: 0px; }

.btn-group-toggle > .btn input[type=3D"checkbox"], .btn-group-toggle > .btn=
 input[type=3D"radio"], .btn-group-toggle > .btn-group > .btn input[type=3D=
"checkbox"], .btn-group-toggle > .btn-group > .btn input[type=3D"radio"] { =
position: absolute; clip: rect(0px, 0px, 0px, 0px); pointer-events: none; }

.input-group { position: relative; display: flex; flex-wrap: wrap; align-it=
ems: stretch; width: 100%; }

.input-group > .custom-file, .input-group > .custom-select, .input-group > =
.form-control, .input-group > .form-control-plaintext { position: relative;=
 flex: 1 1 auto; width: 1%; margin-bottom: 0px; }

.input-group > .custom-file + .custom-file, .input-group > .custom-file + .=
custom-select, .input-group > .custom-file + .form-control, .input-group > =
.custom-select + .custom-file, .input-group > .custom-select + .custom-sele=
ct, .input-group > .custom-select + .form-control, .input-group > .form-con=
trol + .custom-file, .input-group > .form-control + .custom-select, .input-=
group > .form-control + .form-control, .input-group > .form-control-plainte=
xt + .custom-file, .input-group > .form-control-plaintext + .custom-select,=
 .input-group > .form-control-plaintext + .form-control { margin-left: -1px=
; }

.input-group > .custom-file .custom-file-input:focus ~ .custom-file-label, =
.input-group > .custom-select:focus, .input-group > .form-control:focus { z=
-index: 3; }

.input-group > .custom-file .custom-file-input:focus { z-index: 4; }

.input-group > .custom-select:not(:last-child), .input-group > .form-contro=
l:not(:last-child) { border-top-right-radius: 0px; border-bottom-right-radi=
us: 0px; }

.input-group > .custom-select:not(:first-child), .input-group > .form-contr=
ol:not(:first-child) { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.input-group > .custom-file { display: flex; align-items: center; }

.input-group > .custom-file:not(:last-child) .custom-file-label, .input-gro=
up > .custom-file:not(:last-child) .custom-file-label::after { border-top-r=
ight-radius: 0px; border-bottom-right-radius: 0px; }

.input-group > .custom-file:not(:first-child) .custom-file-label { border-t=
op-left-radius: 0px; border-bottom-left-radius: 0px; }

.input-group-append, .input-group-prepend { display: flex; }

.input-group-append .btn, .input-group-prepend .btn { position: relative; z=
-index: 2; }

.input-group-append .btn:focus, .input-group-prepend .btn:focus { z-index: =
3; }

.input-group-append .btn + .btn, .input-group-append .btn + .input-group-te=
xt, .input-group-append .input-group-text + .btn, .input-group-append .inpu=
t-group-text + .input-group-text, .input-group-prepend .btn + .btn, .input-=
group-prepend .btn + .input-group-text, .input-group-prepend .input-group-t=
ext + .btn, .input-group-prepend .input-group-text + .input-group-text { ma=
rgin-left: -1px; }

.input-group-prepend { margin-right: -1px; }

.input-group-append { margin-left: -1px; }

.input-group-text { display: flex; align-items: center; padding: 0.375rem 0=
.75rem; margin-bottom: 0px; font-size: 1rem; font-weight: 400; line-height:=
 1.5; color: rgb(73, 80, 87); text-align: center; white-space: nowrap; back=
ground-color: rgb(233, 236, 239); border: 1px solid rgb(206, 212, 218); bor=
der-radius: 0.25rem; }

.input-group-text input[type=3D"checkbox"], .input-group-text input[type=3D=
"radio"] { margin-top: 0px; }

.input-group-lg > .custom-select, .input-group-lg > .form-control:not(texta=
rea) { height: calc(1.5em + 1rem + 2px); }

.input-group-lg > .custom-select, .input-group-lg > .form-control, .input-g=
roup-lg > .input-group-append > .btn, .input-group-lg > .input-group-append=
 > .input-group-text, .input-group-lg > .input-group-prepend > .btn, .input=
-group-lg > .input-group-prepend > .input-group-text { padding: 0.5rem 1rem=
; font-size: 1.25rem; line-height: 1.5; border-radius: 0.3rem; }

.input-group-sm > .custom-select, .input-group-sm > .form-control:not(texta=
rea) { height: calc(1.5em + 0.5rem + 2px); }

.input-group-sm > .custom-select, .input-group-sm > .form-control, .input-g=
roup-sm > .input-group-append > .btn, .input-group-sm > .input-group-append=
 > .input-group-text, .input-group-sm > .input-group-prepend > .btn, .input=
-group-sm > .input-group-prepend > .input-group-text { padding: 0.25rem 0.5=
rem; font-size: 0.875rem; line-height: 1.5; border-radius: 0.2rem; }

.input-group-lg > .custom-select, .input-group-sm > .custom-select { paddin=
g-right: 1.75rem; }

.input-group > .input-group-append:last-child > .btn:not(:last-child):not(.=
dropdown-toggle), .input-group > .input-group-append:last-child > .input-gr=
oup-text:not(:last-child), .input-group > .input-group-append:not(:last-chi=
ld) > .btn, .input-group > .input-group-append:not(:last-child) > .input-gr=
oup-text, .input-group > .input-group-prepend > .btn, .input-group > .input=
-group-prepend > .input-group-text { border-top-right-radius: 0px; border-b=
ottom-right-radius: 0px; }

.input-group > .input-group-append > .btn, .input-group > .input-group-appe=
nd > .input-group-text, .input-group > .input-group-prepend:first-child > .=
btn:not(:first-child), .input-group > .input-group-prepend:first-child > .i=
nput-group-text:not(:first-child), .input-group > .input-group-prepend:not(=
:first-child) > .btn, .input-group > .input-group-prepend:not(:first-child)=
 > .input-group-text { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.custom-control { position: relative; display: block; min-height: 1.5rem; p=
adding-left: 1.5rem; }

.custom-control-inline { display: inline-flex; margin-right: 1rem; }

.custom-control-input { position: absolute; z-index: -1; opacity: 0; }

.custom-control-input:checked ~ .custom-control-label::before { color: rgb(=
255, 255, 255); border-color: rgb(0, 123, 255); background-color: rgb(0, 12=
3, 255); }

.custom-control-input:focus ~ .custom-control-label::before { box-shadow: r=
gba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-control-input:focus:not(:checked) ~ .custom-control-label::before {=
 border-color: rgb(128, 189, 255); }

.custom-control-input:not(:disabled):active ~ .custom-control-label::before=
 { color: rgb(255, 255, 255); background-color: rgb(179, 215, 255); border-=
color: rgb(179, 215, 255); }

.custom-control-input:disabled ~ .custom-control-label { color: rgb(108, 11=
7, 125); }

.custom-control-input:disabled ~ .custom-control-label::before { background=
-color: rgb(233, 236, 239); }

.custom-control-label { position: relative; margin-bottom: 0px; vertical-al=
ign: top; }

.custom-control-label::before { position: absolute; top: 0.25rem; left: -1.=
5rem; display: block; width: 1rem; height: 1rem; pointer-events: none; cont=
ent: ""; background-color: rgb(255, 255, 255); border: 1px solid rgb(173, 1=
81, 189); }

.custom-control-label::after { position: absolute; top: 0.25rem; left: -1.5=
rem; display: block; width: 1rem; height: 1rem; content: ""; background: 50=
% center / 50% 50% no-repeat; }

.custom-checkbox .custom-control-label::before { border-radius: 0.25rem; }

.custom-checkbox .custom-control-input:checked ~ .custom-control-label::aft=
er { background-image: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w=
3.org/2000/svg' viewBox=3D'0 0 8 8'%3e%3cpath fill=3D'%23fff' d=3D'M6.564.7=
5l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e"); }

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-labe=
l::before { border-color: rgb(0, 123, 255); background-color: rgb(0, 123, 2=
55); }

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-labe=
l::after { background-image: url("data:image/svg+xml,%3csvg xmlns=3D'http:/=
/www.w3.org/2000/svg' viewBox=3D'0 0 4 4'%3e%3cpath stroke=3D'%23fff' d=3D'=
M0 2h4'/%3e%3c/svg%3e"); }

.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-l=
abel::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-con=
trol-label::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-radio .custom-control-label::before { border-radius: 50%; }

.custom-radio .custom-control-input:checked ~ .custom-control-label::after =
{ background-image: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3.o=
rg/2000/svg' viewBox=3D'-4 -4 8 8'%3e%3ccircle r=3D'3' fill=3D'%23fff'/%3e%=
3c/svg%3e"); }

.custom-radio .custom-control-input:disabled:checked ~ .custom-control-labe=
l::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-switch { padding-left: 2.25rem; }

.custom-switch .custom-control-label::before { left: -2.25rem; width: 1.75r=
em; pointer-events: all; border-radius: 0.5rem; }

.custom-switch .custom-control-label::after { top: calc(0.25rem + 2px); lef=
t: calc(-2.25rem + 2px); width: calc(1rem - 4px); height: calc(1rem - 4px);=
 background-color: rgb(173, 181, 189); border-radius: 0.5rem; transition: t=
ransform 0.15s ease-in-out 0s, background-color 0.15s ease-in-out 0s, borde=
r-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s, -webkit-tran=
sform 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .custom-switch .custom-control-label::after { transition: none 0s ease 0s=
; }
}

.custom-switch .custom-control-input:checked ~ .custom-control-label::after=
 { background-color: rgb(255, 255, 255); transform: translateX(0.75rem); }

.custom-switch .custom-control-input:disabled:checked ~ .custom-control-lab=
el::before { background-color: rgba(0, 123, 255, 0.5); }

.custom-select { display: inline-block; width: 100%; height: calc(1.5em + 0=
.75rem + 2px); padding: 0.375rem 1.75rem 0.375rem 0.75rem; font-size: 1rem;=
 font-weight: 400; line-height: 1.5; color: rgb(73, 80, 87); vertical-align=
: middle; background: url("data:image/svg+xml,%3csvg xmlns=3D'http://www.w3=
.org/2000/svg' viewBox=3D'0 0 4 5'%3e%3cpath fill=3D'%23343a40' d=3D'M2 0L0=
 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") right 0.75rem center / 8px 10px no-repeat=
 rgb(255, 255, 255); border: 1px solid rgb(206, 212, 218); border-radius: 0=
.25rem; appearance: none; }

.custom-select:focus { border-color: rgb(128, 189, 255); outline: 0px; box-=
shadow: rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-select[multiple], .custom-select[size]:not([size=3D"1"]) { height: =
auto; padding-right: 0.75rem; background-image: none; }

.custom-select:disabled { color: rgb(108, 117, 125); background-color: rgb(=
233, 236, 239); }

.custom-select-sm { height: calc(1.5em + 0.5rem + 2px); padding-top: 0.25re=
m; padding-bottom: 0.25rem; padding-left: 0.5rem; font-size: 0.875rem; }

.custom-select-lg { height: calc(1.5em + 1rem + 2px); padding-top: 0.5rem; =
padding-bottom: 0.5rem; padding-left: 1rem; font-size: 1.25rem; }

.custom-file { position: relative; display: inline-block; width: 100%; heig=
ht: calc(1.5em + 0.75rem + 2px); margin-bottom: 0px; }

.custom-file-input { position: relative; z-index: 2; width: 100%; height: c=
alc(1.5em + 0.75rem + 2px); margin: 0px; opacity: 0; }

.custom-file-input:focus ~ .custom-file-label { border-color: rgb(128, 189,=
 255); box-shadow: rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-file-input:disabled ~ .custom-file-label { background-color: rgb(23=
3, 236, 239); }

.custom-file-input:lang(en) ~ .custom-file-label::after { content: "Browse"=
; }

.custom-file-input ~ .custom-file-label[data-browse]::after { content: attr=
(data-browse); }

.custom-file-label { position: absolute; top: 0px; right: 0px; left: 0px; z=
-index: 1; height: calc(1.5em + 0.75rem + 2px); padding: 0.375rem 0.75rem; =
font-weight: 400; line-height: 1.5; color: rgb(73, 80, 87); background-colo=
r: rgb(255, 255, 255); border: 1px solid rgb(206, 212, 218); border-radius:=
 0.25rem; }

.custom-file-label::after { position: absolute; top: 0px; right: 0px; botto=
m: 0px; z-index: 3; display: block; height: calc(1.5em + 0.75rem); padding:=
 0.375rem 0.75rem; line-height: 1.5; color: rgb(73, 80, 87); content: "Brow=
se"; background-color: rgb(233, 236, 239); border-left: inherit; border-rad=
ius: 0px 0.25rem 0.25rem 0px; }

.custom-range { width: 100%; height: calc(1.4rem); padding: 0px; background=
-color: transparent; appearance: none; }

.custom-range:focus { outline: 0px; }

.custom-range:focus::-webkit-slider-thumb { box-shadow: rgb(255, 255, 255) =
0px 0px 0px 1px, rgba(0, 123, 255, 0.25) 0px 0px 0px 0.2rem; }

.custom-range::-webkit-slider-thumb { width: 1rem; height: 1rem; margin-top=
: -0.25rem; background-color: rgb(0, 123, 255); border: 0px; border-radius:=
 1rem; transition: background-color 0.15s ease-in-out 0s, border-color 0.15=
s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s; appearance: none; }

@media (prefers-reduced-motion: reduce) {
  .custom-range::-webkit-slider-thumb { transition: none 0s ease 0s; }
}

.custom-range::-webkit-slider-thumb:active { background-color: rgb(179, 215=
, 255); }

.custom-range::-webkit-slider-runnable-track { width: 100%; height: 0.5rem;=
 color: transparent; cursor: pointer; background-color: rgb(222, 226, 230);=
 border-color: transparent; border-radius: 1rem; }

@media (prefers-reduced-motion: reduce) {
}

@media (prefers-reduced-motion: reduce) {
}

.custom-range:disabled::-webkit-slider-thumb { background-color: rgb(173, 1=
81, 189); }

.custom-range:disabled::-webkit-slider-runnable-track { cursor: default; }

.custom-control-label::before, .custom-file-label, .custom-select { transit=
ion: background-color 0.15s ease-in-out 0s, border-color 0.15s ease-in-out =
0s, box-shadow 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .custom-control-label::before, .custom-file-label, .custom-select { trans=
ition: none 0s ease 0s; }
}

.nav { display: flex; flex-wrap: wrap; padding-left: 0px; margin-bottom: 0p=
x; list-style: none; }

.nav-link { display: block; padding: 0.5rem 1rem; }

.nav-link:focus, .nav-link:hover { text-decoration: none; }

.nav-link.disabled { color: rgb(108, 117, 125); pointer-events: none; curso=
r: default; }

.nav-tabs { border-bottom: 1px solid rgb(222, 226, 230); }

.nav-tabs .nav-item { margin-bottom: -1px; }

.nav-tabs .nav-link { border: 1px solid transparent; border-top-left-radius=
: 0.25rem; border-top-right-radius: 0.25rem; }

.nav-tabs .nav-link:focus, .nav-tabs .nav-link:hover { border-color: rgb(23=
3, 236, 239) rgb(233, 236, 239) rgb(222, 226, 230); }

.nav-tabs .nav-link.disabled { color: rgb(108, 117, 125); background-color:=
 transparent; border-color: transparent; }

.nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active { color: rgb=
(73, 80, 87); background-color: rgb(255, 255, 255); border-color: rgb(222, =
226, 230) rgb(222, 226, 230) rgb(255, 255, 255); }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-left-radius: 0px; b=
order-top-right-radius: 0px; }

.nav-pills .nav-link { border-radius: 0.25rem; }

.nav-pills .nav-link.active, .nav-pills .show > .nav-link { color: rgb(255,=
 255, 255); background-color: rgb(0, 123, 255); }

.nav-fill .nav-item { flex: 1 1 auto; text-align: center; }

.nav-justified .nav-item { flex-basis: 0px; flex-grow: 1; text-align: cente=
r; }

.tab-content > .tab-pane { display: none; }

.tab-content > .active { display: block; }

.navbar { position: relative; display: flex; flex-wrap: wrap; align-items: =
center; justify-content: space-between; padding: 0.5rem 1rem; }

.navbar > .container, .navbar > .container-fluid { display: flex; flex-wrap=
: wrap; align-items: center; justify-content: space-between; }

.navbar-brand { display: inline-block; padding-top: 0.3125rem; padding-bott=
om: 0.3125rem; margin-right: 1rem; font-size: 1.25rem; line-height: inherit=
; white-space: nowrap; }

.navbar-brand:focus, .navbar-brand:hover { text-decoration: none; }

.navbar-nav { display: flex; flex-direction: column; padding-left: 0px; mar=
gin-bottom: 0px; list-style: none; }

.navbar-nav .nav-link { padding-right: 0px; padding-left: 0px; }

.navbar-nav .dropdown-menu { position: static; float: none; }

.navbar-text { display: inline-block; padding-top: 0.5rem; padding-bottom: =
0.5rem; }

.navbar-collapse { flex-basis: 100%; flex-grow: 1; align-items: center; }

.navbar-toggler { padding: 0.25rem 0.75rem; font-size: 1.25rem; line-height=
: 1; background-color: transparent; border: 1px solid transparent; border-r=
adius: 0.25rem; }

.navbar-toggler:focus, .navbar-toggler:hover { text-decoration: none; }

.navbar-toggler-icon { display: inline-block; width: 1.5em; height: 1.5em; =
vertical-align: middle; content: ""; background: center center / 100% 100% =
no-repeat; }

@media (max-width: 575.98px) {
  .navbar-expand-sm > .container, .navbar-expand-sm > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 576px) {
  .navbar-expand-sm { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-sm .navbar-nav { flex-direction: row; }
  .navbar-expand-sm .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-sm .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-sm > .container, .navbar-expand-sm > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-sm .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-sm .navbar-toggler { display: none; }
}

@media (max-width: 767.98px) {
  .navbar-expand-md > .container, .navbar-expand-md > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 768px) {
  .navbar-expand-md { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-md .navbar-nav { flex-direction: row; }
  .navbar-expand-md .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-md .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-md > .container, .navbar-expand-md > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-md .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-md .navbar-toggler { display: none; }
}

@media (max-width: 991.98px) {
  .navbar-expand-lg > .container, .navbar-expand-lg > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 992px) {
  .navbar-expand-lg { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-lg .navbar-nav { flex-direction: row; }
  .navbar-expand-lg .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-lg .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-lg > .container, .navbar-expand-lg > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-lg .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-lg .navbar-toggler { display: none; }
}

@media (max-width: 1199.98px) {
  .navbar-expand-xl > .container, .navbar-expand-xl > .container-fluid { pa=
dding-right: 0px; padding-left: 0px; }
}

@media (min-width: 1200px) {
  .navbar-expand-xl { flex-flow: row nowrap; justify-content: flex-start; }
  .navbar-expand-xl .navbar-nav { flex-direction: row; }
  .navbar-expand-xl .navbar-nav .dropdown-menu { position: absolute; }
  .navbar-expand-xl .navbar-nav .nav-link { padding-right: 0.5rem; padding-=
left: 0.5rem; }
  .navbar-expand-xl > .container, .navbar-expand-xl > .container-fluid { fl=
ex-wrap: nowrap; }
  .navbar-expand-xl .navbar-collapse { flex-basis: auto; display: flex !imp=
ortant; }
  .navbar-expand-xl .navbar-toggler { display: none; }
}

.navbar-expand { flex-flow: row nowrap; justify-content: flex-start; }

.navbar-expand > .container, .navbar-expand > .container-fluid { padding-ri=
ght: 0px; padding-left: 0px; }

.navbar-expand .navbar-nav { flex-direction: row; }

.navbar-expand .navbar-nav .dropdown-menu { position: absolute; }

.navbar-expand .navbar-nav .nav-link { padding-right: 0.5rem; padding-left:=
 0.5rem; }

.navbar-expand > .container, .navbar-expand > .container-fluid { flex-wrap:=
 nowrap; }

.navbar-expand .navbar-collapse { flex-basis: auto; display: flex !importan=
t; }

.navbar-expand .navbar-toggler { display: none; }

.navbar-light .navbar-brand { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-brand:focus, .navbar-light .navbar-brand:hover { colo=
r: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-nav .nav-link { color: rgba(0, 0, 0, 0.5); }

.navbar-light .navbar-nav .nav-link:focus, .navbar-light .navbar-nav .nav-l=
ink:hover { color: rgba(0, 0, 0, 0.7); }

.navbar-light .navbar-nav .nav-link.disabled { color: rgba(0, 0, 0, 0.3); }

.navbar-light .navbar-nav .active > .nav-link, .navbar-light .navbar-nav .n=
av-link.active, .navbar-light .navbar-nav .nav-link.show, .navbar-light .na=
vbar-nav .show > .nav-link { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-toggler { color: rgba(0, 0, 0, 0.5); border-color: rg=
ba(0, 0, 0, 0.1); }

.navbar-light .navbar-toggler-icon { background-image: url("data:image/svg+=
xml,%3csvg viewBox=3D'0 0 30 30' xmlns=3D'http://www.w3.org/2000/svg'%3e%3c=
path stroke=3D'rgba(0, 0, 0, 0.5)' stroke-width=3D'2' stroke-linecap=3D'rou=
nd' stroke-miterlimit=3D'10' d=3D'M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");=
 }

.navbar-light .navbar-text { color: rgba(0, 0, 0, 0.5); }

.navbar-light .navbar-text a { color: rgba(0, 0, 0, 0.9); }

.navbar-light .navbar-text a:focus, .navbar-light .navbar-text a:hover { co=
lor: rgba(0, 0, 0, 0.9); }

.navbar-dark .navbar-brand { color: rgb(255, 255, 255); }

.navbar-dark .navbar-brand:focus, .navbar-dark .navbar-brand:hover { color:=
 rgb(255, 255, 255); }

.navbar-dark .navbar-nav .nav-link { color: rgba(255, 255, 255, 0.5); }

.navbar-dark .navbar-nav .nav-link:focus, .navbar-dark .navbar-nav .nav-lin=
k:hover { color: rgba(255, 255, 255, 0.75); }

.navbar-dark .navbar-nav .nav-link.disabled { color: rgba(255, 255, 255, 0.=
25); }

.navbar-dark .navbar-nav .active > .nav-link, .navbar-dark .navbar-nav .nav=
-link.active, .navbar-dark .navbar-nav .nav-link.show, .navbar-dark .navbar=
-nav .show > .nav-link { color: rgb(255, 255, 255); }

.navbar-dark .navbar-toggler { color: rgba(255, 255, 255, 0.5); border-colo=
r: rgba(255, 255, 255, 0.1); }

.navbar-dark .navbar-toggler-icon { background-image: url("data:image/svg+x=
ml,%3csvg viewBox=3D'0 0 30 30' xmlns=3D'http://www.w3.org/2000/svg'%3e%3cp=
ath stroke=3D'rgba(255, 255, 255, 0.5)' stroke-width=3D'2' stroke-linecap=
=3D'round' stroke-miterlimit=3D'10' d=3D'M4 7h22M4 15h22M4 23h22'/%3e%3c/sv=
g%3e"); }

.navbar-dark .navbar-text { color: rgba(255, 255, 255, 0.5); }

.navbar-dark .navbar-text a { color: rgb(255, 255, 255); }

.navbar-dark .navbar-text a:focus, .navbar-dark .navbar-text a:hover { colo=
r: rgb(255, 255, 255); }

.card { position: relative; display: flex; flex-direction: column; min-widt=
h: 0px; overflow-wrap: break-word; background-color: rgb(255, 255, 255); ba=
ckground-clip: border-box; border: 1px solid rgba(0, 0, 0, 0.125); border-r=
adius: 0.25rem; }

.card > hr { margin-right: 0px; margin-left: 0px; }

.card > .list-group:first-child .list-group-item:first-child { border-top-l=
eft-radius: 0.25rem; border-top-right-radius: 0.25rem; }

.card > .list-group:last-child .list-group-item:last-child { border-bottom-=
right-radius: 0.25rem; border-bottom-left-radius: 0.25rem; }

.card-body { flex: 1 1 auto; padding: 1.25rem; }

.card-title { margin-bottom: 0.75rem; }

.card-subtitle { margin-top: -0.375rem; margin-bottom: 0px; }

.card-text:last-child { margin-bottom: 0px; }

.card-link:hover { text-decoration: none; }

.card-link + .card-link { margin-left: 1.25rem; }

.card-header { padding: 0.75rem 1.25rem; margin-bottom: 0px; background-col=
or: rgba(0, 0, 0, 0.03); border-bottom: 1px solid rgba(0, 0, 0, 0.125); }

.card-header:first-child { border-radius: calc(0.25rem - 1px) calc(0.25rem =
- 1px) 0px 0px; }

.card-header + .list-group .list-group-item:first-child { border-top: 0px; =
}

.card-footer { padding: 0.75rem 1.25rem; background-color: rgba(0, 0, 0, 0.=
03); border-top: 1px solid rgba(0, 0, 0, 0.125); }

.card-footer:last-child { border-radius: 0px 0px calc(0.25rem - 1px) calc(0=
.25rem - 1px); }

.card-header-tabs { margin-right: -0.625rem; margin-bottom: -0.75rem; margi=
n-left: -0.625rem; border-bottom: 0px; }

.card-header-pills { margin-right: -0.625rem; margin-left: -0.625rem; }

.card-img-overlay { position: absolute; inset: 0px; padding: 1.25rem; }

.card-img { width: 100%; border-radius: calc(0.25rem - 1px); }

.card-img-top { width: 100%; border-top-left-radius: calc(0.25rem - 1px); b=
order-top-right-radius: calc(0.25rem - 1px); }

.card-img-bottom { width: 100%; border-bottom-right-radius: calc(0.25rem - =
1px); border-bottom-left-radius: calc(0.25rem - 1px); }

.card-deck { display: flex; flex-direction: column; }

.card-deck .card { margin-bottom: 15px; }

@media (min-width: 576px) {
  .card-deck { flex-flow: row wrap; margin-right: -15px; margin-left: -15px=
; }
  .card-deck .card { display: flex; flex: 1 0 0%; flex-direction: column; m=
argin-right: 15px; margin-bottom: 0px; margin-left: 15px; }
}

.card-group { display: flex; flex-direction: column; }

.card-group > .card { margin-bottom: 15px; }

@media (min-width: 576px) {
  .card-group { flex-flow: row wrap; }
  .card-group > .card { flex: 1 0 0%; margin-bottom: 0px; }
  .card-group > .card + .card { margin-left: 0px; border-left: 0px; }
  .card-group > .card:not(:last-child) { border-top-right-radius: 0px; bord=
er-bottom-right-radius: 0px; }
  .card-group > .card:not(:last-child) .card-header, .card-group > .card:no=
t(:last-child) .card-img-top { border-top-right-radius: 0px; }
  .card-group > .card:not(:last-child) .card-footer, .card-group > .card:no=
t(:last-child) .card-img-bottom { border-bottom-right-radius: 0px; }
  .card-group > .card:not(:first-child) { border-top-left-radius: 0px; bord=
er-bottom-left-radius: 0px; }
  .card-group > .card:not(:first-child) .card-header, .card-group > .card:n=
ot(:first-child) .card-img-top { border-top-left-radius: 0px; }
  .card-group > .card:not(:first-child) .card-footer, .card-group > .card:n=
ot(:first-child) .card-img-bottom { border-bottom-left-radius: 0px; }
}

.card-columns .card { margin-bottom: 0.75rem; }

@media (min-width: 576px) {
  .card-columns { column-count: 3; column-gap: 1.25rem; orphans: 1; widows:=
 1; }
  .card-columns .card { display: inline-block; width: 100%; }
}

.accordion > .card { overflow: hidden; }

.accordion > .card:not(:first-of-type) .card-header:first-child { border-ra=
dius: 0px; }

.accordion > .card:not(:first-of-type):not(:last-of-type) { border-bottom: =
0px; border-radius: 0px; }

.accordion > .card:first-of-type { border-bottom: 0px; border-bottom-right-=
radius: 0px; border-bottom-left-radius: 0px; }

.accordion > .card:last-of-type { border-top-left-radius: 0px; border-top-r=
ight-radius: 0px; }

.accordion > .card .card-header { margin-bottom: -1px; }

.breadcrumb { display: flex; flex-wrap: wrap; padding: 0.75rem 1rem; margin=
-bottom: 1rem; list-style: none; background-color: rgb(233, 236, 239); bord=
er-radius: 0.25rem; }

.breadcrumb-item + .breadcrumb-item { padding-left: 0.5rem; }

.breadcrumb-item + .breadcrumb-item::before { display: inline-block; paddin=
g-right: 0.5rem; color: rgb(108, 117, 125); content: "/"; }

.breadcrumb-item + .breadcrumb-item:hover::before { text-decoration: underl=
ine; }

.breadcrumb-item + .breadcrumb-item:hover::before { text-decoration: none; =
}

.breadcrumb-item.active { color: rgb(108, 117, 125); }

.pagination { display: flex; padding-left: 0px; list-style: none; border-ra=
dius: 0.25rem; }

.page-link { position: relative; display: block; padding: 0.5rem 0.75rem; m=
argin-left: -1px; line-height: 1.25; color: rgb(0, 123, 255); background-co=
lor: rgb(255, 255, 255); border: 1px solid rgb(222, 226, 230); }

.page-link:hover { z-index: 2; color: rgb(0, 86, 179); text-decoration: non=
e; background-color: rgb(233, 236, 239); border-color: rgb(222, 226, 230); =
}

.page-link:focus { z-index: 2; outline: 0px; box-shadow: rgba(0, 123, 255, =
0.25) 0px 0px 0px 0.2rem; }

.page-item:first-child .page-link { margin-left: 0px; border-top-left-radiu=
s: 0.25rem; border-bottom-left-radius: 0.25rem; }

.page-item:last-child .page-link { border-top-right-radius: 0.25rem; border=
-bottom-right-radius: 0.25rem; }

.page-item.active .page-link { z-index: 1; color: rgb(255, 255, 255); backg=
round-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.page-item.disabled .page-link { color: rgb(108, 117, 125); pointer-events:=
 none; cursor: auto; background-color: rgb(255, 255, 255); border-color: rg=
b(222, 226, 230); }

.pagination-lg .page-link { padding: 0.75rem 1.5rem; font-size: 1.25rem; li=
ne-height: 1.5; }

.pagination-lg .page-item:first-child .page-link { border-top-left-radius: =
0.3rem; border-bottom-left-radius: 0.3rem; }

.pagination-lg .page-item:last-child .page-link { border-top-right-radius: =
0.3rem; border-bottom-right-radius: 0.3rem; }

.pagination-sm .page-link { padding: 0.25rem 0.5rem; font-size: 0.875rem; l=
ine-height: 1.5; }

.pagination-sm .page-item:first-child .page-link { border-top-left-radius: =
0.2rem; border-bottom-left-radius: 0.2rem; }

.pagination-sm .page-item:last-child .page-link { border-top-right-radius: =
0.2rem; border-bottom-right-radius: 0.2rem; }

.badge { display: inline-block; padding: 0.25em 0.4em; font-size: 75%; font=
-weight: 700; line-height: 1; text-align: center; white-space: nowrap; vert=
ical-align: baseline; border-radius: 0.25rem; transition: color 0.15s ease-=
in-out 0s, background-color 0.15s ease-in-out 0s, border-color 0.15s ease-i=
n-out 0s, box-shadow 0.15s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .badge { transition: none 0s ease 0s; }
}

a.badge:focus, a.badge:hover { text-decoration: none; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

.badge-pill { padding-right: 0.6em; padding-left: 0.6em; border-radius: 10r=
em; }

.badge-primary { color: rgb(255, 255, 255); background-color: rgb(0, 123, 2=
55); }

a.badge-primary:focus, a.badge-primary:hover { color: rgb(255, 255, 255); b=
ackground-color: rgb(0, 98, 204); }

a.badge-primary.focus, a.badge-primary:focus { outline: 0px; box-shadow: rg=
ba(0, 123, 255, 0.5) 0px 0px 0px 0.2rem; }

.badge-secondary { color: rgb(255, 255, 255); background-color: rgb(108, 11=
7, 125); }

a.badge-secondary:focus, a.badge-secondary:hover { color: rgb(255, 255, 255=
); background-color: rgb(84, 91, 98); }

a.badge-secondary.focus, a.badge-secondary:focus { outline: 0px; box-shadow=
: rgba(108, 117, 125, 0.5) 0px 0px 0px 0.2rem; }

.badge-success { color: rgb(255, 255, 255); background-color: rgb(40, 167, =
69); }

a.badge-success:focus, a.badge-success:hover { color: rgb(255, 255, 255); b=
ackground-color: rgb(30, 126, 52); }

a.badge-success.focus, a.badge-success:focus { outline: 0px; box-shadow: rg=
ba(40, 167, 69, 0.5) 0px 0px 0px 0.2rem; }

.badge-info { color: rgb(255, 255, 255); background-color: rgb(23, 162, 184=
); }

a.badge-info:focus, a.badge-info:hover { color: rgb(255, 255, 255); backgro=
und-color: rgb(17, 122, 139); }

a.badge-info.focus, a.badge-info:focus { outline: 0px; box-shadow: rgba(23,=
 162, 184, 0.5) 0px 0px 0px 0.2rem; }

.badge-warning { color: rgb(33, 37, 41); background-color: rgb(255, 193, 7)=
; }

a.badge-warning:focus, a.badge-warning:hover { color: rgb(33, 37, 41); back=
ground-color: rgb(211, 158, 0); }

a.badge-warning.focus, a.badge-warning:focus { outline: 0px; box-shadow: rg=
ba(255, 193, 7, 0.5) 0px 0px 0px 0.2rem; }

.badge-danger { color: rgb(255, 255, 255); background-color: rgb(220, 53, 6=
9); }

a.badge-danger:focus, a.badge-danger:hover { color: rgb(255, 255, 255); bac=
kground-color: rgb(189, 33, 48); }

a.badge-danger.focus, a.badge-danger:focus { outline: 0px; box-shadow: rgba=
(220, 53, 69, 0.5) 0px 0px 0px 0.2rem; }

.badge-light { color: rgb(33, 37, 41); background-color: rgb(248, 249, 250)=
; }

a.badge-light:focus, a.badge-light:hover { color: rgb(33, 37, 41); backgrou=
nd-color: rgb(218, 224, 229); }

a.badge-light.focus, a.badge-light:focus { outline: 0px; box-shadow: rgba(2=
48, 249, 250, 0.5) 0px 0px 0px 0.2rem; }

.badge-dark { color: rgb(255, 255, 255); background-color: rgb(52, 58, 64);=
 }

a.badge-dark:focus, a.badge-dark:hover { color: rgb(255, 255, 255); backgro=
und-color: rgb(29, 33, 36); }

a.badge-dark.focus, a.badge-dark:focus { outline: 0px; box-shadow: rgba(52,=
 58, 64, 0.5) 0px 0px 0px 0.2rem; }

.jumbotron { padding: 2rem 1rem; margin-bottom: 2rem; background-color: rgb=
(233, 236, 239); border-radius: 0.3rem; }

@media (min-width: 576px) {
  .jumbotron { padding: 4rem 2rem; }
}

.jumbotron-fluid { padding-right: 0px; padding-left: 0px; border-radius: 0p=
x; }

.alert { position: relative; padding: 0.75rem 1.25rem; margin-bottom: 1rem;=
 border: 1px solid transparent; border-radius: 0.25rem; }

.alert-heading { color: inherit; }

.alert-link { font-weight: 700; }

.alert-dismissible { padding-right: 4rem; }

.alert-dismissible .close { position: absolute; top: 0px; right: 0px; paddi=
ng: 0.75rem 1.25rem; color: inherit; }

.alert-primary { color: rgb(0, 64, 133); background-color: rgb(204, 229, 25=
5); border-color: rgb(184, 218, 255); }

.alert-primary hr { border-top-color: rgb(159, 205, 255); }

.alert-primary .alert-link { color: rgb(0, 39, 82); }

.alert-secondary { color: rgb(56, 61, 65); background-color: rgb(226, 227, =
229); border-color: rgb(214, 216, 219); }

.alert-secondary hr { border-top-color: rgb(200, 203, 207); }

.alert-secondary .alert-link { color: rgb(32, 35, 38); }

.alert-success { color: rgb(21, 87, 36); background-color: rgb(212, 237, 21=
8); border-color: rgb(195, 230, 203); }

.alert-success hr { border-top-color: rgb(177, 223, 187); }

.alert-success .alert-link { color: rgb(11, 46, 19); }

.alert-info { color: rgb(12, 84, 96); background-color: rgb(209, 236, 241);=
 border-color: rgb(190, 229, 235); }

.alert-info hr { border-top-color: rgb(171, 221, 229); }

.alert-info .alert-link { color: rgb(6, 44, 51); }

.alert-warning { color: rgb(133, 100, 4); background-color: rgb(255, 243, 2=
05); border-color: rgb(255, 238, 186); }

.alert-warning hr { border-top-color: rgb(255, 232, 161); }

.alert-warning .alert-link { color: rgb(83, 63, 3); }

.alert-danger { color: rgb(114, 28, 36); background-color: rgb(248, 215, 21=
8); border-color: rgb(245, 198, 203); }

.alert-danger hr { border-top-color: rgb(241, 176, 183); }

.alert-danger .alert-link { color: rgb(73, 18, 23); }

.alert-light { color: rgb(129, 129, 130); background-color: rgb(254, 254, 2=
54); border-color: rgb(253, 253, 254); }

.alert-light hr { border-top-color: rgb(236, 236, 246); }

.alert-light .alert-link { color: rgb(104, 104, 104); }

.alert-dark { color: rgb(27, 30, 33); background-color: rgb(214, 216, 217);=
 border-color: rgb(198, 200, 202); }

.alert-dark hr { border-top-color: rgb(185, 187, 190); }

.alert-dark .alert-link { color: rgb(4, 5, 5); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 1rem 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 1rem 0px; }
  100% { background-position: 0px 0px; }
}

.progress { display: flex; height: 1rem; overflow: hidden; font-size: 0.75r=
em; background-color: rgb(233, 236, 239); border-radius: 0.25rem; }

.progress-bar { display: flex; flex-direction: column; justify-content: cen=
ter; color: rgb(255, 255, 255); text-align: center; white-space: nowrap; ba=
ckground-color: rgb(0, 123, 255); transition: width 0.6s ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .progress-bar { transition: none 0s ease 0s; }
}

.progress-bar-striped { background-image: linear-gradient(45deg, rgba(255, =
255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, =
0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent); ba=
ckground-size: 1rem 1rem; }

.progress-bar-animated { animation: 1s linear 0s infinite normal none runni=
ng progress-bar-stripes; }

@media (prefers-reduced-motion: reduce) {
  .progress-bar-animated { animation: 0s ease 0s 1 normal none running none=
; }
}

.media { display: flex; align-items: flex-start; }

.media-body { flex: 1 1 0%; }

.list-group { display: flex; flex-direction: column; padding-left: 0px; mar=
gin-bottom: 0px; }

.list-group-item-action { width: 100%; color: rgb(73, 80, 87); text-align: =
inherit; }

.list-group-item-action:focus, .list-group-item-action:hover { z-index: 1; =
color: rgb(73, 80, 87); text-decoration: none; background-color: rgb(248, 2=
49, 250); }

.list-group-item-action:active { color: rgb(33, 37, 41); background-color: =
rgb(233, 236, 239); }

.list-group-item { position: relative; display: block; padding: 0.75rem 1.2=
5rem; margin-bottom: -1px; background-color: rgb(255, 255, 255); border: 1p=
x solid rgba(0, 0, 0, 0.125); }

.list-group-item:first-child { border-top-left-radius: 0.25rem; border-top-=
right-radius: 0.25rem; }

.list-group-item:last-child { margin-bottom: 0px; border-bottom-right-radiu=
s: 0.25rem; border-bottom-left-radius: 0.25rem; }

.list-group-item.disabled, .list-group-item:disabled { color: rgb(108, 117,=
 125); pointer-events: none; background-color: rgb(255, 255, 255); }

.list-group-item.active { z-index: 2; color: rgb(255, 255, 255); background=
-color: rgb(0, 123, 255); border-color: rgb(0, 123, 255); }

.list-group-horizontal { flex-direction: row; }

.list-group-horizontal .list-group-item { margin-right: -1px; margin-bottom=
: 0px; }

.list-group-horizontal .list-group-item:first-child { border-top-left-radiu=
s: 0.25rem; border-bottom-left-radius: 0.25rem; border-top-right-radius: 0p=
x; }

.list-group-horizontal .list-group-item:last-child { margin-right: 0px; bor=
der-top-right-radius: 0.25rem; border-bottom-right-radius: 0.25rem; border-=
bottom-left-radius: 0px; }

@media (min-width: 576px) {
  .list-group-horizontal-sm { flex-direction: row; }
  .list-group-horizontal-sm .list-group-item { margin-right: -1px; margin-b=
ottom: 0px; }
  .list-group-horizontal-sm .list-group-item:first-child { border-top-left-=
radius: 0.25rem; border-bottom-left-radius: 0.25rem; border-top-right-radiu=
s: 0px; }
  .list-group-horizontal-sm .list-group-item:last-child { margin-right: 0px=
; border-top-right-radius: 0.25rem; border-bottom-right-radius: 0.25rem; bo=
rder-bottom-left-radius: 0px; }
}

@media (min-width: 768px) {
  .list-group-horizontal-md { flex-direction: row; }
  .list-group-horizontal-md .list-group-item { margin-right: -1px; margin-b=
ottom: 0px; }
  .list-group-horizontal-md .list-group-item:first-child { border-top-left-=
radius: 0.25rem; border-bottom-left-radius: 0.25rem; border-top-right-radiu=
s: 0px; }
  .list-group-horizontal-md .list-group-item:last-child { margin-right: 0px=
; border-top-right-radius: 0.25rem; border-bottom-right-radius: 0.25rem; bo=
rder-bottom-left-radius: 0px; }
}

@media (min-width: 992px) {
  .list-group-horizontal-lg { flex-direction: row; }
  .list-group-horizontal-lg .list-group-item { margin-right: -1px; margin-b=
ottom: 0px; }
  .list-group-horizontal-lg .list-group-item:first-child { border-top-left-=
radius: 0.25rem; border-bottom-left-radius: 0.25rem; border-top-right-radiu=
s: 0px; }
  .list-group-horizontal-lg .list-group-item:last-child { margin-right: 0px=
; border-top-right-radius: 0.25rem; border-bottom-right-radius: 0.25rem; bo=
rder-bottom-left-radius: 0px; }
}

@media (min-width: 1200px) {
  .list-group-horizontal-xl { flex-direction: row; }
  .list-group-horizontal-xl .list-group-item { margin-right: -1px; margin-b=
ottom: 0px; }
  .list-group-horizontal-xl .list-group-item:first-child { border-top-left-=
radius: 0.25rem; border-bottom-left-radius: 0.25rem; border-top-right-radiu=
s: 0px; }
  .list-group-horizontal-xl .list-group-item:last-child { margin-right: 0px=
; border-top-right-radius: 0.25rem; border-bottom-right-radius: 0.25rem; bo=
rder-bottom-left-radius: 0px; }
}

.list-group-flush .list-group-item { border-right: 0px; border-left: 0px; b=
order-radius: 0px; }

.list-group-flush .list-group-item:last-child { margin-bottom: -1px; }

.list-group-flush:first-child .list-group-item:first-child { border-top: 0p=
x; }

.list-group-flush:last-child .list-group-item:last-child { margin-bottom: 0=
px; border-bottom: 0px; }

.list-group-item-primary { color: rgb(0, 64, 133); background-color: rgb(18=
4, 218, 255); }

.list-group-item-primary.list-group-item-action:focus, .list-group-item-pri=
mary.list-group-item-action:hover { color: rgb(0, 64, 133); background-colo=
r: rgb(159, 205, 255); }

.list-group-item-primary.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(0, 64, 133); border-color: rgb(0, 64, 133); =
}

.list-group-item-secondary { color: rgb(56, 61, 65); background-color: rgb(=
214, 216, 219); }

.list-group-item-secondary.list-group-item-action:focus, .list-group-item-s=
econdary.list-group-item-action:hover { color: rgb(56, 61, 65); background-=
color: rgb(200, 203, 207); }

.list-group-item-secondary.list-group-item-action.active { color: rgb(255, =
255, 255); background-color: rgb(56, 61, 65); border-color: rgb(56, 61, 65)=
; }

.list-group-item-success { color: rgb(21, 87, 36); background-color: rgb(19=
5, 230, 203); }

.list-group-item-success.list-group-item-action:focus, .list-group-item-suc=
cess.list-group-item-action:hover { color: rgb(21, 87, 36); background-colo=
r: rgb(177, 223, 187); }

.list-group-item-success.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(21, 87, 36); border-color: rgb(21, 87, 36); =
}

.list-group-item-info { color: rgb(12, 84, 96); background-color: rgb(190, =
229, 235); }

.list-group-item-info.list-group-item-action:focus, .list-group-item-info.l=
ist-group-item-action:hover { color: rgb(12, 84, 96); background-color: rgb=
(171, 221, 229); }

.list-group-item-info.list-group-item-action.active { color: rgb(255, 255, =
255); background-color: rgb(12, 84, 96); border-color: rgb(12, 84, 96); }

.list-group-item-warning { color: rgb(133, 100, 4); background-color: rgb(2=
55, 238, 186); }

.list-group-item-warning.list-group-item-action:focus, .list-group-item-war=
ning.list-group-item-action:hover { color: rgb(133, 100, 4); background-col=
or: rgb(255, 232, 161); }

.list-group-item-warning.list-group-item-action.active { color: rgb(255, 25=
5, 255); background-color: rgb(133, 100, 4); border-color: rgb(133, 100, 4)=
; }

.list-group-item-danger { color: rgb(114, 28, 36); background-color: rgb(24=
5, 198, 203); }

.list-group-item-danger.list-group-item-action:focus, .list-group-item-dang=
er.list-group-item-action:hover { color: rgb(114, 28, 36); background-color=
: rgb(241, 176, 183); }

.list-group-item-danger.list-group-item-action.active { color: rgb(255, 255=
, 255); background-color: rgb(114, 28, 36); border-color: rgb(114, 28, 36);=
 }

.list-group-item-light { color: rgb(129, 129, 130); background-color: rgb(2=
53, 253, 254); }

.list-group-item-light.list-group-item-action:focus, .list-group-item-light=
.list-group-item-action:hover { color: rgb(129, 129, 130); background-color=
: rgb(236, 236, 246); }

.list-group-item-light.list-group-item-action.active { color: rgb(255, 255,=
 255); background-color: rgb(129, 129, 130); border-color: rgb(129, 129, 13=
0); }

.list-group-item-dark { color: rgb(27, 30, 33); background-color: rgb(198, =
200, 202); }

.list-group-item-dark.list-group-item-action:focus, .list-group-item-dark.l=
ist-group-item-action:hover { color: rgb(27, 30, 33); background-color: rgb=
(185, 187, 190); }

.list-group-item-dark.list-group-item-action.active { color: rgb(255, 255, =
255); background-color: rgb(27, 30, 33); border-color: rgb(27, 30, 33); }

.close { float: right; font-size: 1.5rem; font-weight: 700; line-height: 1;=
 color: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity:=
 0.5; }

.close:hover { color: rgb(0, 0, 0); text-decoration: none; }

.close:not(:disabled):not(.disabled):focus, .close:not(:disabled):not(.disa=
bled):hover { opacity: 0.75; }

button.close { padding: 0px; background-color: transparent; border: 0px; ap=
pearance: none; }

a.close.disabled { pointer-events: none; }

.toast { max-width: 350px; overflow: hidden; font-size: 0.875rem; backgroun=
d-color: rgba(255, 255, 255, 0.85); background-clip: padding-box; border: 1=
px solid rgba(0, 0, 0, 0.1); box-shadow: rgba(0, 0, 0, 0.1) 0px 0.25rem 0.7=
5rem; backdrop-filter: blur(10px); opacity: 0; border-radius: 0.25rem; }

.toast:not(:last-child) { margin-bottom: 0.75rem; }

.toast.showing { opacity: 1; }

.toast.show { display: block; opacity: 1; }

.toast.hide { display: none; }

.toast-header { display: flex; align-items: center; padding: 0.25rem 0.75re=
m; color: rgb(108, 117, 125); background-color: rgba(255, 255, 255, 0.85); =
background-clip: padding-box; border-bottom: 1px solid rgba(0, 0, 0, 0.05);=
 }

.toast-body { padding: 0.75rem; }

.modal-open { overflow: hidden; }

.modal-open .modal { overflow: hidden auto; }

.modal { position: fixed; top: 0px; left: 0px; z-index: 1050; display: none=
; width: 100%; height: 100%; overflow: hidden; outline: 0px; }

.modal-dialog { position: relative; width: auto; margin: 0.5rem; pointer-ev=
ents: none; }

.modal.fade .modal-dialog { transition: transform 0.3s ease-out 0s, -webkit=
-transform 0.3s ease-out 0s; transform: translate(0px, -50px); }

@media (prefers-reduced-motion: reduce) {
  .modal.fade .modal-dialog { transition: none 0s ease 0s; }
}

.modal.show .modal-dialog { transform: none; }

.modal-dialog-scrollable { display: flex; max-height: calc(100% - 1rem); }

.modal-dialog-scrollable .modal-content { max-height: calc(100vh - 1rem); o=
verflow: hidden; }

.modal-dialog-scrollable .modal-footer, .modal-dialog-scrollable .modal-hea=
der { flex-shrink: 0; }

.modal-dialog-scrollable .modal-body { overflow-y: auto; }

.modal-dialog-centered { display: flex; align-items: center; min-height: ca=
lc(100% - 1rem); }

.modal-dialog-centered::before { display: block; height: calc(100vh - 1rem)=
; content: ""; }

.modal-dialog-centered.modal-dialog-scrollable { flex-direction: column; ju=
stify-content: center; height: 100%; }

.modal-dialog-centered.modal-dialog-scrollable .modal-content { max-height:=
 none; }

.modal-dialog-centered.modal-dialog-scrollable::before { content: none; }

.modal-content { position: relative; display: flex; flex-direction: column;=
 width: 100%; pointer-events: auto; background-color: rgb(255, 255, 255); b=
ackground-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-r=
adius: 0.3rem; outline: 0px; }

.modal-backdrop { position: fixed; top: 0px; left: 0px; z-index: 1040; widt=
h: 100vw; height: 100vh; background-color: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.show { opacity: 0.5; }

.modal-header { display: flex; align-items: flex-start; justify-content: sp=
ace-between; padding: 1rem; border-bottom: 1px solid rgb(222, 226, 230); bo=
rder-top-left-radius: 0.3rem; border-top-right-radius: 0.3rem; }

.modal-header .close { padding: 1rem; margin: -1rem -1rem -1rem auto; }

.modal-title { margin-bottom: 0px; line-height: 1.5; }

.modal-body { position: relative; flex: 1 1 auto; padding: 1rem; }

.modal-footer { display: flex; align-items: center; justify-content: flex-e=
nd; padding: 1rem; border-top: 1px solid rgb(222, 226, 230); border-bottom-=
right-radius: 0.3rem; border-bottom-left-radius: 0.3rem; }

.modal-footer > :not(:first-child) { margin-left: 0.25rem; }

.modal-footer > :not(:last-child) { margin-right: 0.25rem; }

.modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; h=
eight: 50px; overflow: scroll; }

@media (min-width: 576px) {
  .modal-dialog { max-width: 500px; margin: 1.75rem auto; }
  .modal-dialog-scrollable { max-height: calc(100% - 3.5rem); }
  .modal-dialog-scrollable .modal-content { max-height: calc(100vh - 3.5rem=
); }
  .modal-dialog-centered { min-height: calc(100% - 3.5rem); }
  .modal-dialog-centered::before { height: calc(100vh - 3.5rem); }
  .modal-sm { max-width: 300px; }
}

@media (min-width: 992px) {
  .modal-lg, .modal-xl { max-width: 800px; }
}

@media (min-width: 1200px) {
  .modal-xl { max-width: 1140px; }
}

.tooltip { position: absolute; z-index: 1070; display: block; margin: 0px; =
font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvet=
ica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI E=
moji", "Segoe UI Symbol", "Noto Color Emoji"; font-style: normal; font-weig=
ht: 400; line-height: 1.5; text-align: start; text-decoration: none; text-s=
hadow: none; text-transform: none; letter-spacing: normal; word-break: norm=
al; word-spacing: normal; white-space: normal; line-break: auto; font-size:=
 0.875rem; overflow-wrap: break-word; opacity: 0; }

.tooltip.show { opacity: 0.9; }

.tooltip .arrow { position: absolute; display: block; width: 0.8rem; height=
: 0.4rem; }

.tooltip .arrow::before { position: absolute; content: ""; border-color: tr=
ansparent; border-style: solid; }

.bs-tooltip-auto[x-placement^=3D"top"], .bs-tooltip-top { padding: 0.4rem 0=
px; }

.bs-tooltip-auto[x-placement^=3D"top"] .arrow, .bs-tooltip-top .arrow { bot=
tom: 0px; }

.bs-tooltip-auto[x-placement^=3D"top"] .arrow::before, .bs-tooltip-top .arr=
ow::before { top: 0px; border-width: 0.4rem 0.4rem 0px; border-top-color: r=
gb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"right"], .bs-tooltip-right { padding: 0px =
0.4rem; }

.bs-tooltip-auto[x-placement^=3D"right"] .arrow, .bs-tooltip-right .arrow {=
 left: 0px; width: 0.4rem; height: 0.8rem; }

.bs-tooltip-auto[x-placement^=3D"right"] .arrow::before, .bs-tooltip-right =
.arrow::before { right: 0px; border-width: 0.4rem 0.4rem 0.4rem 0px; border=
-right-color: rgb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"bottom"], .bs-tooltip-bottom { padding: 0.=
4rem 0px; }

.bs-tooltip-auto[x-placement^=3D"bottom"] .arrow, .bs-tooltip-bottom .arrow=
 { top: 0px; }

.bs-tooltip-auto[x-placement^=3D"bottom"] .arrow::before, .bs-tooltip-botto=
m .arrow::before { bottom: 0px; border-width: 0px 0.4rem 0.4rem; border-bot=
tom-color: rgb(0, 0, 0); }

.bs-tooltip-auto[x-placement^=3D"left"], .bs-tooltip-left { padding: 0px 0.=
4rem; }

.bs-tooltip-auto[x-placement^=3D"left"] .arrow, .bs-tooltip-left .arrow { r=
ight: 0px; width: 0.4rem; height: 0.8rem; }

.bs-tooltip-auto[x-placement^=3D"left"] .arrow::before, .bs-tooltip-left .a=
rrow::before { left: 0px; border-width: 0.4rem 0px 0.4rem 0.4rem; border-le=
ft-color: rgb(0, 0, 0); }

.tooltip-inner { max-width: 200px; padding: 0.25rem 0.5rem; color: rgb(255,=
 255, 255); text-align: center; background-color: rgb(0, 0, 0); border-radi=
us: 0.25rem; }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1060; display:=
 block; max-width: 276px; font-family: -apple-system, BlinkMacSystemFont, "=
Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple=
 Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; fon=
t-style: normal; font-weight: 400; line-height: 1.5; text-align: start; tex=
t-decoration: none; text-shadow: none; text-transform: none; letter-spacing=
: normal; word-break: normal; word-spacing: normal; white-space: normal; li=
ne-break: auto; font-size: 0.875rem; overflow-wrap: break-word; background-=
color: rgb(255, 255, 255); background-clip: padding-box; border: 1px solid =
rgba(0, 0, 0, 0.2); border-radius: 0.3rem; }

.popover .arrow { position: absolute; display: block; width: 1rem; height: =
0.5rem; margin: 0px 0.3rem; }

.popover .arrow::after, .popover .arrow::before { position: absolute; displ=
ay: block; content: ""; border-color: transparent; border-style: solid; }

.bs-popover-auto[x-placement^=3D"top"], .bs-popover-top { margin-bottom: 0.=
5rem; }

.bs-popover-auto[x-placement^=3D"top"] > .arrow, .bs-popover-top > .arrow {=
 bottom: calc((0.5rem + 1px) * -1); }

.bs-popover-auto[x-placement^=3D"top"] > .arrow::before, .bs-popover-top > =
.arrow::before { bottom: 0px; border-width: 0.5rem 0.5rem 0px; border-top-c=
olor: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"top"] > .arrow::after, .bs-popover-top > .=
arrow::after { bottom: 1px; border-width: 0.5rem 0.5rem 0px; border-top-col=
or: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"right"], .bs-popover-right { margin-left: =
0.5rem; }

.bs-popover-auto[x-placement^=3D"right"] > .arrow, .bs-popover-right > .arr=
ow { left: calc((0.5rem + 1px) * -1); width: 0.5rem; height: 1rem; margin: =
0.3rem 0px; }

.bs-popover-auto[x-placement^=3D"right"] > .arrow::before, .bs-popover-righ=
t > .arrow::before { left: 0px; border-width: 0.5rem 0.5rem 0.5rem 0px; bor=
der-right-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"right"] > .arrow::after, .bs-popover-right=
 > .arrow::after { left: 1px; border-width: 0.5rem 0.5rem 0.5rem 0px; borde=
r-right-color: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"bottom"], .bs-popover-bottom { margin-top:=
 0.5rem; }

.bs-popover-auto[x-placement^=3D"bottom"] > .arrow, .bs-popover-bottom > .a=
rrow { top: calc((0.5rem + 1px) * -1); }

.bs-popover-auto[x-placement^=3D"bottom"] > .arrow::before, .bs-popover-bot=
tom > .arrow::before { top: 0px; border-width: 0px 0.5rem 0.5rem; border-bo=
ttom-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"bottom"] > .arrow::after, .bs-popover-bott=
om > .arrow::after { top: 1px; border-width: 0px 0.5rem 0.5rem; border-bott=
om-color: rgb(255, 255, 255); }

.bs-popover-auto[x-placement^=3D"bottom"] .popover-header::before, .bs-popo=
ver-bottom .popover-header::before { position: absolute; top: 0px; left: 50=
%; display: block; width: 1rem; margin-left: -0.5rem; content: ""; border-b=
ottom: 1px solid rgb(247, 247, 247); }

.bs-popover-auto[x-placement^=3D"left"], .bs-popover-left { margin-right: 0=
.5rem; }

.bs-popover-auto[x-placement^=3D"left"] > .arrow, .bs-popover-left > .arrow=
 { right: calc((0.5rem + 1px) * -1); width: 0.5rem; height: 1rem; margin: 0=
.3rem 0px; }

.bs-popover-auto[x-placement^=3D"left"] > .arrow::before, .bs-popover-left =
> .arrow::before { right: 0px; border-width: 0.5rem 0px 0.5rem 0.5rem; bord=
er-left-color: rgba(0, 0, 0, 0.25); }

.bs-popover-auto[x-placement^=3D"left"] > .arrow::after, .bs-popover-left >=
 .arrow::after { right: 1px; border-width: 0.5rem 0px 0.5rem 0.5rem; border=
-left-color: rgb(255, 255, 255); }

.popover-header { padding: 0.5rem 0.75rem; margin-bottom: 0px; font-size: 1=
rem; background-color: rgb(247, 247, 247); border-bottom: 1px solid rgb(235=
, 235, 235); border-top-left-radius: calc(0.3rem - 1px); border-top-right-r=
adius: calc(0.3rem - 1px); }

.popover-header:empty { display: none; }

.popover-body { padding: 0.5rem 0.75rem; color: rgb(33, 37, 41); }

.carousel { position: relative; }

.carousel.pointer-event { touch-action: pan-y; }

.carousel-inner { position: relative; width: 100%; overflow: hidden; }

.carousel-inner::after { display: block; clear: both; content: ""; }

.carousel-item { position: relative; display: none; float: left; width: 100=
%; margin-right: -100%; backface-visibility: hidden; transition: transform =
0.6s ease-in-out 0s, -webkit-transform 0.6s ease-in-out 0s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-item { transition: none 0s ease 0s; }
}

.carousel-item-next, .carousel-item-prev, .carousel-item.active { display: =
block; }

.active.carousel-item-right, .carousel-item-next:not(.carousel-item-left) {=
 transform: translateX(100%); }

.active.carousel-item-left, .carousel-item-prev:not(.carousel-item-right) {=
 transform: translateX(-100%); }

.carousel-fade .carousel-item { opacity: 0; transition-property: opacity; t=
ransform: none; }

.carousel-fade .carousel-item-next.carousel-item-left, .carousel-fade .caro=
usel-item-prev.carousel-item-right, .carousel-fade .carousel-item.active { =
z-index: 1; opacity: 1; }

.carousel-fade .active.carousel-item-left, .carousel-fade .active.carousel-=
item-right { z-index: 0; opacity: 0; transition: opacity 0s ease 0.6s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-fade .active.carousel-item-left, .carousel-fade .active.carouse=
l-item-right { transition: none 0s ease 0s; }
}

.carousel-control-next, .carousel-control-prev { position: absolute; top: 0=
px; bottom: 0px; z-index: 1; display: flex; align-items: center; justify-co=
ntent: center; width: 15%; color: rgb(255, 255, 255); text-align: center; o=
pacity: 0.5; transition: opacity 0.15s ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-control-next, .carousel-control-prev { transition: none 0s ease=
 0s; }
}

.carousel-control-next:focus, .carousel-control-next:hover, .carousel-contr=
ol-prev:focus, .carousel-control-prev:hover { color: rgb(255, 255, 255); te=
xt-decoration: none; outline: 0px; opacity: 0.9; }

.carousel-control-prev { left: 0px; }

.carousel-control-next { right: 0px; }

.carousel-control-next-icon, .carousel-control-prev-icon { display: inline-=
block; width: 20px; height: 20px; background: 50% center / 100% 100% no-rep=
eat; }

.carousel-control-prev-icon { background-image: url("data:image/svg+xml,%3c=
svg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'%23fff' viewBox=3D'0 0 8 8=
'%3e%3cpath d=3D'M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3e%3c/=
svg%3e"); }

.carousel-control-next-icon { background-image: url("data:image/svg+xml,%3c=
svg xmlns=3D'http://www.w3.org/2000/svg' fill=3D'%23fff' viewBox=3D'0 0 8 8=
'%3e%3cpath d=3D'M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3e%3c/=
svg%3e"); }

.carousel-indicators { position: absolute; right: 0px; bottom: 0px; left: 0=
px; z-index: 15; display: flex; justify-content: center; padding-left: 0px;=
 margin-right: 15%; margin-left: 15%; list-style: none; }

.carousel-indicators li { box-sizing: content-box; flex: 0 1 auto; width: 3=
0px; height: 3px; margin-right: 3px; margin-left: 3px; text-indent: -999px;=
 cursor: pointer; background-color: rgb(255, 255, 255); background-clip: pa=
dding-box; border-top: 10px solid transparent; border-bottom: 10px solid tr=
ansparent; opacity: 0.5; transition: opacity 0.6s ease 0s; }

@media (prefers-reduced-motion: reduce) {
  .carousel-indicators li { transition: none 0s ease 0s; }
}

.carousel-indicators .active { opacity: 1; }

.carousel-caption { position: absolute; right: 15%; bottom: 20px; left: 15%=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; }

@-webkit-keyframes spinner-border {=20
  100% { transform: rotate(360deg); }
}

@keyframes spinner-border {=20
  100% { transform: rotate(360deg); }
}

.spinner-border { display: inline-block; width: 2rem; height: 2rem; vertica=
l-align: text-bottom; border-width: 0.25em; border-style: solid; border-col=
or: currentcolor transparent currentcolor currentcolor; border-image: initi=
al; border-radius: 50%; animation: 0.75s linear 0s infinite normal none run=
ning spinner-border; }

.spinner-border-sm { width: 1rem; height: 1rem; border-width: 0.2em; }

@-webkit-keyframes spinner-grow {=20
  0% { transform: scale(0); }
  50% { opacity: 1; }
}

@keyframes spinner-grow {=20
  0% { transform: scale(0); }
  50% { opacity: 1; }
}

.spinner-grow { display: inline-block; width: 2rem; height: 2rem; vertical-=
align: text-bottom; background-color: currentcolor; border-radius: 50%; opa=
city: 0; animation: 0.75s linear 0s infinite normal none running spinner-gr=
ow; }

.spinner-grow-sm { width: 1rem; height: 1rem; }

.align-baseline { vertical-align: baseline !important; }

.align-top { vertical-align: top !important; }

.align-middle { vertical-align: middle !important; }

.align-bottom { vertical-align: bottom !important; }

.align-text-bottom { vertical-align: text-bottom !important; }

.align-text-top { vertical-align: text-top !important; }

.bg-primary { background-color: rgb(0, 123, 255) !important; }

a.bg-primary:focus, a.bg-primary:hover, button.bg-primary:focus, button.bg-=
primary:hover { background-color: rgb(0, 98, 204) !important; }

.bg-secondary { background-color: rgb(108, 117, 125) !important; }

a.bg-secondary:focus, a.bg-secondary:hover, button.bg-secondary:focus, butt=
on.bg-secondary:hover { background-color: rgb(84, 91, 98) !important; }

.bg-success { background-color: rgb(40, 167, 69) !important; }

a.bg-success:focus, a.bg-success:hover, button.bg-success:focus, button.bg-=
success:hover { background-color: rgb(30, 126, 52) !important; }

.bg-info { background-color: rgb(23, 162, 184) !important; }

a.bg-info:focus, a.bg-info:hover, button.bg-info:focus, button.bg-info:hove=
r { background-color: rgb(17, 122, 139) !important; }

.bg-warning { background-color: rgb(255, 193, 7) !important; }

a.bg-warning:focus, a.bg-warning:hover, button.bg-warning:focus, button.bg-=
warning:hover { background-color: rgb(211, 158, 0) !important; }

.bg-danger { background-color: rgb(220, 53, 69) !important; }

a.bg-danger:focus, a.bg-danger:hover, button.bg-danger:focus, button.bg-dan=
ger:hover { background-color: rgb(189, 33, 48) !important; }

.bg-light { background-color: rgb(248, 249, 250) !important; }

a.bg-light:focus, a.bg-light:hover, button.bg-light:focus, button.bg-light:=
hover { background-color: rgb(218, 224, 229) !important; }

.bg-dark { background-color: rgb(52, 58, 64) !important; }

a.bg-dark:focus, a.bg-dark:hover, button.bg-dark:focus, button.bg-dark:hove=
r { background-color: rgb(29, 33, 36) !important; }

.bg-white { background-color: rgb(255, 255, 255) !important; }

.bg-transparent { background-color: transparent !important; }

.border { border: 1px solid rgb(222, 226, 230) !important; }

.border-top { border-top: 1px solid rgb(222, 226, 230) !important; }

.border-right { border-right: 1px solid rgb(222, 226, 230) !important; }

.border-bottom { border-bottom: 1px solid rgb(222, 226, 230) !important; }

.border-left { border-left: 1px solid rgb(222, 226, 230) !important; }

.border-0 { border: 0px !important; }

.border-top-0 { border-top: 0px !important; }

.border-right-0 { border-right: 0px !important; }

.border-bottom-0 { border-bottom: 0px !important; }

.border-left-0 { border-left: 0px !important; }

.border-primary { border-color: rgb(0, 123, 255) !important; }

.border-secondary { border-color: rgb(108, 117, 125) !important; }

.border-success { border-color: rgb(40, 167, 69) !important; }

.border-info { border-color: rgb(23, 162, 184) !important; }

.border-warning { border-color: rgb(255, 193, 7) !important; }

.border-danger { border-color: rgb(220, 53, 69) !important; }

.border-light { border-color: rgb(248, 249, 250) !important; }

.border-dark { border-color: rgb(52, 58, 64) !important; }

.border-white { border-color: rgb(255, 255, 255) !important; }

.rounded-sm { border-radius: 0.2rem !important; }

.rounded { border-radius: 0.25rem !important; }

.rounded-top { border-top-left-radius: 0.25rem !important; border-top-right=
-radius: 0.25rem !important; }

.rounded-right { border-top-right-radius: 0.25rem !important; border-bottom=
-right-radius: 0.25rem !important; }

.rounded-bottom { border-bottom-right-radius: 0.25rem !important; border-bo=
ttom-left-radius: 0.25rem !important; }

.rounded-left { border-top-left-radius: 0.25rem !important; border-bottom-l=
eft-radius: 0.25rem !important; }

.rounded-lg { border-radius: 0.3rem !important; }

.rounded-circle { border-radius: 50% !important; }

.rounded-pill { border-radius: 50rem !important; }

.rounded-0 { border-radius: 0px !important; }

.clearfix::after { display: block; clear: both; content: ""; }

.d-none { display: none !important; }

.d-inline { display: inline !important; }

.d-inline-block { display: inline-block !important; }

.d-block { display: block !important; }

.d-table { display: table !important; }

.d-table-row { display: table-row !important; }

.d-table-cell { display: table-cell !important; }

.d-flex { display: flex !important; }

.d-inline-flex { display: inline-flex !important; }

@media (min-width: 576px) {
  .d-sm-none { display: none !important; }
  .d-sm-inline { display: inline !important; }
  .d-sm-inline-block { display: inline-block !important; }
  .d-sm-block { display: block !important; }
  .d-sm-table { display: table !important; }
  .d-sm-table-row { display: table-row !important; }
  .d-sm-table-cell { display: table-cell !important; }
  .d-sm-flex { display: flex !important; }
  .d-sm-inline-flex { display: inline-flex !important; }
}

@media (min-width: 768px) {
  .d-md-none { display: none !important; }
  .d-md-inline { display: inline !important; }
  .d-md-inline-block { display: inline-block !important; }
  .d-md-block { display: block !important; }
  .d-md-table { display: table !important; }
  .d-md-table-row { display: table-row !important; }
  .d-md-table-cell { display: table-cell !important; }
  .d-md-flex { display: flex !important; }
  .d-md-inline-flex { display: inline-flex !important; }
}

@media (min-width: 992px) {
  .d-lg-none { display: none !important; }
  .d-lg-inline { display: inline !important; }
  .d-lg-inline-block { display: inline-block !important; }
  .d-lg-block { display: block !important; }
  .d-lg-table { display: table !important; }
  .d-lg-table-row { display: table-row !important; }
  .d-lg-table-cell { display: table-cell !important; }
  .d-lg-flex { display: flex !important; }
  .d-lg-inline-flex { display: inline-flex !important; }
}

@media (min-width: 1200px) {
  .d-xl-none { display: none !important; }
  .d-xl-inline { display: inline !important; }
  .d-xl-inline-block { display: inline-block !important; }
  .d-xl-block { display: block !important; }
  .d-xl-table { display: table !important; }
  .d-xl-table-row { display: table-row !important; }
  .d-xl-table-cell { display: table-cell !important; }
  .d-xl-flex { display: flex !important; }
  .d-xl-inline-flex { display: inline-flex !important; }
}

@media print {
  .d-print-none { display: none !important; }
  .d-print-inline { display: inline !important; }
  .d-print-inline-block { display: inline-block !important; }
  .d-print-block { display: block !important; }
  .d-print-table { display: table !important; }
  .d-print-table-row { display: table-row !important; }
  .d-print-table-cell { display: table-cell !important; }
  .d-print-flex { display: flex !important; }
  .d-print-inline-flex { display: inline-flex !important; }
}

.embed-responsive { position: relative; display: block; width: 100%; paddin=
g: 0px; overflow: hidden; }

.embed-responsive::before { display: block; content: ""; }

.embed-responsive .embed-responsive-item, .embed-responsive embed, .embed-r=
esponsive iframe, .embed-responsive object, .embed-responsive video { posit=
ion: absolute; top: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;=
 border: 0px; }

.embed-responsive-21by9::before { padding-top: 42.8571%; }

.embed-responsive-16by9::before { padding-top: 56.25%; }

.embed-responsive-4by3::before { padding-top: 75%; }

.embed-responsive-1by1::before { padding-top: 100%; }

.flex-row { flex-direction: row !important; }

.flex-column { flex-direction: column !important; }

.flex-row-reverse { flex-direction: row-reverse !important; }

.flex-column-reverse { flex-direction: column-reverse !important; }

.flex-wrap { flex-wrap: wrap !important; }

.flex-nowrap { flex-wrap: nowrap !important; }

.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.flex-fill { flex: 1 1 auto !important; }

.flex-grow-0 { flex-grow: 0 !important; }

.flex-grow-1 { flex-grow: 1 !important; }

.flex-shrink-0 { flex-shrink: 0 !important; }

.flex-shrink-1 { flex-shrink: 1 !important; }

.justify-content-start { justify-content: flex-start !important; }

.justify-content-end { justify-content: flex-end !important; }

.justify-content-center { justify-content: center !important; }

.justify-content-between { justify-content: space-between !important; }

.justify-content-around { justify-content: space-around !important; }

.align-items-start { align-items: flex-start !important; }

.align-items-end { align-items: flex-end !important; }

.align-items-center { align-items: center !important; }

.align-items-baseline { align-items: baseline !important; }

.align-items-stretch { align-items: stretch !important; }

.align-content-start { align-content: flex-start !important; }

.align-content-end { align-content: flex-end !important; }

.align-content-center { align-content: center !important; }

.align-content-between { align-content: space-between !important; }

.align-content-around { align-content: space-around !important; }

.align-content-stretch { align-content: stretch !important; }

.align-self-auto { align-self: auto !important; }

.align-self-start { align-self: flex-start !important; }

.align-self-end { align-self: flex-end !important; }

.align-self-center { align-self: center !important; }

.align-self-baseline { align-self: baseline !important; }

.align-self-stretch { align-self: stretch !important; }

@media (min-width: 576px) {
  .flex-sm-row { flex-direction: row !important; }
  .flex-sm-column { flex-direction: column !important; }
  .flex-sm-row-reverse { flex-direction: row-reverse !important; }
  .flex-sm-column-reverse { flex-direction: column-reverse !important; }
  .flex-sm-wrap { flex-wrap: wrap !important; }
  .flex-sm-nowrap { flex-wrap: nowrap !important; }
  .flex-sm-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-sm-fill { flex: 1 1 auto !important; }
  .flex-sm-grow-0 { flex-grow: 0 !important; }
  .flex-sm-grow-1 { flex-grow: 1 !important; }
  .flex-sm-shrink-0 { flex-shrink: 0 !important; }
  .flex-sm-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-sm-start { justify-content: flex-start !important; }
  .justify-content-sm-end { justify-content: flex-end !important; }
  .justify-content-sm-center { justify-content: center !important; }
  .justify-content-sm-between { justify-content: space-between !important; =
}
  .justify-content-sm-around { justify-content: space-around !important; }
  .align-items-sm-start { align-items: flex-start !important; }
  .align-items-sm-end { align-items: flex-end !important; }
  .align-items-sm-center { align-items: center !important; }
  .align-items-sm-baseline { align-items: baseline !important; }
  .align-items-sm-stretch { align-items: stretch !important; }
  .align-content-sm-start { align-content: flex-start !important; }
  .align-content-sm-end { align-content: flex-end !important; }
  .align-content-sm-center { align-content: center !important; }
  .align-content-sm-between { align-content: space-between !important; }
  .align-content-sm-around { align-content: space-around !important; }
  .align-content-sm-stretch { align-content: stretch !important; }
  .align-self-sm-auto { align-self: auto !important; }
  .align-self-sm-start { align-self: flex-start !important; }
  .align-self-sm-end { align-self: flex-end !important; }
  .align-self-sm-center { align-self: center !important; }
  .align-self-sm-baseline { align-self: baseline !important; }
  .align-self-sm-stretch { align-self: stretch !important; }
}

@media (min-width: 768px) {
  .flex-md-row { flex-direction: row !important; }
  .flex-md-column { flex-direction: column !important; }
  .flex-md-row-reverse { flex-direction: row-reverse !important; }
  .flex-md-column-reverse { flex-direction: column-reverse !important; }
  .flex-md-wrap { flex-wrap: wrap !important; }
  .flex-md-nowrap { flex-wrap: nowrap !important; }
  .flex-md-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-md-fill { flex: 1 1 auto !important; }
  .flex-md-grow-0 { flex-grow: 0 !important; }
  .flex-md-grow-1 { flex-grow: 1 !important; }
  .flex-md-shrink-0 { flex-shrink: 0 !important; }
  .flex-md-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-md-start { justify-content: flex-start !important; }
  .justify-content-md-end { justify-content: flex-end !important; }
  .justify-content-md-center { justify-content: center !important; }
  .justify-content-md-between { justify-content: space-between !important; =
}
  .justify-content-md-around { justify-content: space-around !important; }
  .align-items-md-start { align-items: flex-start !important; }
  .align-items-md-end { align-items: flex-end !important; }
  .align-items-md-center { align-items: center !important; }
  .align-items-md-baseline { align-items: baseline !important; }
  .align-items-md-stretch { align-items: stretch !important; }
  .align-content-md-start { align-content: flex-start !important; }
  .align-content-md-end { align-content: flex-end !important; }
  .align-content-md-center { align-content: center !important; }
  .align-content-md-between { align-content: space-between !important; }
  .align-content-md-around { align-content: space-around !important; }
  .align-content-md-stretch { align-content: stretch !important; }
  .align-self-md-auto { align-self: auto !important; }
  .align-self-md-start { align-self: flex-start !important; }
  .align-self-md-end { align-self: flex-end !important; }
  .align-self-md-center { align-self: center !important; }
  .align-self-md-baseline { align-self: baseline !important; }
  .align-self-md-stretch { align-self: stretch !important; }
}

@media (min-width: 992px) {
  .flex-lg-row { flex-direction: row !important; }
  .flex-lg-column { flex-direction: column !important; }
  .flex-lg-row-reverse { flex-direction: row-reverse !important; }
  .flex-lg-column-reverse { flex-direction: column-reverse !important; }
  .flex-lg-wrap { flex-wrap: wrap !important; }
  .flex-lg-nowrap { flex-wrap: nowrap !important; }
  .flex-lg-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-lg-fill { flex: 1 1 auto !important; }
  .flex-lg-grow-0 { flex-grow: 0 !important; }
  .flex-lg-grow-1 { flex-grow: 1 !important; }
  .flex-lg-shrink-0 { flex-shrink: 0 !important; }
  .flex-lg-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-lg-start { justify-content: flex-start !important; }
  .justify-content-lg-end { justify-content: flex-end !important; }
  .justify-content-lg-center { justify-content: center !important; }
  .justify-content-lg-between { justify-content: space-between !important; =
}
  .justify-content-lg-around { justify-content: space-around !important; }
  .align-items-lg-start { align-items: flex-start !important; }
  .align-items-lg-end { align-items: flex-end !important; }
  .align-items-lg-center { align-items: center !important; }
  .align-items-lg-baseline { align-items: baseline !important; }
  .align-items-lg-stretch { align-items: stretch !important; }
  .align-content-lg-start { align-content: flex-start !important; }
  .align-content-lg-end { align-content: flex-end !important; }
  .align-content-lg-center { align-content: center !important; }
  .align-content-lg-between { align-content: space-between !important; }
  .align-content-lg-around { align-content: space-around !important; }
  .align-content-lg-stretch { align-content: stretch !important; }
  .align-self-lg-auto { align-self: auto !important; }
  .align-self-lg-start { align-self: flex-start !important; }
  .align-self-lg-end { align-self: flex-end !important; }
  .align-self-lg-center { align-self: center !important; }
  .align-self-lg-baseline { align-self: baseline !important; }
  .align-self-lg-stretch { align-self: stretch !important; }
}

@media (min-width: 1200px) {
  .flex-xl-row { flex-direction: row !important; }
  .flex-xl-column { flex-direction: column !important; }
  .flex-xl-row-reverse { flex-direction: row-reverse !important; }
  .flex-xl-column-reverse { flex-direction: column-reverse !important; }
  .flex-xl-wrap { flex-wrap: wrap !important; }
  .flex-xl-nowrap { flex-wrap: nowrap !important; }
  .flex-xl-wrap-reverse { flex-wrap: wrap-reverse !important; }
  .flex-xl-fill { flex: 1 1 auto !important; }
  .flex-xl-grow-0 { flex-grow: 0 !important; }
  .flex-xl-grow-1 { flex-grow: 1 !important; }
  .flex-xl-shrink-0 { flex-shrink: 0 !important; }
  .flex-xl-shrink-1 { flex-shrink: 1 !important; }
  .justify-content-xl-start { justify-content: flex-start !important; }
  .justify-content-xl-end { justify-content: flex-end !important; }
  .justify-content-xl-center { justify-content: center !important; }
  .justify-content-xl-between { justify-content: space-between !important; =
}
  .justify-content-xl-around { justify-content: space-around !important; }
  .align-items-xl-start { align-items: flex-start !important; }
  .align-items-xl-end { align-items: flex-end !important; }
  .align-items-xl-center { align-items: center !important; }
  .align-items-xl-baseline { align-items: baseline !important; }
  .align-items-xl-stretch { align-items: stretch !important; }
  .align-content-xl-start { align-content: flex-start !important; }
  .align-content-xl-end { align-content: flex-end !important; }
  .align-content-xl-center { align-content: center !important; }
  .align-content-xl-between { align-content: space-between !important; }
  .align-content-xl-around { align-content: space-around !important; }
  .align-content-xl-stretch { align-content: stretch !important; }
  .align-self-xl-auto { align-self: auto !important; }
  .align-self-xl-start { align-self: flex-start !important; }
  .align-self-xl-end { align-self: flex-end !important; }
  .align-self-xl-center { align-self: center !important; }
  .align-self-xl-baseline { align-self: baseline !important; }
  .align-self-xl-stretch { align-self: stretch !important; }
}

.float-left { float: left !important; }

.float-right { float: right !important; }

.float-none { float: none !important; }

@media (min-width: 576px) {
  .float-sm-left { float: left !important; }
  .float-sm-right { float: right !important; }
  .float-sm-none { float: none !important; }
}

@media (min-width: 768px) {
  .float-md-left { float: left !important; }
  .float-md-right { float: right !important; }
  .float-md-none { float: none !important; }
}

@media (min-width: 992px) {
  .float-lg-left { float: left !important; }
  .float-lg-right { float: right !important; }
  .float-lg-none { float: none !important; }
}

@media (min-width: 1200px) {
  .float-xl-left { float: left !important; }
  .float-xl-right { float: right !important; }
  .float-xl-none { float: none !important; }
}

.overflow-auto { overflow: auto !important; }

.overflow-hidden { overflow: hidden !important; }

.position-static { position: static !important; }

.position-relative { position: relative !important; }

.position-absolute { position: absolute !important; }

.position-fixed { position: fixed !important; }

.position-sticky { position: sticky !important; }

.fixed-top { position: fixed; top: 0px; right: 0px; left: 0px; z-index: 103=
0; }

.fixed-bottom { position: fixed; right: 0px; bottom: 0px; left: 0px; z-inde=
x: 1030; }

@supports ((position:-webkit-sticky) or (position:sticky)) {
  .sticky-top { position: sticky; top: 0px; z-index: 1020; }
}

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; overf=
low: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: nowrap; border: 0=
px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; overflow: visible; clip: auto; white-space: normal;=
 }

.shadow-sm { box-shadow: rgba(0, 0, 0, 0.075) 0px 0.125rem 0.25rem !importa=
nt; }

.shadow { box-shadow: rgba(0, 0, 0, 0.15) 0px 0.5rem 1rem !important; }

.shadow-lg { box-shadow: rgba(0, 0, 0, 0.176) 0px 1rem 3rem !important; }

.shadow-none { box-shadow: none !important; }

.w-25 { width: 25% !important; }

.w-50 { width: 50% !important; }

.w-75 { width: 75% !important; }

.w-100 { width: 100% !important; }

.w-auto { width: auto !important; }

.h-25 { height: 25% !important; }

.h-50 { height: 50% !important; }

.h-75 { height: 75% !important; }

.h-100 { height: 100% !important; }

.h-auto { height: auto !important; }

.mw-100 { max-width: 100% !important; }

.mh-100 { max-height: 100% !important; }

.min-vw-100 { min-width: 100vw !important; }

.min-vh-100 { min-height: 100vh !important; }

.vw-100 { width: 100vw !important; }

.vh-100 { height: 100vh !important; }

.stretched-link::after { position: absolute; inset: 0px; z-index: 1; pointe=
r-events: auto; content: ""; background-color: rgba(0, 0, 0, 0); }

.m-0 { margin: 0px !important; }

.mt-0, .my-0 { margin-top: 0px !important; }

.mr-0, .mx-0 { margin-right: 0px !important; }

.mb-0, .my-0 { margin-bottom: 0px !important; }

.ml-0, .mx-0 { margin-left: 0px !important; }

.m-1 { margin: 0.25rem !important; }

.mt-1, .my-1 { margin-top: 0.25rem !important; }

.mr-1, .mx-1 { margin-right: 0.25rem !important; }

.mb-1, .my-1 { margin-bottom: 0.25rem !important; }

.ml-1, .mx-1 { margin-left: 0.25rem !important; }

.m-2 { margin: 0.5rem !important; }

.mt-2, .my-2 { margin-top: 0.5rem !important; }

.mr-2, .mx-2 { margin-right: 0.5rem !important; }

.mb-2, .my-2 { margin-bottom: 0.5rem !important; }

.ml-2, .mx-2 { margin-left: 0.5rem !important; }

.m-3 { margin: 1rem !important; }

.mt-3, .my-3 { margin-top: 1rem !important; }

.mr-3, .mx-3 { margin-right: 1rem !important; }

.mb-3, .my-3 { margin-bottom: 1rem !important; }

.ml-3, .mx-3 { margin-left: 1rem !important; }

.m-4 { margin: 1.5rem !important; }

.mt-4, .my-4 { margin-top: 1.5rem !important; }

.mr-4, .mx-4 { margin-right: 1.5rem !important; }

.mb-4, .my-4 { margin-bottom: 1.5rem !important; }

.ml-4, .mx-4 { margin-left: 1.5rem !important; }

.m-5 { margin: 3rem !important; }

.mt-5, .my-5 { margin-top: 3rem !important; }

.mr-5, .mx-5 { margin-right: 3rem !important; }

.mb-5, .my-5 { margin-bottom: 3rem !important; }

.ml-5, .mx-5 { margin-left: 3rem !important; }

.p-0 { padding: 0px !important; }

.pt-0, .py-0 { padding-top: 0px !important; }

.pr-0, .px-0 { padding-right: 0px !important; }

.pb-0, .py-0 { padding-bottom: 0px !important; }

.pl-0, .px-0 { padding-left: 0px !important; }

.p-1 { padding: 0.25rem !important; }

.pt-1, .py-1 { padding-top: 0.25rem !important; }

.pr-1, .px-1 { padding-right: 0.25rem !important; }

.pb-1, .py-1 { padding-bottom: 0.25rem !important; }

.pl-1, .px-1 { padding-left: 0.25rem !important; }

.p-2 { padding: 0.5rem !important; }

.pt-2, .py-2 { padding-top: 0.5rem !important; }

.pr-2, .px-2 { padding-right: 0.5rem !important; }

.pb-2, .py-2 { padding-bottom: 0.5rem !important; }

.pl-2, .px-2 { padding-left: 0.5rem !important; }

.p-3 { padding: 1rem !important; }

.pt-3, .py-3 { padding-top: 1rem !important; }

.pr-3, .px-3 { padding-right: 1rem !important; }

.pb-3, .py-3 { padding-bottom: 1rem !important; }

.pl-3, .px-3 { padding-left: 1rem !important; }

.p-4 { padding: 1.5rem !important; }

.pt-4, .py-4 { padding-top: 1.5rem !important; }

.pr-4, .px-4 { padding-right: 1.5rem !important; }

.pb-4, .py-4 { padding-bottom: 1.5rem !important; }

.pl-4, .px-4 { padding-left: 1.5rem !important; }

.p-5 { padding: 3rem !important; }

.pt-5, .py-5 { padding-top: 3rem !important; }

.pr-5, .px-5 { padding-right: 3rem !important; }

.pb-5, .py-5 { padding-bottom: 3rem !important; }

.pl-5, .px-5 { padding-left: 3rem !important; }

.m-n1 { margin: -0.25rem !important; }

.mt-n1, .my-n1 { margin-top: -0.25rem !important; }

.mr-n1, .mx-n1 { margin-right: -0.25rem !important; }

.mb-n1, .my-n1 { margin-bottom: -0.25rem !important; }

.ml-n1, .mx-n1 { margin-left: -0.25rem !important; }

.m-n2 { margin: -0.5rem !important; }

.mt-n2, .my-n2 { margin-top: -0.5rem !important; }

.mr-n2, .mx-n2 { margin-right: -0.5rem !important; }

.mb-n2, .my-n2 { margin-bottom: -0.5rem !important; }

.ml-n2, .mx-n2 { margin-left: -0.5rem !important; }

.m-n3 { margin: -1rem !important; }

.mt-n3, .my-n3 { margin-top: -1rem !important; }

.mr-n3, .mx-n3 { margin-right: -1rem !important; }

.mb-n3, .my-n3 { margin-bottom: -1rem !important; }

.ml-n3, .mx-n3 { margin-left: -1rem !important; }

.m-n4 { margin: -1.5rem !important; }

.mt-n4, .my-n4 { margin-top: -1.5rem !important; }

.mr-n4, .mx-n4 { margin-right: -1.5rem !important; }

.mb-n4, .my-n4 { margin-bottom: -1.5rem !important; }

.ml-n4, .mx-n4 { margin-left: -1.5rem !important; }

.m-n5 { margin: -3rem !important; }

.mt-n5, .my-n5 { margin-top: -3rem !important; }

.mr-n5, .mx-n5 { margin-right: -3rem !important; }

.mb-n5, .my-n5 { margin-bottom: -3rem !important; }

.ml-n5, .mx-n5 { margin-left: -3rem !important; }

.m-auto { margin: auto !important; }

.mt-auto, .my-auto { margin-top: auto !important; }

.mr-auto, .mx-auto { margin-right: auto !important; }

.mb-auto, .my-auto { margin-bottom: auto !important; }

.ml-auto, .mx-auto { margin-left: auto !important; }

@media (min-width: 576px) {
  .m-sm-0 { margin: 0px !important; }
  .mt-sm-0, .my-sm-0 { margin-top: 0px !important; }
  .mr-sm-0, .mx-sm-0 { margin-right: 0px !important; }
  .mb-sm-0, .my-sm-0 { margin-bottom: 0px !important; }
  .ml-sm-0, .mx-sm-0 { margin-left: 0px !important; }
  .m-sm-1 { margin: 0.25rem !important; }
  .mt-sm-1, .my-sm-1 { margin-top: 0.25rem !important; }
  .mr-sm-1, .mx-sm-1 { margin-right: 0.25rem !important; }
  .mb-sm-1, .my-sm-1 { margin-bottom: 0.25rem !important; }
  .ml-sm-1, .mx-sm-1 { margin-left: 0.25rem !important; }
  .m-sm-2 { margin: 0.5rem !important; }
  .mt-sm-2, .my-sm-2 { margin-top: 0.5rem !important; }
  .mr-sm-2, .mx-sm-2 { margin-right: 0.5rem !important; }
  .mb-sm-2, .my-sm-2 { margin-bottom: 0.5rem !important; }
  .ml-sm-2, .mx-sm-2 { margin-left: 0.5rem !important; }
  .m-sm-3 { margin: 1rem !important; }
  .mt-sm-3, .my-sm-3 { margin-top: 1rem !important; }
  .mr-sm-3, .mx-sm-3 { margin-right: 1rem !important; }
  .mb-sm-3, .my-sm-3 { margin-bottom: 1rem !important; }
  .ml-sm-3, .mx-sm-3 { margin-left: 1rem !important; }
  .m-sm-4 { margin: 1.5rem !important; }
  .mt-sm-4, .my-sm-4 { margin-top: 1.5rem !important; }
  .mr-sm-4, .mx-sm-4 { margin-right: 1.5rem !important; }
  .mb-sm-4, .my-sm-4 { margin-bottom: 1.5rem !important; }
  .ml-sm-4, .mx-sm-4 { margin-left: 1.5rem !important; }
  .m-sm-5 { margin: 3rem !important; }
  .mt-sm-5, .my-sm-5 { margin-top: 3rem !important; }
  .mr-sm-5, .mx-sm-5 { margin-right: 3rem !important; }
  .mb-sm-5, .my-sm-5 { margin-bottom: 3rem !important; }
  .ml-sm-5, .mx-sm-5 { margin-left: 3rem !important; }
  .p-sm-0 { padding: 0px !important; }
  .pt-sm-0, .py-sm-0 { padding-top: 0px !important; }
  .pr-sm-0, .px-sm-0 { padding-right: 0px !important; }
  .pb-sm-0, .py-sm-0 { padding-bottom: 0px !important; }
  .pl-sm-0, .px-sm-0 { padding-left: 0px !important; }
  .p-sm-1 { padding: 0.25rem !important; }
  .pt-sm-1, .py-sm-1 { padding-top: 0.25rem !important; }
  .pr-sm-1, .px-sm-1 { padding-right: 0.25rem !important; }
  .pb-sm-1, .py-sm-1 { padding-bottom: 0.25rem !important; }
  .pl-sm-1, .px-sm-1 { padding-left: 0.25rem !important; }
  .p-sm-2 { padding: 0.5rem !important; }
  .pt-sm-2, .py-sm-2 { padding-top: 0.5rem !important; }
  .pr-sm-2, .px-sm-2 { padding-right: 0.5rem !important; }
  .pb-sm-2, .py-sm-2 { padding-bottom: 0.5rem !important; }
  .pl-sm-2, .px-sm-2 { padding-left: 0.5rem !important; }
  .p-sm-3 { padding: 1rem !important; }
  .pt-sm-3, .py-sm-3 { padding-top: 1rem !important; }
  .pr-sm-3, .px-sm-3 { padding-right: 1rem !important; }
  .pb-sm-3, .py-sm-3 { padding-bottom: 1rem !important; }
  .pl-sm-3, .px-sm-3 { padding-left: 1rem !important; }
  .p-sm-4 { padding: 1.5rem !important; }
  .pt-sm-4, .py-sm-4 { padding-top: 1.5rem !important; }
  .pr-sm-4, .px-sm-4 { padding-right: 1.5rem !important; }
  .pb-sm-4, .py-sm-4 { padding-bottom: 1.5rem !important; }
  .pl-sm-4, .px-sm-4 { padding-left: 1.5rem !important; }
  .p-sm-5 { padding: 3rem !important; }
  .pt-sm-5, .py-sm-5 { padding-top: 3rem !important; }
  .pr-sm-5, .px-sm-5 { padding-right: 3rem !important; }
  .pb-sm-5, .py-sm-5 { padding-bottom: 3rem !important; }
  .pl-sm-5, .px-sm-5 { padding-left: 3rem !important; }
  .m-sm-n1 { margin: -0.25rem !important; }
  .mt-sm-n1, .my-sm-n1 { margin-top: -0.25rem !important; }
  .mr-sm-n1, .mx-sm-n1 { margin-right: -0.25rem !important; }
  .mb-sm-n1, .my-sm-n1 { margin-bottom: -0.25rem !important; }
  .ml-sm-n1, .mx-sm-n1 { margin-left: -0.25rem !important; }
  .m-sm-n2 { margin: -0.5rem !important; }
  .mt-sm-n2, .my-sm-n2 { margin-top: -0.5rem !important; }
  .mr-sm-n2, .mx-sm-n2 { margin-right: -0.5rem !important; }
  .mb-sm-n2, .my-sm-n2 { margin-bottom: -0.5rem !important; }
  .ml-sm-n2, .mx-sm-n2 { margin-left: -0.5rem !important; }
  .m-sm-n3 { margin: -1rem !important; }
  .mt-sm-n3, .my-sm-n3 { margin-top: -1rem !important; }
  .mr-sm-n3, .mx-sm-n3 { margin-right: -1rem !important; }
  .mb-sm-n3, .my-sm-n3 { margin-bottom: -1rem !important; }
  .ml-sm-n3, .mx-sm-n3 { margin-left: -1rem !important; }
  .m-sm-n4 { margin: -1.5rem !important; }
  .mt-sm-n4, .my-sm-n4 { margin-top: -1.5rem !important; }
  .mr-sm-n4, .mx-sm-n4 { margin-right: -1.5rem !important; }
  .mb-sm-n4, .my-sm-n4 { margin-bottom: -1.5rem !important; }
  .ml-sm-n4, .mx-sm-n4 { margin-left: -1.5rem !important; }
  .m-sm-n5 { margin: -3rem !important; }
  .mt-sm-n5, .my-sm-n5 { margin-top: -3rem !important; }
  .mr-sm-n5, .mx-sm-n5 { margin-right: -3rem !important; }
  .mb-sm-n5, .my-sm-n5 { margin-bottom: -3rem !important; }
  .ml-sm-n5, .mx-sm-n5 { margin-left: -3rem !important; }
  .m-sm-auto { margin: auto !important; }
  .mt-sm-auto, .my-sm-auto { margin-top: auto !important; }
  .mr-sm-auto, .mx-sm-auto { margin-right: auto !important; }
  .mb-sm-auto, .my-sm-auto { margin-bottom: auto !important; }
  .ml-sm-auto, .mx-sm-auto { margin-left: auto !important; }
}

@media (min-width: 768px) {
  .m-md-0 { margin: 0px !important; }
  .mt-md-0, .my-md-0 { margin-top: 0px !important; }
  .mr-md-0, .mx-md-0 { margin-right: 0px !important; }
  .mb-md-0, .my-md-0 { margin-bottom: 0px !important; }
  .ml-md-0, .mx-md-0 { margin-left: 0px !important; }
  .m-md-1 { margin: 0.25rem !important; }
  .mt-md-1, .my-md-1 { margin-top: 0.25rem !important; }
  .mr-md-1, .mx-md-1 { margin-right: 0.25rem !important; }
  .mb-md-1, .my-md-1 { margin-bottom: 0.25rem !important; }
  .ml-md-1, .mx-md-1 { margin-left: 0.25rem !important; }
  .m-md-2 { margin: 0.5rem !important; }
  .mt-md-2, .my-md-2 { margin-top: 0.5rem !important; }
  .mr-md-2, .mx-md-2 { margin-right: 0.5rem !important; }
  .mb-md-2, .my-md-2 { margin-bottom: 0.5rem !important; }
  .ml-md-2, .mx-md-2 { margin-left: 0.5rem !important; }
  .m-md-3 { margin: 1rem !important; }
  .mt-md-3, .my-md-3 { margin-top: 1rem !important; }
  .mr-md-3, .mx-md-3 { margin-right: 1rem !important; }
  .mb-md-3, .my-md-3 { margin-bottom: 1rem !important; }
  .ml-md-3, .mx-md-3 { margin-left: 1rem !important; }
  .m-md-4 { margin: 1.5rem !important; }
  .mt-md-4, .my-md-4 { margin-top: 1.5rem !important; }
  .mr-md-4, .mx-md-4 { margin-right: 1.5rem !important; }
  .mb-md-4, .my-md-4 { margin-bottom: 1.5rem !important; }
  .ml-md-4, .mx-md-4 { margin-left: 1.5rem !important; }
  .m-md-5 { margin: 3rem !important; }
  .mt-md-5, .my-md-5 { margin-top: 3rem !important; }
  .mr-md-5, .mx-md-5 { margin-right: 3rem !important; }
  .mb-md-5, .my-md-5 { margin-bottom: 3rem !important; }
  .ml-md-5, .mx-md-5 { margin-left: 3rem !important; }
  .p-md-0 { padding: 0px !important; }
  .pt-md-0, .py-md-0 { padding-top: 0px !important; }
  .pr-md-0, .px-md-0 { padding-right: 0px !important; }
  .pb-md-0, .py-md-0 { padding-bottom: 0px !important; }
  .pl-md-0, .px-md-0 { padding-left: 0px !important; }
  .p-md-1 { padding: 0.25rem !important; }
  .pt-md-1, .py-md-1 { padding-top: 0.25rem !important; }
  .pr-md-1, .px-md-1 { padding-right: 0.25rem !important; }
  .pb-md-1, .py-md-1 { padding-bottom: 0.25rem !important; }
  .pl-md-1, .px-md-1 { padding-left: 0.25rem !important; }
  .p-md-2 { padding: 0.5rem !important; }
  .pt-md-2, .py-md-2 { padding-top: 0.5rem !important; }
  .pr-md-2, .px-md-2 { padding-right: 0.5rem !important; }
  .pb-md-2, .py-md-2 { padding-bottom: 0.5rem !important; }
  .pl-md-2, .px-md-2 { padding-left: 0.5rem !important; }
  .p-md-3 { padding: 1rem !important; }
  .pt-md-3, .py-md-3 { padding-top: 1rem !important; }
  .pr-md-3, .px-md-3 { padding-right: 1rem !important; }
  .pb-md-3, .py-md-3 { padding-bottom: 1rem !important; }
  .pl-md-3, .px-md-3 { padding-left: 1rem !important; }
  .p-md-4 { padding: 1.5rem !important; }
  .pt-md-4, .py-md-4 { padding-top: 1.5rem !important; }
  .pr-md-4, .px-md-4 { padding-right: 1.5rem !important; }
  .pb-md-4, .py-md-4 { padding-bottom: 1.5rem !important; }
  .pl-md-4, .px-md-4 { padding-left: 1.5rem !important; }
  .p-md-5 { padding: 3rem !important; }
  .pt-md-5, .py-md-5 { padding-top: 3rem !important; }
  .pr-md-5, .px-md-5 { padding-right: 3rem !important; }
  .pb-md-5, .py-md-5 { padding-bottom: 3rem !important; }
  .pl-md-5, .px-md-5 { padding-left: 3rem !important; }
  .m-md-n1 { margin: -0.25rem !important; }
  .mt-md-n1, .my-md-n1 { margin-top: -0.25rem !important; }
  .mr-md-n1, .mx-md-n1 { margin-right: -0.25rem !important; }
  .mb-md-n1, .my-md-n1 { margin-bottom: -0.25rem !important; }
  .ml-md-n1, .mx-md-n1 { margin-left: -0.25rem !important; }
  .m-md-n2 { margin: -0.5rem !important; }
  .mt-md-n2, .my-md-n2 { margin-top: -0.5rem !important; }
  .mr-md-n2, .mx-md-n2 { margin-right: -0.5rem !important; }
  .mb-md-n2, .my-md-n2 { margin-bottom: -0.5rem !important; }
  .ml-md-n2, .mx-md-n2 { margin-left: -0.5rem !important; }
  .m-md-n3 { margin: -1rem !important; }
  .mt-md-n3, .my-md-n3 { margin-top: -1rem !important; }
  .mr-md-n3, .mx-md-n3 { margin-right: -1rem !important; }
  .mb-md-n3, .my-md-n3 { margin-bottom: -1rem !important; }
  .ml-md-n3, .mx-md-n3 { margin-left: -1rem !important; }
  .m-md-n4 { margin: -1.5rem !important; }
  .mt-md-n4, .my-md-n4 { margin-top: -1.5rem !important; }
  .mr-md-n4, .mx-md-n4 { margin-right: -1.5rem !important; }
  .mb-md-n4, .my-md-n4 { margin-bottom: -1.5rem !important; }
  .ml-md-n4, .mx-md-n4 { margin-left: -1.5rem !important; }
  .m-md-n5 { margin: -3rem !important; }
  .mt-md-n5, .my-md-n5 { margin-top: -3rem !important; }
  .mr-md-n5, .mx-md-n5 { margin-right: -3rem !important; }
  .mb-md-n5, .my-md-n5 { margin-bottom: -3rem !important; }
  .ml-md-n5, .mx-md-n5 { margin-left: -3rem !important; }
  .m-md-auto { margin: auto !important; }
  .mt-md-auto, .my-md-auto { margin-top: auto !important; }
  .mr-md-auto, .mx-md-auto { margin-right: auto !important; }
  .mb-md-auto, .my-md-auto { margin-bottom: auto !important; }
  .ml-md-auto, .mx-md-auto { margin-left: auto !important; }
}

@media (min-width: 992px) {
  .m-lg-0 { margin: 0px !important; }
  .mt-lg-0, .my-lg-0 { margin-top: 0px !important; }
  .mr-lg-0, .mx-lg-0 { margin-right: 0px !important; }
  .mb-lg-0, .my-lg-0 { margin-bottom: 0px !important; }
  .ml-lg-0, .mx-lg-0 { margin-left: 0px !important; }
  .m-lg-1 { margin: 0.25rem !important; }
  .mt-lg-1, .my-lg-1 { margin-top: 0.25rem !important; }
  .mr-lg-1, .mx-lg-1 { margin-right: 0.25rem !important; }
  .mb-lg-1, .my-lg-1 { margin-bottom: 0.25rem !important; }
  .ml-lg-1, .mx-lg-1 { margin-left: 0.25rem !important; }
  .m-lg-2 { margin: 0.5rem !important; }
  .mt-lg-2, .my-lg-2 { margin-top: 0.5rem !important; }
  .mr-lg-2, .mx-lg-2 { margin-right: 0.5rem !important; }
  .mb-lg-2, .my-lg-2 { margin-bottom: 0.5rem !important; }
  .ml-lg-2, .mx-lg-2 { margin-left: 0.5rem !important; }
  .m-lg-3 { margin: 1rem !important; }
  .mt-lg-3, .my-lg-3 { margin-top: 1rem !important; }
  .mr-lg-3, .mx-lg-3 { margin-right: 1rem !important; }
  .mb-lg-3, .my-lg-3 { margin-bottom: 1rem !important; }
  .ml-lg-3, .mx-lg-3 { margin-left: 1rem !important; }
  .m-lg-4 { margin: 1.5rem !important; }
  .mt-lg-4, .my-lg-4 { margin-top: 1.5rem !important; }
  .mr-lg-4, .mx-lg-4 { margin-right: 1.5rem !important; }
  .mb-lg-4, .my-lg-4 { margin-bottom: 1.5rem !important; }
  .ml-lg-4, .mx-lg-4 { margin-left: 1.5rem !important; }
  .m-lg-5 { margin: 3rem !important; }
  .mt-lg-5, .my-lg-5 { margin-top: 3rem !important; }
  .mr-lg-5, .mx-lg-5 { margin-right: 3rem !important; }
  .mb-lg-5, .my-lg-5 { margin-bottom: 3rem !important; }
  .ml-lg-5, .mx-lg-5 { margin-left: 3rem !important; }
  .p-lg-0 { padding: 0px !important; }
  .pt-lg-0, .py-lg-0 { padding-top: 0px !important; }
  .pr-lg-0, .px-lg-0 { padding-right: 0px !important; }
  .pb-lg-0, .py-lg-0 { padding-bottom: 0px !important; }
  .pl-lg-0, .px-lg-0 { padding-left: 0px !important; }
  .p-lg-1 { padding: 0.25rem !important; }
  .pt-lg-1, .py-lg-1 { padding-top: 0.25rem !important; }
  .pr-lg-1, .px-lg-1 { padding-right: 0.25rem !important; }
  .pb-lg-1, .py-lg-1 { padding-bottom: 0.25rem !important; }
  .pl-lg-1, .px-lg-1 { padding-left: 0.25rem !important; }
  .p-lg-2 { padding: 0.5rem !important; }
  .pt-lg-2, .py-lg-2 { padding-top: 0.5rem !important; }
  .pr-lg-2, .px-lg-2 { padding-right: 0.5rem !important; }
  .pb-lg-2, .py-lg-2 { padding-bottom: 0.5rem !important; }
  .pl-lg-2, .px-lg-2 { padding-left: 0.5rem !important; }
  .p-lg-3 { padding: 1rem !important; }
  .pt-lg-3, .py-lg-3 { padding-top: 1rem !important; }
  .pr-lg-3, .px-lg-3 { padding-right: 1rem !important; }
  .pb-lg-3, .py-lg-3 { padding-bottom: 1rem !important; }
  .pl-lg-3, .px-lg-3 { padding-left: 1rem !important; }
  .p-lg-4 { padding: 1.5rem !important; }
  .pt-lg-4, .py-lg-4 { padding-top: 1.5rem !important; }
  .pr-lg-4, .px-lg-4 { padding-right: 1.5rem !important; }
  .pb-lg-4, .py-lg-4 { padding-bottom: 1.5rem !important; }
  .pl-lg-4, .px-lg-4 { padding-left: 1.5rem !important; }
  .p-lg-5 { padding: 3rem !important; }
  .pt-lg-5, .py-lg-5 { padding-top: 3rem !important; }
  .pr-lg-5, .px-lg-5 { padding-right: 3rem !important; }
  .pb-lg-5, .py-lg-5 { padding-bottom: 3rem !important; }
  .pl-lg-5, .px-lg-5 { padding-left: 3rem !important; }
  .m-lg-n1 { margin: -0.25rem !important; }
  .mt-lg-n1, .my-lg-n1 { margin-top: -0.25rem !important; }
  .mr-lg-n1, .mx-lg-n1 { margin-right: -0.25rem !important; }
  .mb-lg-n1, .my-lg-n1 { margin-bottom: -0.25rem !important; }
  .ml-lg-n1, .mx-lg-n1 { margin-left: -0.25rem !important; }
  .m-lg-n2 { margin: -0.5rem !important; }
  .mt-lg-n2, .my-lg-n2 { margin-top: -0.5rem !important; }
  .mr-lg-n2, .mx-lg-n2 { margin-right: -0.5rem !important; }
  .mb-lg-n2, .my-lg-n2 { margin-bottom: -0.5rem !important; }
  .ml-lg-n2, .mx-lg-n2 { margin-left: -0.5rem !important; }
  .m-lg-n3 { margin: -1rem !important; }
  .mt-lg-n3, .my-lg-n3 { margin-top: -1rem !important; }
  .mr-lg-n3, .mx-lg-n3 { margin-right: -1rem !important; }
  .mb-lg-n3, .my-lg-n3 { margin-bottom: -1rem !important; }
  .ml-lg-n3, .mx-lg-n3 { margin-left: -1rem !important; }
  .m-lg-n4 { margin: -1.5rem !important; }
  .mt-lg-n4, .my-lg-n4 { margin-top: -1.5rem !important; }
  .mr-lg-n4, .mx-lg-n4 { margin-right: -1.5rem !important; }
  .mb-lg-n4, .my-lg-n4 { margin-bottom: -1.5rem !important; }
  .ml-lg-n4, .mx-lg-n4 { margin-left: -1.5rem !important; }
  .m-lg-n5 { margin: -3rem !important; }
  .mt-lg-n5, .my-lg-n5 { margin-top: -3rem !important; }
  .mr-lg-n5, .mx-lg-n5 { margin-right: -3rem !important; }
  .mb-lg-n5, .my-lg-n5 { margin-bottom: -3rem !important; }
  .ml-lg-n5, .mx-lg-n5 { margin-left: -3rem !important; }
  .m-lg-auto { margin: auto !important; }
  .mt-lg-auto, .my-lg-auto { margin-top: auto !important; }
  .mr-lg-auto, .mx-lg-auto { margin-right: auto !important; }
  .mb-lg-auto, .my-lg-auto { margin-bottom: auto !important; }
  .ml-lg-auto, .mx-lg-auto { margin-left: auto !important; }
}

@media (min-width: 1200px) {
  .m-xl-0 { margin: 0px !important; }
  .mt-xl-0, .my-xl-0 { margin-top: 0px !important; }
  .mr-xl-0, .mx-xl-0 { margin-right: 0px !important; }
  .mb-xl-0, .my-xl-0 { margin-bottom: 0px !important; }
  .ml-xl-0, .mx-xl-0 { margin-left: 0px !important; }
  .m-xl-1 { margin: 0.25rem !important; }
  .mt-xl-1, .my-xl-1 { margin-top: 0.25rem !important; }
  .mr-xl-1, .mx-xl-1 { margin-right: 0.25rem !important; }
  .mb-xl-1, .my-xl-1 { margin-bottom: 0.25rem !important; }
  .ml-xl-1, .mx-xl-1 { margin-left: 0.25rem !important; }
  .m-xl-2 { margin: 0.5rem !important; }
  .mt-xl-2, .my-xl-2 { margin-top: 0.5rem !important; }
  .mr-xl-2, .mx-xl-2 { margin-right: 0.5rem !important; }
  .mb-xl-2, .my-xl-2 { margin-bottom: 0.5rem !important; }
  .ml-xl-2, .mx-xl-2 { margin-left: 0.5rem !important; }
  .m-xl-3 { margin: 1rem !important; }
  .mt-xl-3, .my-xl-3 { margin-top: 1rem !important; }
  .mr-xl-3, .mx-xl-3 { margin-right: 1rem !important; }
  .mb-xl-3, .my-xl-3 { margin-bottom: 1rem !important; }
  .ml-xl-3, .mx-xl-3 { margin-left: 1rem !important; }
  .m-xl-4 { margin: 1.5rem !important; }
  .mt-xl-4, .my-xl-4 { margin-top: 1.5rem !important; }
  .mr-xl-4, .mx-xl-4 { margin-right: 1.5rem !important; }
  .mb-xl-4, .my-xl-4 { margin-bottom: 1.5rem !important; }
  .ml-xl-4, .mx-xl-4 { margin-left: 1.5rem !important; }
  .m-xl-5 { margin: 3rem !important; }
  .mt-xl-5, .my-xl-5 { margin-top: 3rem !important; }
  .mr-xl-5, .mx-xl-5 { margin-right: 3rem !important; }
  .mb-xl-5, .my-xl-5 { margin-bottom: 3rem !important; }
  .ml-xl-5, .mx-xl-5 { margin-left: 3rem !important; }
  .p-xl-0 { padding: 0px !important; }
  .pt-xl-0, .py-xl-0 { padding-top: 0px !important; }
  .pr-xl-0, .px-xl-0 { padding-right: 0px !important; }
  .pb-xl-0, .py-xl-0 { padding-bottom: 0px !important; }
  .pl-xl-0, .px-xl-0 { padding-left: 0px !important; }
  .p-xl-1 { padding: 0.25rem !important; }
  .pt-xl-1, .py-xl-1 { padding-top: 0.25rem !important; }
  .pr-xl-1, .px-xl-1 { padding-right: 0.25rem !important; }
  .pb-xl-1, .py-xl-1 { padding-bottom: 0.25rem !important; }
  .pl-xl-1, .px-xl-1 { padding-left: 0.25rem !important; }
  .p-xl-2 { padding: 0.5rem !important; }
  .pt-xl-2, .py-xl-2 { padding-top: 0.5rem !important; }
  .pr-xl-2, .px-xl-2 { padding-right: 0.5rem !important; }
  .pb-xl-2, .py-xl-2 { padding-bottom: 0.5rem !important; }
  .pl-xl-2, .px-xl-2 { padding-left: 0.5rem !important; }
  .p-xl-3 { padding: 1rem !important; }
  .pt-xl-3, .py-xl-3 { padding-top: 1rem !important; }
  .pr-xl-3, .px-xl-3 { padding-right: 1rem !important; }
  .pb-xl-3, .py-xl-3 { padding-bottom: 1rem !important; }
  .pl-xl-3, .px-xl-3 { padding-left: 1rem !important; }
  .p-xl-4 { padding: 1.5rem !important; }
  .pt-xl-4, .py-xl-4 { padding-top: 1.5rem !important; }
  .pr-xl-4, .px-xl-4 { padding-right: 1.5rem !important; }
  .pb-xl-4, .py-xl-4 { padding-bottom: 1.5rem !important; }
  .pl-xl-4, .px-xl-4 { padding-left: 1.5rem !important; }
  .p-xl-5 { padding: 3rem !important; }
  .pt-xl-5, .py-xl-5 { padding-top: 3rem !important; }
  .pr-xl-5, .px-xl-5 { padding-right: 3rem !important; }
  .pb-xl-5, .py-xl-5 { padding-bottom: 3rem !important; }
  .pl-xl-5, .px-xl-5 { padding-left: 3rem !important; }
  .m-xl-n1 { margin: -0.25rem !important; }
  .mt-xl-n1, .my-xl-n1 { margin-top: -0.25rem !important; }
  .mr-xl-n1, .mx-xl-n1 { margin-right: -0.25rem !important; }
  .mb-xl-n1, .my-xl-n1 { margin-bottom: -0.25rem !important; }
  .ml-xl-n1, .mx-xl-n1 { margin-left: -0.25rem !important; }
  .m-xl-n2 { margin: -0.5rem !important; }
  .mt-xl-n2, .my-xl-n2 { margin-top: -0.5rem !important; }
  .mr-xl-n2, .mx-xl-n2 { margin-right: -0.5rem !important; }
  .mb-xl-n2, .my-xl-n2 { margin-bottom: -0.5rem !important; }
  .ml-xl-n2, .mx-xl-n2 { margin-left: -0.5rem !important; }
  .m-xl-n3 { margin: -1rem !important; }
  .mt-xl-n3, .my-xl-n3 { margin-top: -1rem !important; }
  .mr-xl-n3, .mx-xl-n3 { margin-right: -1rem !important; }
  .mb-xl-n3, .my-xl-n3 { margin-bottom: -1rem !important; }
  .ml-xl-n3, .mx-xl-n3 { margin-left: -1rem !important; }
  .m-xl-n4 { margin: -1.5rem !important; }
  .mt-xl-n4, .my-xl-n4 { margin-top: -1.5rem !important; }
  .mr-xl-n4, .mx-xl-n4 { margin-right: -1.5rem !important; }
  .mb-xl-n4, .my-xl-n4 { margin-bottom: -1.5rem !important; }
  .ml-xl-n4, .mx-xl-n4 { margin-left: -1.5rem !important; }
  .m-xl-n5 { margin: -3rem !important; }
  .mt-xl-n5, .my-xl-n5 { margin-top: -3rem !important; }
  .mr-xl-n5, .mx-xl-n5 { margin-right: -3rem !important; }
  .mb-xl-n5, .my-xl-n5 { margin-bottom: -3rem !important; }
  .ml-xl-n5, .mx-xl-n5 { margin-left: -3rem !important; }
  .m-xl-auto { margin: auto !important; }
  .mt-xl-auto, .my-xl-auto { margin-top: auto !important; }
  .mr-xl-auto, .mx-xl-auto { margin-right: auto !important; }
  .mb-xl-auto, .my-xl-auto { margin-bottom: auto !important; }
  .ml-xl-auto, .mx-xl-auto { margin-left: auto !important; }
}

.text-monospace { font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Li=
beration Mono", "Courier New", monospace !important; }

.text-justify { text-align: justify !important; }

.text-wrap { white-space: normal !important; }

.text-nowrap { white-space: nowrap !important; }

.text-truncate { overflow: hidden; text-overflow: ellipsis; white-space: no=
wrap; }

.text-left { text-align: left !important; }

.text-right { text-align: right !important; }

.text-center { text-align: center !important; }

@media (min-width: 576px) {
  .text-sm-left { text-align: left !important; }
  .text-sm-right { text-align: right !important; }
  .text-sm-center { text-align: center !important; }
}

@media (min-width: 768px) {
  .text-md-left { text-align: left !important; }
  .text-md-right { text-align: right !important; }
  .text-md-center { text-align: center !important; }
}

@media (min-width: 992px) {
  .text-lg-left { text-align: left !important; }
  .text-lg-right { text-align: right !important; }
  .text-lg-center { text-align: center !important; }
}

@media (min-width: 1200px) {
  .text-xl-left { text-align: left !important; }
  .text-xl-right { text-align: right !important; }
  .text-xl-center { text-align: center !important; }
}

.text-lowercase { text-transform: lowercase !important; }

.text-uppercase { text-transform: uppercase !important; }

.text-capitalize { text-transform: capitalize !important; }

.font-weight-light { font-weight: 300 !important; }

.font-weight-lighter { font-weight: lighter !important; }

.font-weight-normal { font-weight: 400 !important; }

.font-weight-bold { font-weight: 700 !important; }

.font-weight-bolder { font-weight: bolder !important; }

.font-italic { font-style: italic !important; }

.text-white { color: rgb(255, 255, 255) !important; }

.text-primary { color: rgb(0, 123, 255) !important; }

a.text-primary:focus, a.text-primary:hover { color: rgb(0, 86, 179) !import=
ant; }

.text-secondary { color: rgb(108, 117, 125) !important; }

a.text-secondary:focus, a.text-secondary:hover { color: rgb(73, 79, 84) !im=
portant; }

.text-success { color: rgb(40, 167, 69) !important; }

a.text-success:focus, a.text-success:hover { color: rgb(25, 105, 44) !impor=
tant; }

.text-info { color: rgb(23, 162, 184) !important; }

a.text-info:focus, a.text-info:hover { color: rgb(15, 102, 116) !important;=
 }

.text-warning { color: rgb(255, 193, 7) !important; }

a.text-warning:focus, a.text-warning:hover { color: rgb(186, 139, 0) !impor=
tant; }

.text-danger { color: rgb(220, 53, 69) !important; }

a.text-danger:focus, a.text-danger:hover { color: rgb(167, 29, 42) !importa=
nt; }

.text-light { color: rgb(248, 249, 250) !important; }

a.text-light:focus, a.text-light:hover { color: rgb(203, 211, 218) !importa=
nt; }

.text-dark { color: rgb(52, 58, 64) !important; }

a.text-dark:focus, a.text-dark:hover { color: rgb(18, 20, 22) !important; }

.text-body { color: rgb(33, 37, 41) !important; }

.text-muted { color: rgb(108, 117, 125) !important; }

.text-black-50 { color: rgba(0, 0, 0, 0.5) !important; }

.text-white-50 { color: rgba(255, 255, 255, 0.5) !important; }

.text-hide { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.text-decoration-none { text-decoration: none !important; }

.text-break { word-break: break-word !important; overflow-wrap: break-word =
!important; }

.text-reset { color: inherit !important; }

.visible { visibility: visible !important; }

.invisible { visibility: hidden !important; }

@media print {
  *, ::after, ::before { text-shadow: none !important; box-shadow: none !im=
portant; }
  a:not(.btn) { text-decoration: underline; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  pre { white-space: pre-wrap !important; }
  blockquote, pre { border: 1px solid rgb(173, 181, 189); break-inside: avo=
id; }
  thead { display: table-header-group; }
  img, tr { break-inside: avoid; }
  h2, h3, p { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
  @page { size: a3; }
  body { min-width: 992px !important; }
  .container { min-width: 992px !important; }
  .navbar { display: none; }
  .badge { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .table-bordered td, .table-bordered th { border: 1px solid rgb(222, 226, =
230) !important; }
  .table-dark { color: inherit; }
  .table-dark tbody + tbody, .table-dark td, .table-dark th, .table-dark th=
ead th { border-color: rgb(222, 226, 230); }
  .table .thead-dark th { color: inherit; border-color: rgb(222, 226, 230);=
 }
}
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/pygments.css

@charset "utf-8";

pre { line-height: 125%; }

td.linenos .normal { color: inherit; background-color: transparent; padding=
-left: 5px; padding-right: 5px; }

span.linenos { color: inherit; background-color: transparent; padding-left:=
 5px; padding-right: 5px; }

td.linenos .special { color: rgb(0, 0, 0); background-color: rgb(255, 255, =
192); padding-left: 5px; padding-right: 5px; }

span.linenos.special { color: rgb(0, 0, 0); background-color: rgb(255, 255,=
 192); padding-left: 5px; padding-right: 5px; }

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(238, 255, 204); }

.highlight .c { color: rgb(64, 128, 144); font-style: italic; }

.highlight .err { border: 1px solid rgb(255, 0, 0); }

.highlight .k { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .o { color: rgb(102, 102, 102); }

.highlight .ch { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cm { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cp { color: rgb(0, 112, 32); }

.highlight .cpf { color: rgb(64, 128, 144); font-style: italic; }

.highlight .c1 { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cs { color: rgb(64, 128, 144); background-color: rgb(255, 240, =
240); }

.highlight .gd { color: rgb(160, 0, 0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(255, 0, 0); }

.highlight .gh { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gi { color: rgb(0, 160, 0); }

.highlight .go { color: rgb(51, 51, 51); }

.highlight .gp { color: rgb(198, 93, 9); font-weight: bold; }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(128, 0, 128); font-weight: bold; }

.highlight .gt { color: rgb(0, 68, 221); }

.highlight .kc { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kd { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kn { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kp { color: rgb(0, 112, 32); }

.highlight .kr { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kt { color: rgb(144, 32, 0); }

.highlight .m { color: rgb(32, 128, 80); }

.highlight .s { color: rgb(64, 112, 160); }

.highlight .na { color: rgb(64, 112, 160); }

.highlight .nb { color: rgb(0, 112, 32); }

.highlight .nc { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .no { color: rgb(96, 173, 213); }

.highlight .nd { color: rgb(85, 85, 85); font-weight: bold; }

.highlight .ni { color: rgb(213, 85, 55); font-weight: bold; }

.highlight .ne { color: rgb(0, 112, 32); }

.highlight .nf { color: rgb(6, 40, 126); }

.highlight .nl { color: rgb(0, 32, 112); font-weight: bold; }

.highlight .nn { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .nt { color: rgb(6, 40, 115); font-weight: bold; }

.highlight .nv { color: rgb(187, 96, 213); }

.highlight .ow { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .mb { color: rgb(32, 128, 80); }

.highlight .mf { color: rgb(32, 128, 80); }

.highlight .mh { color: rgb(32, 128, 80); }

.highlight .mi { color: rgb(32, 128, 80); }

.highlight .mo { color: rgb(32, 128, 80); }

.highlight .sa { color: rgb(64, 112, 160); }

.highlight .sb { color: rgb(64, 112, 160); }

.highlight .sc { color: rgb(64, 112, 160); }

.highlight .dl { color: rgb(64, 112, 160); }

.highlight .sd { color: rgb(64, 112, 160); font-style: italic; }

.highlight .s2 { color: rgb(64, 112, 160); }

.highlight .se { color: rgb(64, 112, 160); font-weight: bold; }

.highlight .sh { color: rgb(64, 112, 160); }

.highlight .si { color: rgb(112, 160, 208); font-style: italic; }

.highlight .sx { color: rgb(198, 93, 9); }

.highlight .sr { color: rgb(35, 83, 136); }

.highlight .s1 { color: rgb(64, 112, 160); }

.highlight .ss { color: rgb(81, 121, 24); }

.highlight .bp { color: rgb(0, 112, 32); }

.highlight .fm { color: rgb(6, 40, 126); }

.highlight .vc { color: rgb(187, 96, 213); }

.highlight .vg { color: rgb(187, 96, 213); }

.highlight .vi { color: rgb(187, 96, 213); }

.highlight .vm { color: rgb(187, 96, 213); }

.highlight .il { color: rgb(32, 128, 80); }
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/css/theme.css

@charset "utf-8";

a { color: rgb(40, 120, 162); overflow-wrap: break-word; }

a:focus { outline: none; }

a.headerlink { color: rgb(198, 15, 15); font-size: 0.8em; padding: 0px 4px;=
 text-decoration: none; visibility: hidden; }

a.headerlink:hover { background-color: rgb(198, 15, 15); color: white; }

p { word-break: break-word; hyphens: auto; }

input:focus { outline: none; }

code { color: rgb(34, 34, 34); background-color: rgb(236, 240, 243); border=
-radius: 0.2rem; padding: 0.15rem; word-break: normal; }

nav { z-index: 3; }

h1 code, h2 code, h3 code, h4 code, h5 code, h6 code { background-color: tr=
ansparent; }

h1:hover a.headerlink, h2:hover a.headerlink, h3:hover a.headerlink, h4:hov=
er a.headerlink, h5:hover a.headerlink, h6:hover a.headerlink, dt:hover a.h=
eaderlink { visibility: visible; }

strong { font-weight: bold; }

a code { color: inherit; }

a code { background-color: transparent; font-weight: bold; color: rgb(40, 1=
20, 162); border-radius: 0px; padding: 0px; white-space: nowrap; }

img { max-width: 100%; }

span.highlighted { background-color: rgb(251, 229, 78); }

div.highlight { border: 1px solid rgb(221, 221, 221); margin-bottom: 1rem; =
}

div.highlight pre { padding: 0.2rem 0.5rem; margin-bottom: 0px; line-height=
: 1.2rem; }

div.highlight a { text-decoration: underline; }

.versionmodified { font-style: italic; }

a.sk-landing-btn { background-color: rgb(255, 156, 52); color: black; curso=
r: pointer; font-size: 1.1rem; font-weight: 500; }

a.sk-landing-btn:hover { background-color: rgb(255, 176, 95); }

.sk-donate-btn { cursor: pointer; }

.sk-page-content div.logo { float: left; width: 200px; }

@media screen and (min-width: 992px) {
  .sk-page-content { padding-left: 2rem !important; padding-right: 2rem !im=
portant; }
}

@media screen and (min-width: 1200px) {
  .sk-px-xl-4 { padding-left: 1.3rem !important; padding-right: 1.3rem !imp=
ortant; }
}

div.clearer { clear: both; }

.sk-btn-primary { background-color: rgb(48, 121, 156); border-color: rgb(48=
, 121, 156); color: white; }

.sk-btn-primary:hover, .sk-btn-primary:active { background-color: rgb(52, 1=
53, 205); border-color: rgb(52, 153, 205); }

.quote { text-align: right; line-height: 1.5em; font-style: italic; margin:=
 2em 3em 1em; }

.line-block { display: block; margin-top: 1em; margin-bottom: 1em; }

#search-results { margin-top: 1rem; }

#searchbox { padding-top: 0.1rem; }

.sk-search-text-input { width: 12rem; }

.sk-search-text-btn { padding-left: 0.2rem; padding-right: 0.2rem; }

ul.search li div.context { color: rgb(136, 136, 136); margin: 0.1rem 0px 0p=
x; text-align: left; }

@media screen and (min-width: 768px) {
  ul.search li div.context { margin-left: 1rem; }
}

ul.search li a { font-weight: bold; }

img.sk-brand-img { height: 48px; }

.navbar-light .navbar-nav a.nav-link, a.sk-dropdown-item { color: rgb(77, 7=
7, 77); font-weight: 500; }

.navbar-light .navbar-nav a.nav-link:hover, a.sk-dropdown-item:hover { colo=
r: rgb(246, 126, 0); }

a.sk-nav-dropdown-item:active { color: white; background-color: rgb(246, 12=
6, 0); }

.nav-more-item-mobile-items { display: inherit; }

.nav-more-item-dropdown { display: none; }

@media screen and (min-width: 768px) {
  .nav-more-item-dropdown { display: inherit; }
  .nav-more-item-mobile-items { display: none; }
}

div.sk-landing-container { max-width: 1400px; }

div.sk-landing-container .text-white { text-shadow: rgb(42, 98, 128) 0px 0p=
x 8px; }

ul.sk-landing-header-body { margin-top: auto; margin-bottom: auto; font-siz=
e: 1.2rem; font-weight: 500; }

div.sk-landing-bg-more-info dd { padding-left: 0px; }

div.sk-landing-bg { background-image: linear-gradient(160deg, rgb(42, 98, 1=
28) 0%, rgb(52, 153, 205) 17%, rgb(255, 243, 211) 59%, rgb(255, 178, 96) 10=
0%); }

div.sk-landing-bg-more-info { background-color: rgb(248, 248, 248); font-si=
ze: 0.96rem; }

.sk-card-title { font-weight: 700; }

.sk-landing-header { font-size: 3.2rem; }

.sk-landing-subheader { letter-spacing: 0.17rem; }

.sk-landing-call-header { color: rgb(224, 114, 0); font-weight: 700; }

img.sk-index-img { max-height: 240px; margin: auto auto 1em; width: auto; }

@media screen and (min-width: 768px) {
  img.sk-index-img { width: 100%; }
}

img.sk-who-uses-carousel-img { max-height: 100px; max-width: 50%; }

div#carouselExampleSlidesOnly { min-height: 200px; }

ul.sk-landing-call-list li { margin-bottom: 0.25rem; }

img.sk-footer-funding-logo { max-height: 36px; max-width: 80px; margin: 0px=
 8px 8px; }

a.sk-footer-funding-link:hover { text-decoration: none; }

.navbar > .sk-docs-container { max-width: 1400px; margin: 0px auto; }

#sk-sidebar-wrapper { height: 100%; overflow: hidden; position: fixed; marg=
in-left: -240px; width: 240px; transition: margin 0.25s ease-out 0s, opacit=
y 0.25s ease-out 0s; background-color: white; opacity: 0; top: 0px; padding=
: 0px 0.5rem 0.5rem; z-index: 2; }

#sk-toggle-checkbox { display: none; }

#sk-toggle-checkbox:checked ~ #sk-sidebar-wrapper { margin-left: 0px; opaci=
ty: 1; }

#sk-doc-wrapper { max-width: 1400px; margin: 0px auto; }

#sk-page-content-wrapper { width: 100%; }

div.sk-page-content { background-color: white; position: relative; margin-t=
op: 0.5rem; }

div.sk-page-content { table-layout: fixed; max-width: 100%; }

div.section h2, div.section h3, div.section h4, div.section h5, div.section=
 h6 { margin-top: 1rem; }

.sk-btn-toggle-toc { position: fixed; bottom: 0px; margin: 0px; border-radi=
us: 0px 0.5rem 0px 0px; z-index: 3; cursor: pointer; }

div.sk-page-content { margin-top: 52px; }

@media screen and (min-width: 1400px) {
  .sk-btn-toggle-toc { border-top-left-radius: 0.5rem; }
}

.sk-btn-toggle-toc:hover { color: white; background-color: rgb(41, 124, 167=
); }

footer.sk-content-footer { padding: 1rem 0px; color: rgb(153, 153, 153); te=
xt-align: right; }

nav.sk-docs-navbar { width: 100%; z-index: 3; transition: top 0.2s ease-in-=
out 0.05s; position: fixed; max-height: 100vh; overflow-y: auto; align-item=
s: initial; }

div.sk-navbar-collapse { padding-bottom: 4rem; }

@media screen and (min-width: 768px) {
  nav.sk-docs-navbar { overflow-y: visible; max-height: none; }
  div.sk-navbar-collapse { padding-bottom: 0px; }
  #sk-page-content-wrapper { padding-left: 240px; max-width: 1240px; margin=
-left: auto; margin-right: auto; }
  #sk-sidebar-wrapper { margin-left: 0px; opacity: 1; }
  #sk-toggle-checkbox:checked ~ #sk-sidebar-wrapper { margin-left: -240px; =
opacity: 0; }
  #sk-toggle-checkbox:checked ~ #sk-page-content-wrapper { padding-left: 0p=
x; margin-left: auto; margin-right: auto; }
}

.centered { text-align: center; }

dl.citation > dd > ol > li { display: inline; }

dl.citation > dd > ol { margin-bottom: 0px; }

div.sk-documentation-index-card { border-left: 0.15rem solid rgb(255, 156, =
52); }

div.sk-documentation-index-card:hover { box-shadow: rgba(0, 0, 0, 0.15) 0px=
 0.5rem 1rem; }

a.sk-documentation-index-anchor:hover { text-decoration: none; color: rgb(4=
0, 120, 162); }

.sk-documentation-index-header { background-color: rgb(205, 232, 239); padd=
ing: 0.5rem; border-radius: 0px 1rem; text-align: center; font-size: 2rem; =
font-weight: 500; }

div.sk-sidebar-toc-logo { height: 52px; }

.sk-toc-active { font-weight: bold; }

div.sk-sidebar-toc-wrapper { font-size: 0.9rem; width: 252px; overflow: hid=
den scroll; height: 100vh; padding-right: 1.75rem; }

div.sk-sidebar-toc-wrapper::-webkit-scrollbar { display: none; }

div.sk-sidebar-toc-wrapper::after { display: block; content: ""; height: 3r=
em; visibility: hidden; }

div.sk-sidebar-toc > ul > li > a { font-weight: bold; }

div.sk-sidebar-toc > ul, div.sk-sidebar-toc ul ul { list-style: none; margi=
n-left: 0px; padding-left: 0px; }

div.sk-sidebar-toc ul ul ul { margin-left: 1rem; }

div.sk-sidebar-toc ul li ul li ul { display: none; }

div.sk-sidebar-toc span { white-space: pre; }

div.sk-sidebar-global-toc ul ul { padding-left: 0.75rem; }

div.sk-page-content h1 { background-color: rgb(205, 232, 239); padding: 0.5=
rem; border-radius: 0px 1rem; text-align: center; font-size: 2rem; overflow=
-wrap: break-word; }

div.sk-page-content h2 { padding: 0.5rem; background-color: rgb(190, 212, 2=
35); border-radius: 0.3rem; font-size: 1.5rem; margin-bottom: 1rem; overflo=
w-wrap: break-word; }

div.sk-page-content h3 { padding: 0.3rem; background-color: rgb(238, 238, 2=
38); border-radius: 0.3rem; font-size: 1.2rem; overflow-wrap: break-word; }

div.sk-page-content h4 { padding: 0.2rem; background-color: rgb(244, 244, 2=
44); border-radius: 0.3rem; font-size: 1.2rem; overflow-wrap: break-word; }

div.sk-page-content h1 code, div.sk-page-content h2 code, div.sk-page-conte=
nt h3 code, div.sk-page-content h4 code { white-space: normal; }

table.longtable p { hyphens: none; line-height: 1.1em; margin-bottom: 0px; =
}

table.longtable td, table.longtable th { border-top: 1px solid rgb(221, 221=
, 221); border-bottom: 1px solid rgb(221, 221, 221); padding-right: 0.5rem;=
 white-space: nowrap; }

table.longtable tr.row-odd { background-color: rgb(240, 247, 250); }

.class > dt, .function > dt, .method > dt { padding: 0.5rem; background-col=
or: rgb(248, 248, 248); font-weight: normal; border-width: 1px 1px 1px 2px;=
 border-style: solid; border-color: rgba(0, 0, 0, 0.125) rgba(0, 0, 0, 0.12=
5) rgba(0, 0, 0, 0.125) rgb(255, 156, 52); border-image: initial; overflow:=
 auto; margin-bottom: 1rem; }

.class > dt::after, .function > dt::after, .method > dt::after { overflow: =
auto; }

code.descname { font-weight: bold; background-color: transparent; padding: =
0px; }

code.descclassname { background-color: transparent; }

.viewcode-link { float: right; }

dl.field-list { display: flex; flex-wrap: wrap; overflow-x: scroll; }

dl.field-list > dt { flex-basis: 100%; font-weight: bold; word-break: break=
-word; }

dl.field-list > dd { flex-basis: 100%; margin-bottom: 0px; }

@media screen and (min-width: 768px) {
  dl.field-list > dt { flex-basis: 110px; }
  dl.field-list > dd { flex: 1 0 calc(100% - 110px); max-width: calc(100% -=
 110px); }
}

dt.field-odd, dt.field-even { background-color: rgb(240, 247, 250); padding=
-left: 0.25rem; }

.field-odd, .field-even { margin-top: 0px; border-bottom: 1px solid rgb(221=
, 221, 221); border-top: 1px solid rgb(221, 221, 221); box-sizing: border-b=
ox; }

dl.field-list > dt::after { content: ":"; }

.classifier { font-style: italic; }

.classifier::before { font-style: normal; margin: 0.3em; content: ":"; }

dd { padding-left: 1rem; }

dl.class > dd { padding-left: 0px; }

@media screen and (min-width: 768px) {
  dl.class > dd { padding-left: 1rem; }
}

.rubric { font-weight: bold; margin-top: 1rem; }

ul.simple li p, ol.simple li p { margin-bottom: 0px; }

ul.simple, ol.simple { padding-left: 1.5rem; }

div.topic { padding: 0.5rem; background-color: rgb(238, 238, 238); margin-b=
ottom: 1rem; border-radius: 0.25rem; border: 1px solid rgb(204, 204, 204); =
}

div.topic p { margin-bottom: 0.25rem; }

div.topic dd { margin-bottom: 0.25rem; }

p.topic-title { font-weight: bold; margin-bottom: 0.5rem; }

div.topic > ul.simple { margin-bottom: 0.25rem; }

p.admonition-title { margin-right: 0.5rem; font-weight: bold; display: inli=
ne; }

p.admonition-title::after { content: ":"; }

div.admonition p.admonition-title + p, div.deprecated p { display: inline; =
}

div.admonition, div.deprecated, div.versionchanged { margin-top: 0.5rem; pa=
dding: 0.5rem; border-radius: 0.5rem; margin-bottom: 0.5rem; border: 1px so=
lid rgb(221, 221, 221); }

div.versionadded { margin: 1rem 0px; }

div.admonition { background-color: rgb(238, 238, 238); }

div.admonition p, div.admonition dl, div.admonition dd, div.deprecated p, d=
iv.versionchanged p, div.versionadded p { margin-bottom: 0px; }

div.deprecated { color: rgb(185, 74, 72); background-color: rgb(243, 229, 2=
29); border-color: rgb(238, 211, 215); }

div.seealso { background-color: rgb(255, 251, 232); border-color: rgb(251, =
238, 213); color: rgb(175, 138, 75); }

div.versionchanged { background-color: rgb(255, 251, 232); border-color: rg=
b(251, 238, 213); }

dt.label { float: left; padding-right: 0.5rem; }

div.highlight:hover span.copybutton { background-color: rgb(63, 85, 107); c=
olor: white; }

div.highlight:hover span.copybutton:hover { background-color: rgb(32, 37, 4=
3); }

div.body img { max-width: 100%; height: unset !important; }

div.body dd > p { hyphens: none; }

img.align-center, figure.align-center, .figure.align-center, object.align-c=
enter { display: block; margin-left: auto; margin-right: auto; margin-botto=
m: 1rem; text-align: center; }

img.align-right, figure.align-right, .figure.align-right, object.align-righ=
t { clear: right; float: right; margin-left: 1em; }

a.brackets::after, span.brackets > a::after { content: "]"; }

a.brackets::before, span.brackets > a::before { content: "["; }

.copybutton { cursor: pointer; position: absolute; top: 0px; right: 0px; bo=
rder: 1px solid rgb(221, 221, 221); color: rgb(221, 221, 221); font-family:=
 monospace; padding-left: 0.2rem; padding-right: 0.2rem; }

div.highlight:hover span.copybutton::after { background: rgb(63, 85, 107); =
border-radius: 0.25rem; color: white; content: attr(title); padding: 0.25re=
m; position: absolute; z-index: 98; width: 100px; font-size: 0.7rem; top: 0=
px; right: 0px; }

img.avatar { width: 100%; }

table.align-default { margin-left: auto; margin-right: auto; }

table.docutils tr:nth-child(2n+1) { background-color: rgb(240, 247, 250); }

table.docutils tr { border-style: solid none; border-width: 1px 0px; border=
-color: rgb(221, 221, 221); }

table.docutils td, table.docutils th { padding: 0.125rem 0.5rem 0.125rem 0.=
25rem; }

table.docutils { margin-bottom: 1rem; line-height: 1rem; max-width: 100%; d=
isplay: block; overflow-x: scroll; }

table.docutils p { margin-bottom: 0px; }

table.docutils p { white-space: pre-wrap; overflow-wrap: break-word; word-b=
reak: initial; }

div.sphx-glr-thumbcontainer { min-height: 250px; font-size: 0.9rem; }

.sphx-glr-example-title > :target::before { display: block; content: ""; ma=
rgin-top: -150px; height: 150px; visibility: hidden; }

.sphx-glr-script-out .highlight pre { padding: 1ex; }

.sphx-glr-script-out div.highlight { padding: 0px; }

@media screen and (min-width: 1540px) {
  .sphx-glr-download-link-note { position: absolute; left: 98%; width: 20ex=
; }
}

table.dataframe { border-collapse: collapse; border-spacing: 0px; color: bl=
ack; font-size: 12px; table-layout: fixed; border: none !important; }

table.dataframe thead { border-bottom: 1px solid black; vertical-align: bot=
tom; }

table.dataframe tr, table.dataframe th, table.dataframe td { text-align: ri=
ght; vertical-align: middle; padding: 0.5em; line-height: normal; white-spa=
ce: normal; max-width: none; border: none; }

table.dataframe th { font-weight: bold; }

table.dataframe tbody tr:nth-child(2n+1) { background: rgb(245, 245, 245); =
}

table.dataframe tbody tr:hover { background: rgba(66, 165, 245, 0.2); }

.sk-btn-rellink { background-color: rgb(255, 156, 52); border-color: rgb(25=
5, 156, 52); color: white; cursor: pointer; font-size: 0.8rem; font-weight:=
 bold; }

.sk-btn-rellink:hover { color: black; border: 1px solid black; }

[sk-rellink-tooltip] { position: relative; cursor: pointer; }

[sk-rellink-tooltip]::before { visibility: hidden; position: absolute; padd=
ing: 0.5rem; overflow: hidden; background-color: rgb(255, 156, 52); white-s=
pace: pre; content: attr(sk-rellink-tooltip); text-align: left; width: 222p=
x; top: 100%; left: -78px; border: 1px solid black; }

[sk-rellink-tooltip]:first-child::before { left: 0px; }

[sk-rellink-tooltip]:last-child::before { left: -144px; }

[sk-rellink-tooltip]:hover::before { visibility: visible; white-space: pre-=
wrap; overflow-wrap: break-word; }

.sk-authors-container { display: flex; flex-wrap: wrap; justify-content: ce=
nter; }

.sk-authors-container > div { width: 100px; margin: 5px; font-size: 0.9rem;=
 }

div.testimonial h2 { background-color: transparent; color: rgb(0, 142, 178)=
; padding: 0px; height: 26px; line-height: 1.1em; font-size: 22px; font-wei=
ght: bold; text-align: left; }

div.testimonial p { color: rgb(28, 28, 28); }

div.testimonial span.testimonial-author p { font-size: 0.8em; font-style: i=
talic; color: rgb(128, 128, 128); }

div.testimonial p { color: rgb(28, 28, 28); }

div.install > input { appearance: none; opacity: 0; }

div.install > label { display: inline-block; margin-top: 12px; padding: 5px=
 11px; background-color: rgb(255, 243, 205); border: none; border-radius: 3=
px; color: black; }

div.install > label:hover { cursor: pointer; }

div.install > input:checked + label { background-color: rgb(255, 156, 52); =
color: white; }

.sk-expandable { display: none; }

div.highlight span.sk-expandable::before { content: "$ "; }

#quickstart-conda:checked ~ * [data-packager=3D"conda"] { display: block; }

#quickstart-conda:checked ~ label[for=3D"quickstart-venv"]::before { conten=
t: "Use conda environment"; }

#quickstart-pip:checked ~ * [data-packager=3D"pip"] { display: block; }

#quickstart-pip:checked ~ label[for=3D"quickstart-venv"]::before { content:=
 "Use pip virtualenv"; }

#quickstart-win:not(:checked) ~ * [data-os=3D"windows"] { display: none; }

#quickstart-lin:not(:checked) ~ * [data-os=3D"linux"] { display: none; }

#quickstart-mac:not(:checked) ~ * [data-os=3D"mac"] { display: none; }

#quickstart-venv:not(:checked) ~ * [data-venv=3D""] { display: none; }

#quickstart-venv:checked ~ * [data-venv=3D"no"] { display: none; }

div.sk-page-content img.map { position: absolute; max-width: none; transfor=
m-origin: left top; transform: scale(0.5); }

div.sk-sponsor-div, div.sk-testimonial-div { display: flex; flex-wrap: wrap=
; align-items: center; }

div.sk-sponsor-div-box, div.sk-testimonial-div-box { width: 100%; }

@media screen and (min-width: 500px) {
  div.sk-sponsor-div-box, div.sk-testimonial-div-box { width: 50%; }
}

table.sk-sponsor-table tr, table.sk-sponsor-table tr:nth-child(2n+1) { bord=
er-style: none; background-color: white; vertical-align: middle; text-align=
: center; }

table.sk-sponsor-table td { padding: 0.3rem; }

.caption { text-align: center; }

.highlight .hll { background-color: rgb(255, 255, 204); }

.highlight { background: rgb(248, 248, 248); }

.highlight .c { color: rgb(64, 128, 144); font-style: italic; }

.highlight .err { border: 1px solid rgb(255, 0, 0); }

.highlight .k { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .o { color: rgb(102, 102, 102); }

.highlight .ch { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cm { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cp { color: rgb(0, 112, 32); }

.highlight .cpf { color: rgb(64, 128, 144); font-style: italic; }

.highlight .c1 { color: rgb(64, 128, 144); font-style: italic; }

.highlight .cs { color: rgb(64, 128, 144); background-color: rgb(255, 240, =
240); }

.highlight .gd { color: rgb(160, 0, 0); }

.highlight .ge { font-style: italic; }

.highlight .gr { color: rgb(255, 0, 0); }

.highlight .gh { color: rgb(0, 0, 128); font-weight: bold; }

.highlight .gi { color: rgb(0, 160, 0); }

.highlight .go { color: rgb(51, 51, 51); }

.highlight .gp { color: rgb(198, 93, 9); font-weight: bold; }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(128, 0, 128); font-weight: bold; }

.highlight .gt { color: rgb(0, 68, 221); }

.highlight .kc { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kd { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kn { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kp { color: rgb(0, 112, 32); }

.highlight .kr { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .kt { color: rgb(144, 32, 0); }

.highlight .m { color: rgb(32, 128, 80); }

.highlight .s { color: rgb(64, 112, 160); }

.highlight .na { color: rgb(64, 112, 160); }

.highlight .nb { color: rgb(0, 112, 32); }

.highlight .nc { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .no { color: rgb(96, 173, 213); }

.highlight .nd { color: rgb(85, 85, 85); font-weight: bold; }

.highlight .ni { color: rgb(213, 85, 55); font-weight: bold; }

.highlight .ne { color: rgb(0, 112, 32); }

.highlight .nf { color: rgb(6, 40, 126); }

.highlight .nl { color: rgb(0, 32, 112); font-weight: bold; }

.highlight .nn { color: rgb(14, 132, 181); font-weight: bold; }

.highlight .nt { color: rgb(6, 40, 115); font-weight: bold; }

.highlight .nv { color: rgb(187, 96, 213); }

.highlight .ow { color: rgb(0, 112, 32); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight .mb { color: rgb(32, 128, 80); }

.highlight .mf { color: rgb(32, 128, 80); }

.highlight .mh { color: rgb(32, 128, 80); }

.highlight .mi { color: rgb(32, 128, 80); }

.highlight .mo { color: rgb(32, 128, 80); }

.highlight .sa { color: rgb(64, 112, 160); }

.highlight .sb { color: rgb(64, 112, 160); }

.highlight .sc { color: rgb(64, 112, 160); }

.highlight .dl { color: rgb(64, 112, 160); }

.highlight .sd { color: rgb(64, 112, 160); font-style: italic; }

.highlight .s2 { color: rgb(64, 112, 160); }

.highlight .se { color: rgb(64, 112, 160); font-weight: bold; }

.highlight .sh { color: rgb(64, 112, 160); }

.highlight .si { color: rgb(112, 160, 208); font-style: italic; }

.highlight .sx { color: rgb(198, 93, 9); }

.highlight .sr { color: rgb(35, 83, 136); }

.highlight .s1 { color: rgb(64, 112, 160); }

.highlight .ss { color: rgb(81, 121, 24); }

.highlight .bp { color: rgb(0, 112, 32); }

.highlight .fm { color: rgb(6, 40, 126); }

.highlight .vc { color: rgb(187, 96, 213); }

.highlight .vg { color: rgb(187, 96, 213); }

.highlight .vi { color: rgb(187, 96, 213); }

.highlight .vm { color: rgb(187, 96, 213); }

.highlight .il { color: rgb(32, 128, 80); }
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/plot_directive.css

@charset "utf-8";

img.plot-directive { border: 0px; max-width: 100%; }
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/sg_gallery.css

@charset "utf-8";

.sphx-glr-thumbcontainer { background: rgb(255, 255, 255); border: 1px soli=
d rgb(255, 255, 255); border-radius: 5px; box-shadow: none; float: left; ma=
rgin: 5px; min-height: 230px; padding-top: 5px; position: relative; }

.sphx-glr-thumbcontainer:hover { border: 1px solid rgb(180, 221, 252); box-=
shadow: rgba(142, 176, 202, 0.5) 0px 0px 15px; }

.sphx-glr-thumbcontainer a.internal { inset: 0px; display: block; padding: =
150px 10px 0px; position: absolute; }

.sphx-glr-thumbcontainer a.internal:hover { background-color: transparent; =
}

.sphx-glr-thumbcontainer p { margin: 0px 0px 0.1em; }

.sphx-glr-thumbcontainer .figure { margin: 10px; width: 160px; }

.sphx-glr-thumbcontainer img { display: inline; max-height: 112px; max-widt=
h: 160px; }

.sphx-glr-thumbcontainer[tooltip]:hover::after { background: rgba(0, 0, 0, =
0.8); border-radius: 5px; color: rgb(255, 255, 255); content: attr(tooltip)=
; left: 95%; padding: 5px 15px; position: absolute; z-index: 98; width: 220=
px; bottom: 52%; }

.sphx-glr-thumbcontainer[tooltip]:hover::before { border-style: solid; bord=
er-image: initial; border-color: rgb(51, 51, 51) transparent; border-width:=
 18px 0px 0px 20px; bottom: 58%; content: ""; left: 85%; position: absolute=
; z-index: 99; }

.sphx-glr-script-out { color: rgb(136, 136, 136); margin: 0px; }

p.sphx-glr-script-out { padding-top: 0.7em; }

.sphx-glr-script-out .highlight { background-color: transparent; margin-lef=
t: 2.5em; margin-top: -2.1em; }

.sphx-glr-script-out .highlight pre { background-color: rgb(250, 250, 226);=
 border: 0px; max-height: 30em; overflow: auto; padding-left: 1ex; margin: =
0px; word-break: break-word; }

.sphx-glr-script-out + p { margin-top: 1.8em; }

blockquote.sphx-glr-script-out { margin-left: 0pt; }

.sphx-glr-script-out.highlight-pytb .highlight pre { color: rgb(0, 0, 0); b=
ackground-color: rgb(255, 228, 228); border: 1px solid rgb(255, 102, 102); =
margin-top: 10px; padding: 7px; }

div.sphx-glr-footer { text-align: center; }

div.sphx-glr-download { margin: 1em auto; vertical-align: middle; }

div.sphx-glr-download a { background-color: rgb(255, 255, 204); background-=
image: linear-gradient(rgb(255, 255, 204), rgb(213, 213, 126)); border-radi=
us: 4px; border: 1px solid rgb(194, 194, 45); color: rgb(0, 0, 0); display:=
 inline-block; font-weight: bold; padding: 1ex; text-align: center; }

div.sphx-glr-download code.download { display: inline-block; white-space: n=
ormal; word-break: normal; overflow-wrap: break-word; border: none; backgro=
und: none; }

div.sphx-glr-download a:hover { box-shadow: rgba(255, 255, 255, 0.1) 0px 1p=
x 0px inset, rgba(0, 0, 0, 0.25) 0px 1px 5px; text-decoration: none; backgr=
ound-image: none; background-color: rgb(213, 213, 126); }

.sphx-glr-example-title:target::before { display: block; content: ""; margi=
n-top: -50px; height: 50px; visibility: hidden; }

ul.sphx-glr-horizontal { list-style: none; padding: 0px; }

ul.sphx-glr-horizontal li { display: inline; }

ul.sphx-glr-horizontal img { height: auto !important; }

.sphx-glr-single-img { margin: auto; display: block; max-width: 100%; }

.sphx-glr-multi-img { max-width: 42%; height: auto; }

div.sphx-glr-animation { margin: auto; display: block; max-width: 100%; }

div.sphx-glr-animation .animation { display: block; }

p.sphx-glr-signature a.reference.external { border-radius: 5px; padding: 3p=
x; font-size: 75%; text-align: right; margin-left: auto; display: table; }

.sphx-glr-clear { clear: both; }

a.sphx-glr-backref-instance { text-decoration: none; }
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/sg_gallery-binder.css

@charset "utf-8";

div.binder-badge { margin: 1em auto; vertical-align: middle; }
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/sg_gallery-dataframe.css

@charset "utf-8";

table.dataframe { border-collapse: collapse; border-spacing: 0px; color: bl=
ack; font-size: 12px; table-layout: fixed; border: none !important; }

table.dataframe thead { border-bottom: 1px solid black; vertical-align: bot=
tom; }

table.dataframe tr, table.dataframe th, table.dataframe td { text-align: ri=
ght; vertical-align: middle; padding: 0.5em; line-height: normal; white-spa=
ce: normal; max-width: none; border: none; }

table.dataframe th { font-weight: bold; }

table.dataframe tbody tr:nth-child(2n+1) { background: rgb(245, 245, 245); =
}

table.dataframe tbody tr:hover { background: rgba(66, 165, 245, 0.2); }
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://scikit-learn.org/stable/_static/sg_gallery-rendered-html.css

@charset "utf-8";

.rendered_html { color: rgb(0, 0, 0); }

.rendered_html em { font-style: italic; }

.rendered_html strong { font-weight: bold; }

.rendered_html u { text-decoration: underline; }

.rendered_html :link { text-decoration: underline; }

.rendered_html :visited { text-decoration: underline; }

.rendered_html h1 { font-size: 185.7%; margin: 1.08em 0px 0px; font-weight:=
 bold; line-height: 1; }

.rendered_html h2 { font-size: 157.1%; margin: 1.27em 0px 0px; font-weight:=
 bold; line-height: 1; }

.rendered_html h3 { font-size: 128.6%; margin: 1.55em 0px 0px; font-weight:=
 bold; line-height: 1; }

.rendered_html h4 { font-size: 100%; margin: 2em 0px 0px; font-weight: bold=
; line-height: 1; }

.rendered_html h5 { font-size: 100%; margin: 2em 0px 0px; font-weight: bold=
; line-height: 1; font-style: italic; }

.rendered_html h6 { font-size: 100%; margin: 2em 0px 0px; font-weight: bold=
; line-height: 1; font-style: italic; }

.rendered_html h1:first-child { margin-top: 0.538em; }

.rendered_html h2:first-child { margin-top: 0.636em; }

.rendered_html h3:first-child { margin-top: 0.777em; }

.rendered_html h4:first-child { margin-top: 1em; }

.rendered_html h5:first-child { margin-top: 1em; }

.rendered_html h6:first-child { margin-top: 1em; }

.rendered_html ul:not(.list-inline), .rendered_html ol:not(.list-inline) { =
padding-left: 2em; }

.rendered_html ul { list-style: disc; }

.rendered_html ul ul { list-style: square; margin-top: 0px; }

.rendered_html ul ul ul { list-style: circle; }

.rendered_html ol { list-style: decimal; }

.rendered_html ol ol { list-style: upper-alpha; margin-top: 0px; }

.rendered_html ol ol ol { list-style: lower-alpha; }

.rendered_html ol ol ol ol { list-style: lower-roman; }

.rendered_html ol ol ol ol ol { list-style: decimal; }

.rendered_html * + ul { margin-top: 1em; }

.rendered_html * + ol { margin-top: 1em; }

.rendered_html hr { color: black; background-color: black; }

.rendered_html pre { margin: 1em 2em; padding: 0px; background-color: rgb(2=
55, 255, 255); }

.rendered_html code { background-color: rgb(239, 240, 241); }

.rendered_html p code { padding: 1px 5px; }

.rendered_html pre code { background-color: rgb(255, 255, 255); }

.rendered_html pre, .rendered_html code { border: 0px; color: rgb(0, 0, 0);=
 font-size: 100%; }

.rendered_html blockquote { margin: 1em 2em; }

.rendered_html table { margin-left: auto; margin-right: auto; border: none;=
 border-collapse: collapse; border-spacing: 0px; color: black; font-size: 1=
2px; table-layout: fixed; }

.rendered_html thead { border-bottom: 1px solid black; vertical-align: bott=
om; }

.rendered_html tr, .rendered_html th, .rendered_html td { text-align: right=
; vertical-align: middle; padding: 0.5em; line-height: normal; white-space:=
 normal; max-width: none; border: none; }

.rendered_html th { font-weight: bold; }

.rendered_html tbody tr:nth-child(2n+1) { background: rgb(245, 245, 245); }

.rendered_html tbody tr:hover { background: rgba(66, 165, 245, 0.2); }

.rendered_html * + table { margin-top: 1em; }

.rendered_html p { text-align: left; }

.rendered_html * + p { margin-top: 1em; }

.rendered_html img { display: block; margin-left: auto; margin-right: auto;=
 }

.rendered_html * + img { margin-top: 1em; }

.rendered_html img, .rendered_html svg { max-width: 100%; height: auto; }

.rendered_html img.unconfined, .rendered_html svg.unconfined { max-width: n=
one; }

.rendered_html .alert { margin-bottom: initial; }

.rendered_html * + .alert { margin-top: 1em; }

[dir=3D"rtl"] .rendered_html p { text-align: right; }
------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_static/scikit-learn-logo-small.png

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

------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_classifier_comparison_thumb.png

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
Jwzw2y6++/qK1iVyWfqHhwCYmJxirlzhdXeLQmCaOjHTwJQefrP5uq/j9HNtJeIMrR8BYHZunpPT
JUwrKk+NZOXzODsQGWc/Y4KV+3H2H8kwjGY1LvDL+W3/leXPV65Hs0yGN26IjmJIKSWKoiiK8rqD
taIoiqJcBoP/xbtrFUVRFDUCURRFURQVQBRFURQVQBRFURQVQBRFURQVQBRFURQVQBRFURRFBRBF
URRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFUQFEURRFUQFEURRFUQFEURRFUQFEURRFUQFEURRF
UVQAURRFUVQAURRFUVQAURRFUVQAURRFUVQAURRFURQVQBRFURQVQBRFURQVQBRFURQVQBRFURQV
QBRFURRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFUQFEURRFUQFEURRFUQFEURRFUQFE
URRFUVQAURRFUVQAURRFUVQAURRFUVQAURRFUVQAURRFURQVQBRFURQVQBRFURQVQBRFURQVQBRF
URQVQBRFURRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFUQFEURRFUQFEURRFUQFEURRF
UQFEURRFUQFEURRFUVQAURRFUVQAURRFUVQAURRFUVQAURRFUVQAURRFURQVQBRFURQVQBRFURQV
QBRFURQVQBRFURQVQBRFURRFBRBFURRFBRBFURRFBRBFURRFBRBFURRFUQFEURRFUQFEURRFUQFE
URRFUQFEURRF+b/S/w+duA9gnSxSmgAAAABJRU5ErkJggg==

------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_iris_dtc_thumb.png

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
QRCEEieQ/wMaxxGngpbJmAAAAABJRU5ErkJggg==

------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_cost_complexity_pruning_thumb.png

iVBORw0KGgoAAAANSUhEUgAAAZAAAAEYCAYAAAByXKB5AAA7BElEQVR42u2dd3hVVb6/5//73Of+
MXfG7syd4uhv5urYRmx3rDMoFqT3qgJKExKkBQlVBRQcka4oOiA9CRhCJ3QCJLRQQy+BEFoISUjC
95d3jevMSQgYIAnnwOd9nv0kOTlnn73X3nu967vqz8zsZ1exCSGEuHG4Gg/87GcmgQghhAQigQgh
hJBAhBBCSCBCCCEkEAlECCEkEAlECCGEBCKEEEICEUIIIYEIIYSQQCQQIYSQQCQQIYQQEogQQggJ
RAghhAQihBBCApFAhBBCApFAhBBCSCBCCCEkECGEEBKIEEIICUQCEUIICUQCuW7885//tGHDhtk/
/vEPGz58uPudn0ePHr3ovWlpaXb69Omf3OesWbMsMzOz2Gvnzp2z6dOnu5+VxYYNG2z58uXu9z17
9tiJEyeua1pv27bNpfPixYtdOnz//fc2atQoy8rKKvM+8vPzbefOnZaXl+f+Pn78uM2cObPCjnn1
6tW2adOmy75n4cKFtn379qv+joSEBPvss8/cNbpScnJybMeOHVZYWHhFnzt8+LDNnj37su/hnDi3
yuTMmTO2a9cuZUwSSHgQHx9vkyZNstatW9tDDz3kMrUpU6ZYdnb2Re9t3LixLVmy5Cf3+X//93+2
cePGYq+lp6fbAw88YEeOHKm0c9u9e7elpqa639u2bfuTGUZFcuHCBXvppZfs448/dhnTyJEjrXbt
2k62VyJVJFizZs2A4MlwVq5cWWHHHRkZaZ9++ull31O3bl375ptvrmr/3E8vvviiu++u5t4gs331
1Vev+HMUcNasWXPZ9xw8eNAVQiqTZcuWWYMGDZQxSSDhxdSpU61Ro0bud6KMPn362FtvvWWffPKJ
K+UhhLvuusuqVq3qMhVf8u3YsaN16NDBlSI9f//7323z5s3F9k+GV6VKFffgpqSkWN++fV2pk++Y
N2+ee3DatWtnAwcODGSoAwYMsC+++MLee+89e//9952EYMiQIYFSMaXWjz76yP1OhMPv0dHRNnbs
WHdMnBcl1N/97nf2/PPPW9euXS0uLs5limTqsHTpUncswUybNs0mT54c+Pu7776zmJgYl2FzjAi3
e/futm/fvovSctWqVS5NeA/S4ns+/PBDu/XWW+3NN99034WsEe3nn3/uPvPDDz/YO++849KAz3vp
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
QmCC

------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_unveil_tree_structure_thumb.png

iVBORw0KGgoAAAANSUhEUgAAAZAAAAEYCAMAAABFglBLAAAC61BMVEX///8AAAAEBAQGBgYICAgK
CgoLCwsMDAwNDQ0PDw8QEBARERESEhITExMUFBQVFRUWFhYXFxcYGBgZGRkaGhobGxscHBwdHR0e
Hh4fHx8hISEiIiIjIyMkJCQlJSUmJiYnJycoKCgpKSkqKiorKyssLCwtLS0uLi4vLy8wMDAxMTEy
MjIzMzM0NDQ1NTU2NjY3Nzc4ODg5OTk6Ojo7Ozs8PDw9PT0+Pj4/Pz9AQEBBQUFCQkJDQ0NERERF
RUVGRkZHR0dISEhJSUlKSkpLS0tMTExNTU1OTk5PT09QUFBRUVFSUlJTU1NUVFRVVVVWVlZXV1dY
WFhZWVlaWlpbW1tcXFxdXV1eXl5fX19gYGBhYWFiYmJjY2NkZGRlZWVmZmZnZ2doaGhpaWlqampr
a2tsbGxtbW1ubm5vb29wcHBxcXFycnJzc3N0dHR1dXV2dnZ3d3d4eHh5eXl6enp7e3t8fHx9fX1+
fn5/f3+AgICBgYGCgoKDg4OEhISFhYWGhoaHh4eIiIiJiYmKioqLi4uMjIyNjY2Ojo6Pj4+QkJCR
kZGSkpKTk5OUlJSVlZWWlpaXl5eYmJiZmZmampqbm5ucnJydnZ2enp6fn5+goKChoaGioqKjo6Ok
pKSlpaWmpqanp6eoqKipqamqqqqrq6usrKytra2urq6vr6+wsLCxsbGysrKzs7O0tLS1tbW2tra3
t7e4uLi5ubm6urq7u7u8vLy9vb2+vr6/v7/AwMDBwcHCwsLDw8PExMTFxcXGxsbHx8fIyMjJycnK
ysrLy8vMzMzNzc3Ozs7Pz8/Q0NDR0dHS0tLT09PU1NTV1dXW1tbX19fY2NjZ2dna2trb29vc3Nzd
3d3e3t7f39/g4ODh4eHi4uLj4+Pk5OTl5eXm5ubn5+fo6Ojp6enq6urr6+vs7Ozt7e3u7u7v7+/w
8PDx8fHy8vLz8/P09PT19fX29vb39/f4+Pj5+fn6+vr7+/v8/Pz9/f3+/v7/////NUFyAAAAAXRS
TlMAQObYZgAAJiNJREFUeNrt3WdAFGueLvDdu3f27t2dndm9szNn5pw5weMxoyIZFBGQTBNVkogY
AAOIGUXBjCKKAgZAEBABA4oBJKgYyDnn1MROdO6q5+P9QJAjiuQ5wvt8sbsrIT+q3nr/VfX2P/3T
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

------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_voting_decision_regions_thumb.png

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
YII=

------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_adaboost_twoclass_thumb.png

iVBORw0KGgoAAAANSUhEUgAAAZAAAAEYCAYAAAByXKB5AABx7ElEQVR42uydBVhUWRvHaQFRFFsQ
KQF1jXXXXrs7wUIRUUwaQRAVUFRE7FZsQlrE7u4O7G5d3e5v/9/7nplhgQXENRbcc57n/0zduXMH
5p7ffc9bagDUpKSkpKSk3lbyjyAlJSUlJQEiJSUlJSUBIiUlJSUlASIlJSUlJQEiJSUlJSUlASIl
JSUlJQEiJSUlJSUBIiUlJSUlASIlJSUlJQEiJSUlJSUlASIlJSUlJQEiJSUlJSUBIiUlJSUlASIl
JSUlJQEiJSUlJSUlASIlJSUlJQEiJSUlJSUBIiUlJSUlASIlJSUlJQEiJSUlJSUlASIlJSUlJQEi
JSUlJSUBIiUlJSUlASIlJSUlJQEiJSUlJSUlASIlJSUlJQEiJSUlJSUBIiUlJSUlASIlJSUlJQEi
JSUlJSUlASIlJSUlJQEiJSUlJSUBIiUlJSUlASIlJSUlJQEiJSUlJSUlASIlJSUlJQEiJSUlJSUB
IiUlJSUlASIlJSUlJaUEiBxyyCGHHHK89ZAAkUMOOeSQQwJEDjnkkEMOCRA55JBDDjkkQOSQQw45
5JAA+Y+OH374AQ8fPsSTJ0/y/Z5vvvkGf/zxR5bnfvrpJ/z444/53seff/6J58+f4/79+2/1vtwG
7+N///uf/IfKUaAGnydPnz7FgwcP8v07//nnn8V5mXnwb5vPu7cdz549E+f277//Lv8ZEiDvf4SG
hmLSpEmYOXMmxo8fj6+//jrLJJ95qH6EJ06cyDgZ+Dne7u7du7h+/Xqun5N9cucfdp8+fbB48WJ4
enqK9+f0mfnZFz+ePHmyABK/P6eTJftz+fkcOeR413Hy5EkMGjQICxcuxNixY7F3794scMn+G+Xf
JV9UXbt2LeO3zfr1119x9OjRXN+b/Zzg/axcuRJhYWEIDw/H2bNnc3xv9v1kPjdyOj4JEDmyDIbH
lStXxP3ly5djwYIFuHPnjgBLSEgILl++jEePHmHChAniOZ7oV61aJZ6bN28epk+fjgMHDuDIkSPY
vXs3bt++jYCAAPj7+wug7Ny5E35+fpg4cSJ27NiR8bls9YwYMUJcHfn4+OD8+fPiR87vCwwMFFds
UVFRuHnzpjih1q1bJ1738vJCcHAwkpKSxJXa1KlThXr16iXgt2nTJsyYMUNszycAHzcfI38vfg8P
vv/48WP5z5fjgw8+N2bNmpXxm3dwcMDr16+xbNkycX7x75ThwI/5d79lyxZxgcbnDb+Xf+srVqwQ
F1yLFi0Sv/k5c+aI82Tt2rX47rvvxAUY/+ZZv/zyS8ZkP3jwYOzbt0+sDvDgc4k/g88XPu+Sk5Mx
btw4AZnvv/9ePM+ft2fPHixdulTcj4+PFxdmU6ZMESC6cOGCBIgcf42goCBcvHhR3D9+/Lj4YbIY
JgwKX19f8cPiHzT/0PmHyZbKpUuXMGzYMCQkJIgf98aNGxEdHS32d/r0aQElBgnvY+7cueIHy5O/
avDjzp07CwtkyJAh4hi8vb3Fj5x/9NOmTRMnHj9/48YNAQE+Bj4B+KRh6KSmporn+QThqzw+jg0b
Nojj7dixo4Acn7D8fjb/+T18AvBJI5e75PgY4+DBg8K6Vw1nZ2fExsZi6NCh2LVrF/r37y/OIf5N
8uTPSktLExdPfG7wxM2/WYYOX4jxexg8DBIPDw8cOnQIAwYMEEtefG7weakafO7wOciv8znFF4t8
PHwe8/nHx8DnDgOJYTJy5Eikp6eLz+eLO/4sXiVgoPC227dvx7fffisBIsdfg6/Q+cqef0hsYcTE
xIgfKl9t8BX7sWPHxA82M0D4x37v3j0x2UdGRmZM5vze7ADhK6zExESx5MVXSqrBFgafADz4Cmv2
7Nnic2/duoX9+/cLMMyfP1+cIPyjZwuGLRw+qXjwcgDvl6+e+NgHDhwoAMgnAVtQ/MO/evUq3Nzc
MtaO169fjy5duogrOznk+BhD9Vtma5gti9GjRwtLnC9seNJOSUkRy1p8ocbw4HOMJ3BefuLfLb/G
F0d8HvKFG0/qvFzLAOHziX/LqvOKL7r43FMtafGFFg+2avg84PM4J4DwBR6fS3xe82du3rwZTk5O
4vh4DmBoMJgYZplhKAEih1ib5R8mw4PNVv6h8xU7T8wRERFiUmbTm0HDV/a8hMUTPk/0vITFP1r+
kR0+fFhAJvsSFl+18BUM/1B5e9Xg5Sb+AfPn8JUTf0bmJSzVOjDvi3/4bMnwyaFahuIf/atXr8Tn
87GzdcOmNoOI98knFe+TH6tOJD7mbt26iRNIDjk+xuCJd/jw4eI3yRM/n1t8EcbnEC858TIUw0C1
hLVt2zYBC77lc4fhw+/l84GXXrMvYbFloloi48cq3wmfx/yYzw0+h/jc4os+Ptf5nFEtYfF+eP98
jvAFG5+XfK4uWbJEHB8vYfF5w/cZIAxECRA5sgz+QefkTMvuNMvJEZ3T+95m/Pbbb3/b59uOnJzq
2Qeb+Gwd8dWdHHJ8zMG/6ey/c9X5lPn3nv1xTuecauT3vMvp/W9youd0PLzdf23ZVwJEjiwjc4SZ
HHLIIce/DhAm88MH93Hvzm2pgqy7d/Dw/j1xW9i/y9O3yNkpbIOj43jJRErqY4iX3FVL3P8KQB7c
v48+Q8fAO3wJPKcvkJL6oPIIWwjnMR74rYD7cXitnn1WL1++FI9fvHghnMi8lMhLI3xf9ZpqsBOZ
Ayk4mo+jkKSkPqT4d8b+JPYV/WsA4StCrxmLkXT1NeIuPpMqxNpw8XkBlvIYL72AZ8gM/PrzTwUa
IAwHDhvlkFWO4mH/0+rVq0WUDwdEqEJUM2dnM1hUUXZyyPFRDABlvtm/ChC+MuSTO/rMA6lCrPjT
t5F8+laBVNzpu+IYo84+gmdwWIEHCA+O4OOoOU4y7devn4gi4nwEjkbiwVF5HGrNg6OHOPKII4Tk
KPyDLwZ4aaggii9aVMEBvIwlASL1TooipZy5jev3HuLhi1d48Pzr96aHL+j2xbvt4xG9/8y1O4g5
fa9QAYRhwYmdXM6DQ00ZErxkwJDggAYOUeXwVAmQT2vw5Mz1v9jafN+TP2fMv+v72TrmFAAJEKn3
ovWkbedu4fm3P+DVz7/j659+eyd99zvwA13gfPvbn2J/b7tP3v6H/yHjfa/p9sbDJ9hw6k6hAQjn
J3Beg7u7u8gH4rwChgOfsOz/4MRQTuzMHsbKeUlyFO7BgUWck1VQB4cjq45PAkTqvQHk2Tffiwn7
5Y+/ZtE3v/4P3/+hmNCzv5ZdvM2O/YewYm0Ujpw5h7iUNBw6eUYAgcHy+pc/xP6+Vd0nyKhAw+/n
z3/49beI35iGZ9/+qAAK6fqDwgUQVY5Q5tyB3O6rBi8t8DKXHIUfIBw0wb+Bo0cvIC3tKLZsOZ6n
eBveln45WfbFQRdcJonFyY+cof+2uWe8THrmzJm/HZ8EiNQHBwhP8uevXUNscjxuPX6SJ0S++/1P
pGzdjnETJuHw6bPYf/wUFixbge37DiJt5x7MXrAIl27ewf5jpzBjzjy6PUnP78bMuQtw4sJl8VkM
Gd7eaagLAei8Ai6FECD/ZEiAfFoA+f33nzFhwma4uT2Fl1fe4m14299//yXLRQhXoWB4nDp1Sliy
qqrbqhJJDBjOll+zZo1wiHNEFQducBSgah9cjYLfp0rmlACR+igA4Qn95qP7qFrdC2pqUejcbRy9
/mOOVgrre7qoDg6dhp0HDoNPA84BXrxiFVkkBwUoxvqPx5SwmZizaCnCZs3F5Vv3EDAxCIsjVwtA
MJz4M4NoH2s3JNA2c/AdWz4SIHIUUoBMmbIPgYFctDVv8Ta8Lb9HNdiHoqqXpxoMAi6aygDhel1c
WoXr4nEZJS4bwwVZuX6eChac58H1u3hp9Ny5c/8OQDg+nZ2BXE6ZC/VlHpycJgHyaQKEl5rOXDkP
Xb0JBJBXsLZ1x5NvXuYOEJrsV0XFYnrEbNx99gJXbt/DQrJA1m2Ih8dYP8xbshxuXj648fAxFi1f
ifFBITibfgPTaPuI+QvBp86ZK9fg7DKCXl8B5+EjBTj4OCRA5CiMAAkJ2YuAAGDixLzF2/C2mQHC
PjEu1MrLT+yU5+raXNuLJ3yei7kwJQOEW0FwjS+GCNcRY+ioehNxsVe2YhgibIn8KwBhinFtfHb6
Zf4wzpo9uH8f3KfOkwDJQzFnHyL+0jNsuPC00C1hvfr5V8xdtAbdeo5FQupWfPvbH7kuYfF7n333
EyLXRQuIbNqxW1gjvDzFz81asAgbUjaJJarwOfPEa+zrCJ87XyxX/fD7/7D36AkcPHFGWC879h3C
ifOX6TMlQOQofAD544/fEBaWCi+vo/D1PZ6neBve9n//y1ozjKP02Hrg9hI8D3MlY570ufArB2Zw
+XmuAs45RhzJxz4SnqNV+UW8/KWqB6a6z/63jwoQdt5w1AhDhEsdq9bWuLTy3DmzMTpkFk2QzyUs
coHH2uM34b9oFcLitiL2/ONC50T/7g92dP+Kb3//841OdFUUFvsu2HJg8bIUO81Vz6seq15XONfp
R61cNlPd59dEFJdcwpKjEAKEByeRPnv2FM+f5y3e5mP1GvnoFgivnXHMOtOPSx5ngcujh3IJKw/F
XXqCXsODoaa2HEWL+yIsfitZIk8KFUBUYHgTPD6UJEDkKKwAKejH91EAwiYPJ0Wx11+VgCKd6PkE
yMWHaNjWjQByj7QM48gS4eWswgaQt5HI3SBLgm9VVsTbvF9hhfyRcSwSIHJIgBRigOQ1JEDy1obz
TxCesBuN2ruRJRKCtcdviWWtwgaQ/EKAJ/5Hr77DhRu38fj1dzhx4Qqu3n0glqy+/Q2KZEHaFy9b
vfr5D7Ffxf2/9n/9/mNcuH4LTwtxHogEiASIagnr6bNnePr8ed6ibXJbwuJ9sROd/RdcoPNtegZx
8zhuLJc5sVECpBBChC2R+EtPChw83gQQ8ZigcIug8Pq3P98ID574ffzHY86ixYhJ2ogFS1dg294D
9Pxt7Dt6QjjZ7z9/JRzoV+7cx61Hz0Ti4c2HT8X7bz9+jpGu7iJiKzRsJoFFkZkuASJHYQPIb3Sb
GhaGo15eOO7rm6d4G972t2wJptzylzuhshOduypyRBWXI+HILO6OyoNvOU+Eo2U5+oqjslTJhuyz
5sgtjsLidr4SIFIfDSB8/+n3PyHYzQOeVati4Zx5eP3r/3IFCGebc+5GXMomEZL7/R9/YtGKlQIW
W3bvhd/4iVgZFYuIeQsROmMmTl1Mx7jAiZi7eKmwWDjaikHC4bsLl6+Eb0BgRikUCRA5ChtAfiaL
YS9N+PmN4+Vtf87UQZF/D66urhlJgQwIruDM++Y8EM75YJBw++rU1NSM++yrVrWt5mKenDvC4OEw
XwkQqY+aB7L/4hWEaGrSr0kNrmbmwhLJK5EwLCIrQDiRMDFtC6bOnIWQaTPgMy4AJy9eFqBZGxsv
rA+GSfKW7WL7GwQKL99xOH7+Elw9vcRjtkwkQOQojADZRxN+fjMJeds3AYStCfZHczDTsGHDhFWx
ZcsWYWFwsBPn6/F9TjbkwX3fOf2Ct5k7d64EiNTHAwhf+d/9+ht4d+yEKQYGwhLh5az8LmHFJm3E
arI4krdsE+VNQqaFYdKUqWSRHMK08FnCEknYtFk8t3J9jLBgeAlr+GhXLFwWCT+yTh68/EYCRI5C
C5DNEybgqZsbnnp55S3ahrf9JVsPd9US1ooVK8QSFueEcNXmsLAwUajzwIEDopQJWxhseTAsuIin
qsozL2Hxa5xEyNtJgEh95ERChsi3OHApHU+///mNUVoKJ/q3wufxkODz+PX3eE7vu/fsa1y790g8
vvf8a1ETi59nYFy+fS/LPtiJfv7aLbGtzAORo7AChJ3dF44exdG0NBwnCyAv8Ta87Z95ONF5vz/9
pPjdP1M63dmxzg5ybg/An8fJ3Zmd8byUxRns/H7pRJf6V6KweBLnBMD8hviqalplL9EunuMS7Zle
z7zt38J4lZFZEiByFEaAFIbjkwCRei8A2Xr2Jp6SxfDqx1/w9Q8/FyjxMV0n62XD6cIDkOw90Xlw
WW0ucsfKqSe6BMinAxCVxVDQxDl97EtR+UgkQKTeT8Lj6bvYc+EmDl2+jYMFTHxM287dpOO8X2gA
ouqJHh0dLR5zkbuePXuK5QauW5RbT3TZUOrTGFxJl//XfKVf0MTHpVoKkwCRen+WyGnW/QKpKFX7
3ULWEz0uLk4kcnFV1PDwcFHwjp2aPGRPdDn+7SEBIvXf6t9eCHui83IVx+J37dpVlAPiqBrZE10O
CRAJECkJkByHqie6m5ub6BTHg09UXkJgy0T2RJdDAkQCREoCJMeRuSd6Tv3PZU90OSRAJECkJEDe
25AAkUMCREpKAkQCRA4JEAkQKQkQCRA5JEAkQKQkQCRA5JBDAkRKAkQCRA45ChFAOMSQi3JxGrwE
yH+j0ZQEiASIHBIg7zw47Z3j05csWSKyajOPJ48eSoD841a3uwp0q1sJEAkQOSRA3nlwUTg7OzvM
mTMHFy9eFM9xnPuuXbswd85sjA6ZRVfRz+UE9za1p8jyaNjWDWpq90nLMG7RKvobSghLgEiAfMzx
y6+/4uTu3Ti2efMbS65n1pG0NDxWVhGQAHnDOHLkCIKCgnDnzh3MmDEj43muPX9w/z64T50nLZC3
BcilJ8LyYHgULe6LsPit2HDhifzbSIDIWf0jjqfPn2OnqyueeXq+uemTUs+8vXHJxUVARAIkH4Mb
lHAHLNaePXuyvPbw/j25hPUPxMtVa4/fhD9ZHmFxWxF7/vG/eizsh2GriJfWJEAkQP5LADnh6wtM
mvTmtrMqBQfjOUGELREJkLfwg6hqyGce0on+rhP3M7I8nr7TfmLPPUbClWfKJbCH9L94Kh7nx6JR
gYytIfbHhCfsLtAQkQCR430D5DgDZOJEBUTyI4IIWyISIO9hSID8uxZDHEFjye4z6O8eAo/w5cKS
mRSZiD5jgjAzae8bLRuGDvtfeClNTe2e8MvwfiVAJEAkQCRAJEDeUXx1/6F9E2+yGDJbGDHnHmWx
GGZv3It2ffxp8t8HdfWZBJGZKFWOH5+Gda0xiDp1I8/oLv5M9r+wH4Yh0mt4sPishCvPC6RTXwJE
DgkQCZDCAQ+6el++/yzmpu35YCG2/BkT87AYGB6ZLQye1P0XrVZaDPfRosdYdBiQB0BO36R9PHrj
MbAfhv0x60/ewdI95zI+T2xTgMKLJUDkkACRACkEeRqPMX/rYZhauUHfIBAuE+cLS+F9f8aiHYdh
aOSdq8UQd/ERWvceqwTEdExZl4SIlF0oZjhOQOSL5t0JcPswwCv0ryWslUkCSLNS9pOF8YAslisZ
1g3vm++rLKsYJVzYD8Oh2Lw0lvnzglbFvffv/V8AiKonOjeO+vXXX3Hq1CnRNIqH7IkuASIB8okD
hCdTn7l8lR9F+h5fNBtN3/H9LIkxFOIuPkY8/c3eFiA8oSddfUWQWIeixbrS87Fo0MYHiem0v8vP
xGSfmP4Uqbe+warDV1CvpSdMq3ggYEm0eF/UqTuYnboTy/edo9tdWHP0ahYLJe7SY7Sx85MAeceh
6onOHQm5BzV3IgwNDRV5VGvXrpU90SVAJEA+ZYDwpLp8/wXUa8UT8Gj4L4rBhovvHi21ZPdZtLYb
S/IV93lyzmkJiyGSQEBITH/5tyUlthwWbj8APf1JNNG/hrHFaKw7kS725b8wBvXbuGN06DL4zltO
r68nrUXpCm0xYdladHMKga5+KMpU7EG3E1CnqSdWE0Rizj7KcKrP37oPDl4h8Jy5Qi5hvcPgzoPR
0dEZj7kHOlsi3N5W9Vj2RJcAkQD5VH0gNOHHnL2TZQnoXcSO6X7uweLqnsX3+bnsTnSezNccuwHn
8TNJEQSHWwSSFxlObX494fJTjJq8AF91GktwixX7YIgYm48WUNEluEyMXIvKNgPo8TCSB/SKdoGW
Th+6Tz8ONU5ivAUNjVDM3rhdLGFtuPAYTuPmoFIVL/QYOkVYPwWtvEph64nObWvZsli9ejU2bdok
nuekXNkTXQJEAgSffhQWT6DvaxJlALAVoaE5XUjlFP8baMjyYHgols+ixH1+LkvexogQNO3sRVbF
ekV0ljjOu2LJSk0tGpWsXLHq8EUs3nWcLJSG9NwG0m8wMGwOU2sv1GzoAPNqPuhOoIg+fVdYXGuP
X0Z5U3cBGA2NYMxO3YG4ApYTUth6ont6egowODo6imUrBgb7P2RPdAkQCRDIPJB/IvYrsHK1VPIA
SMKVF5iwIpqeX0F6DE3NOgSiFcL/kXD5BVYfuQq/+StEAAAvh7EvJzxxO1kVY6BvMB7DgxYQaG5g
7YnrGDR2IoZNjMDaYzeFVbPhwkM0au8ILW1/fNncB6uPpmcsbUmAvN3I3hOdH7MzXdULXfZElwCR
AJEA+Yd5H8/y/HuxNaFYwooQ4vsieoqsgVVH0jHA0wuaWi4EkEhSB3o8QyyBBa3agOA1CYrs9kyW
Ay9PiXDkzXvEktmm298ROGYLS0UFqJQbr+AyaQH0i41HiVI9EJGyo0A5z2UYrxwSIBIgUnlEZfH9
zBBJEFaFcnmKXlt34gq+aDaKJv04sjza021rkgPGTF0K33lr81waU/QeeSpec/SdDrtR40QElwIg
EUi5/lxEmqmp/SCe952/XCYSSoBIgEiASIAUpAx2VR4G51/kFJWVOaSWl6CE6DmOlKrTZLgAhpra
jyROFtxGOgBHvzDSdKVzfi/6uYcIS0MVTcb/m/hLjzBhxSpoaMygbfajWVdXDA+anWHhKBIUY0TE
GUeecQTamxIQJUAkQCRAJEAkQD5SBjvfV+VhcP5F4tWX2aKyMk38yiTDRTuOIPHKS8zeuANa2mFi
O02t+tDVtxbLV0blGmHe5sP0eRdFvkj7fgFYQZ/N+4klqyPywDmExW8SuSIly/Sl90wVAOFcj5Tr
L8nCeZ5xjAw2jjjjyLPM1pAEiASIBIgEiATIv5zBHnv+ATo5TKDJf4rIv4g6c1vkWmgXmUlQCIFn
xBKCxQux/aSViTTh+5HGwW/+aiRfe4FGHTgc1wvqGlMIJt3p/hh0HjQKSddeCWsh6epzTFiehIbt
AjAieBkWbDuCytYe0CniTNvGk35BhcrtMNAnBEuFtfM4x7pcicrQ4jdGqJ17pLCmPmKorwSIHBIg
nxpAwpci7uq3iL74osAq6vzHAVyOGewXFJMt+zDKGo/JEibL+R32o70JIC3F0lHkoUtIvvkaPV04
+3y8iLYqWrwRBo0NgVWNL+hxIOkoqScpAAYV2yA0YYewZtaevAkzi2b0/FjolHSB8wTeNoV0jdSV
9hOIkSGLhcM8TpQueZal9hbfn5m0RyQ1cnJjXpV8GVhsRbE1xVbVx4KIBIgcEiCfEEDu3n+AsY69
sHGGDxKnexdIxU91x84Vs5Bw5j5d9T/86BnsfDXPSXrrT6VjaOBcmFh6Cksk6vQdmsQfon4bT5Gj
wbkaowPnYc3WS7CpyQ7ts8LKUFPrR+KlrghSF+jp1kaJEjWhreYGT7ViGFTZDOHRh+EXHosOmhoY
Q4QarG2AYX4zYWHVT+lsr4O6bboiKf2lKGkSeeAifDOF+yqW126IcipcVoXLq/AS2oYcIBKj8smQ
FcXWVCeHicK6kgCRAJEAkQB5O4A8fAy/FpbYbFcZG3ubFUgldzfBiaB2SDl/+4MD5K/IKk7su5UB
D87wNrHwQNfBQVh95JzIuRB9PS4/h0vgbOhre8CsRGcs6Pg5/BrXhIF2C5rIr6CYzlC0tiiBItqc
F3IIjU0rYVHnqghsWQe1dPTwJ8EiltTayhJTW9bG51rquEGP00lDa1jBqZ4lWtD9RDUtNK9sA48V
8bDzmISqXziJMF7TKm6IPHieLKGvCQJ38gWQuAtPRPY6W1FsTbFVtfbYpY9ihUiAyCEB8qkBpLUt
Nve3wcZ+tgVSyXZWOD65y8cDCE26M+K3IWDxGqw/SZ956lqmDO8QzNm0UywhCaf16btISIpCZOdy
iCXYretpDCNdntyPoYTuV/BtUgZBLU3wpZE+zNX1MK21KXY7VsNOR1t4NiiPrrTTPqSe5gZY2NkM
XxbVRit6bF9KD7M6mWFBd0tM0NLAd/Rcd00teBcpgmZqOsolsB+hpT0Wk9fFYsKyKMxM2olZGw+8
cQlLFQzAVhRD0cl/joDkx+i3IgEihwRIIQXI2bNnce7cuaw+kEdPCgVATkzpitTLdxFNE13MhUcZ
iuXb8+8vXDV7gyb7UVMQeeA4Grd3gn6xqRnFC9lXMm5RDCrZ1kE9iwpY38OSwGCD9T0rwkiPnd5X
YVu2OUaYFoE7Tf5rSF+TepkUw6LuVpjf1RIrelaBU80yGGRuSPCwwFCz4thK2/QmdTIsgn4ldTG6
qhHc65WHs21psmSM8Du9lkpSU6smorjU1NxQ1uQrul0jjpkhknL9Va5OdGFlKMu78LLVGrI8/jE8
/kG/FQmQT3vcv/8YaWlHsGXL8Xxr8+Zj2L37JH799RcJkIIKkBcvXsDDw0PU81GNX375Bek3bsG3
lU2BBkiKfRUcDGiHNannsDj5CpYkX/5LSZexfMtVmhQfvLd6V3+1iH2KCpWbo0yFAJQo7YnhwVPo
yv2WYomLQPNF89bKooan0NjUCl1tbNCpSjUENKmIoV+YY3Znc7gSBPbThO9FWslwUCdLQlsD40hO
xXVgZ14c01uZYvug6nD9rDQ60jbXSJdI00j+bI2YGMCvrSV8xvmin6EZqmqY0meeICVDTasndHUb
0P2vScvFseeWQJg1zPdRRmHHj9lvRQLk0x4MDxeXS/D2fgYvr6f5kqfnM7i67sTz508lQAoiQLiG
T0REBNasWYPZs2dn1PdJTk5G8JRQeDQxx5YBtgUWIAIifatibY8mWNOjWRat6voVUp3tsPn4Lay/
+BzR55/mrHxeISuKHd6C3cgpqNloIMpV4iv9dcKv0MdjKhJvfCP2F5/+Gk4TQqGmzgmAJ6GjaS5A
oqZ2Br2rV4RvvTLw+coYoxtUQMcy+uhRrRTsapfFBgLCdNJPpHhSY/Z/lCiCZP6OJPdGFTG6iCac
6fkmDA/S9wwSDU1M7dgEq+ybYsiXtjDQ8YeuZlt01FBDQ31DaOtWRbchgVh34vbfrAF+LErFv8dE
w3/ab0UC5NMebFF4ez9HcLCYp/MlntN9fU9IgBRUgLClwU1wuILokCFDBFAyTM4nzwr8EpZKm/pV
+Zs29rXAPuf62JaYgpituxG7eVcO2ono4zfeAiKPkHztGdr381WG3M6CmUlTzF60BPHb94p9bthC
2roLY7284dr4M4z8shy0NcKhoRkOS01tTKVJ34XkWlQbA/W1EUDWRherEuisro4mBIjeeloIpNf3
ksyK6WBym8pI7GuDiWSNVOSlK3q+L1krDQy0EcX7MtLF2t4WBHprpNH/all3Y/Qur40/6LWNJHXN
/hg5eS6Sr7/KEm0Vd5GsjmOXkXD5Ab5sPkZM9ux8D1iyGhtvfqMMGMi7p/v77LciAfLpA4StChUY
8iOe+319j0uAFHQfyNOnT3H06NEszxUGJ3q+1KdK7rKzUEDkfP6LC3JnPy5PIjr7ac3BNC8HbOuf
db8MsNW9KiGxjxm2OlRFQNOyqF1OG9Y08Tspl6EukJaQjpJ8SOwMdymlC5/WpnDW0cRApUUyTVMd
dUvrYS3dH0KaqfR11C6rj7bsOzErLqyUVOX33TawGnzrV8AkglFbNUM6zoEoWWYgAhbHiomcJ/j1
J2/AwTNUOMq7DQnBiOAFMCw1WURuOXhPIIVi+d4LCFqVnGtP9/fdb0UCRAJEAqSQAiSn8ckA5A1w
YavhbQCiqnPV3yME7nPWIX71EqRyWLFyn1sG2GBMPTPoa4+FWYkuWNnDHCNtjXCEJvvhpLokT1Jb
muA7ERz4OTvSelK/igYYWqM0GmhroAc9PqN0sjcnvSCtIJnQe3obG8BBV4u7R2GyhjrmdLEQ4FBB
JG1AVbg3M4FJaV2FP0TtZ7II3MmaeIw1R6+hTlNnZQ4KoKU9BWOmToHXrFkYO28hNDU5rPgg6rbs
j9Ll/XJtyfu++60Utp7oqr7nfKJyO1sesie6BIgESCEASKpyktxIErcfCSCKcu2KTG9e5km88T3i
Vi1R5KVkAMQKDUw+V3YH3IiJLcrBxaYkDtMT48gCiSW9Zh9HGT2M19UUlgfDoh2pop6WgARHZXVj
cBTVRvty+hhH9zuQupBaaGtiXncrjKlWCiFaGnAmmET2qoK5XS2R2Jf+X/T3mNXRHH4EmCj6LCOt
dtDR90OPoa6i2+G8zXuhrh4slt9ExrthU1FHS1d/PjoNGkpAmfVeAPJf6InOTaSCg4Mxc+ZMHDly
RPZElwCRACnoAGF4xPexwYjPSmNg5eKYT5NlWv+qHxggDzMaRgWvScTctAMi23v5ketIWLM8AyBp
A/j4rDC+SXlUNmyLr0zrItbOEutogh/xeVl8WVYfncli6E4QaFhaj2CggW46mgim56CEiCOJ/SRf
GhbB/M4WiCcojK1fAV/R9kOUEVjDbIyQRN+ZobGS9j3UxACTCSbDydLZQpbI+BaVEEnbPSF1bfAF
zGv2g77BLNRq3BczErahi2MIjC1c4eQ/iSwp7r++h7QbA7xC4TtvjbCu3mUJ67/QEz0pKUl0JNy9
ezcePHiAWWTBhYaGitdlT3QJEAmQAgqQLQ5VMybIR6SBpsWFJfIhAfJXy9owukIPhaFRf5pwY1C3
QwDi1yqWsPjKP6i5BSxKfgbzEs1hU7ohlnSphM00oe8YVA2LelghSEdhcTRWVxeWBi9LVS+iif4E
kEl0f5IysmoEaRRtu7ibldjv7sHVEdHFAkGaCtD0J8tkeW9r7KT9zuliiRAlgIYX08F6gmtiH1sB
2CFmBpgwpBOKlhylDD9ui0bthiPhCvdmv4Lkq68IEon0nboJBa1KQMr118Jx/k+d6P+VnuhsgRw8
eFDcnjlzBsuWLROQkD3RJUAkQAowQHjJKoKsDm+aYHkSHkkTZdoHBgiXUFeUZ99PSiNx9vl3MDYb
gdiZ3thkb0kTvRXqGTdQllXnIod3UKd0KQypXAxTW5pinZ01hpUoIsJ12xrpwpvAwf6N2gSDNLpd
plzKiuNkQbZEOLqKrIstDtUwjyDh38wE/SwMMURTA2PV1TDE2EBYJ7M6mOMLAgtbLrWL62CDvQ02
9bcVlsjybuYY07sZdAwVZUzU1VvAbtQk0cyK4ZB09SXsR7MFcpF0AX1dA5B87WtZzj2PoeqJ7u7u
jvT0dMydO1csWXEgClsmsie6BIgESAH3gfAEyRMnWyIJdMWd+oF9IBy5pGgQ5Yt2ff3hMHY6Wn7l
jNCW5vT3sVb6Pmzh3qAKjPSaoXiRITDQGwIvNUWpESdDHcT0tcEysij8m5sgiqyH2QTBiQSW1T2r
YLBVCTQkoLQqrYcvyxdFe04sNCuOVNqnT93y6EuwbEnPNSCoNNHWENbGFLI6FtN73b4sj0P0eCcv
gZkbYrODwi+0pncVuBCwGEhV1NrQW84TQHrQ8Xsh+uw94QtZfeQSpkRtQqly7qKcfOnyfRGweEOW
sNuP1Tu9sPVEZ2V+TjVkT3QJEAkQFPwoLJ4keTkr9Z2jsHYTQJ6JiVLRA+OR0ueRVbHnnojcCVbs
1W9wctcebCerg30eqQJqVbGye2WMrFscg+sYok/t4uimqyVCdZuRxRDa2lRESvExMwA5vDeVbicR
RCI6WWAsWRhDGlTESLIiGBDTtTQQ2sUCYwyLKKKtlMmFQVz7iq0YAk1I28poWdEAM+jxRAYIAYhL
nyTS8UwmQAVqKwBmZ1QMusW5Ve5tFNGbga5DRqFosSBUtnFHZ0cfmNlyqfj5WcvU09/hXUuayGKK
EiASIBIgn3QY74adOxB77THWnb2JqamHEHk8HRuu3Edc+n1EX7pDt/cQczmr4q4/wmjvUFQ27IVu
tgwxa0T3NoNZiW4iO72dmr4oT9JVXR0xHDlF1sLU1pWFdSDgR+BYZ2+DXrZGYhnOnSb6MWSBcK6H
NcmXoaOnhQGflUJzgkIovd6UwDJeXYR2YUBRbfSuUQYTNNVFDgk73ZcqfSoN6bVGZHkwiBqW0oVj
paKY6tgOvUbMQLESs9Cg7VjUbOiobJ+7lhQmSrOoq9ujROkgjJq8FPGXn723oooSIBIgEiASIJ+m
+tJ3C+mMlLl94dLlS4ToF4VTA1vERdhjythOGNShLnxGtsHGWfbYGKFQKt1PmNEJZUv3V1ThVQ/C
iq4VyPqoCB3NcfTcfXiqFcVlenE86RsOySUAzOtqSRZIVWGpLO1mKfwh3qIcu8L/EU56yomBJF6S
6kawOEW3bmTF+JOlsd7eGqOqloKDvjZaVi6OPgSf3RyRxdCg/Y8mi4X3U5s0gfQjO+LJellvb4VE
t47o4OwKs1o1EBa3DYHLk1DZ2hXV6w4kqPiJ5ladHb3hER6G4DXxwhLjplgfs6y7BIgEiATIfxgg
wnHL6+/9q37UkN4tDm/OBeFjUi0d/W0fNMGu626OYbqKSKYQXi5qYwIXfcXyTwBpXntTpNlZYWNv
S6E0OzN0t7GFnvZE1DVugHh7S2FVuNY3Q2PTOmhVqQR6lC8qLA+OrLLhPA6z4ljSxRLbB1aDXzMT
JNBzXEG3DVkMI2uXwaiapdGspC5a0nvWK8N5p3DZEnrM5Ux20PtSSFxAkaHTVkcDhvTaOg4kIIA4
EEDm0n1jdUUOySiSg1UJEQU2rHppYelwFnzd9nZITH+JdSfSCQh3RXn6iZFRcJ22CDpFIkSkmefM
SJrUb33UxlISIBIgEiD/UYDwxLyulzXG0cTIV9dp/T9ePgg70tmhvql/bvCwFcfEx8bHmNN2mwhA
3l+Wwwi6Yh9BV/Yb+trCqVIx0dBpKFkKq3tVyfI+/uzkvtZY2qWCgMcmJTTZkc7RWAyrOd0U/Tqu
cAIh6TwvPRnpin2z45xrWXXW0YTj52WFL2MjvTeWXvNsboIGBBWGSzSJ62INKaOHNfxdW5vCniwS
bizlSvIgJWWyYJ6Taiir9nKplA4WhkglgAw0NcBjerycI7yGuonOhSKvgywKtjY4KbK/x2Ti514h
jjjjVrp5tbbl93GIb34q7RYmgHA9uMePH4sTMCEhQWSXS4BIgEiAfCCA8GTKTtvBygl3WA4T7ody
onOuA+eDcEgvh/Zmt0T4GPhYhhEY+NgYComZ6kZlh8h6e/qu/asqfBQMxOa5A5H3wTkam3J5jR3k
AQ0roH/l4hihBEkbnvibmMCpeimsIkthJB33iCKaWE3PO9coDVeyFEbR389MU10Aob/SaT6ErQr6
DgFkcXAZ91Lq6iIcmAsmcj2srkrrgpezailrZvF29Qx0kNCnCub3rYd+HXrCaag7Vh65ijlpuwQc
VFV3M0eZsfg+P8dFFxWBBQ//1u8jvz3WCxtAHj16hBUrVmDJkiWYOnWq6JUjASIBIgHyoQBCE2UU
XR07Fy+Cb3niosmP1/vfqcRIDmIHdJZlKNo/JxFyMiFDhC2RLQ5V/wYZPpYAOiY+Nj7GqOxhv2RJ
bOxjLW5T+1pnPN5Et1vou6f1++v1jZle58q3bE2wcvquqf1sMLNdRYS3N4b9Z6XQkD6/EYOAgDGI
7rNFEMGJkCQ/0mdkWUxUJgT2U9bL4o6EFUlscbBPxY2/g/J5dpz3JDVly4bEkVhcqbc6WStfmBig
M4HIt255bOpjiVSfHoi+/BLx6c/ReeAksSylaoClCtNVJA4qxPfzqnGV3x7rhREgXOsqPDwcsbGx
OHTokEgElACRAJEA+YBLWDyBTm5eCYNMi8Gnfnm6in/PPT9I/l8ZY3jtsljTs4pYMmK/Bpcx4XIm
bInEZwODygrgY+Fj4mPjY8w+2acM/gIpQ+q9lTY518eC7lUxmCZrJ9KizpWxfaB1hv9ni4Mt/BpX
gob6DGhpzIB3IxPMbGuK/nT8XEn3AMmc/RvKulfsTN+iLLQYzNAgkJTR1cQeup+m7ETopq+FhuWL
inpY7spCizYaiox2hlFlUn22OsjaGUHwcKhSAkn03RkgyV7dEHPhqXCEs0Nc0YI3WDjK494yy/xT
BwiPHTt2iOUrThR89eqVBIgEiATIh3ai88Sc8q7FDXOxPNiJPF0ZneRkVQKpys/IXFAxNdvSFS9V
sbWRpnw9x2PjMN6kjYg5dh0xhy/nW/Gnb2PgMFdcVPobbEoYo5NNDUR2q4jNA6yxnQDiWKuSaCLF
GlzbFAecqyGePrOTka4ojHicnfNKp30/ZUn3fkq4dCdLpZqBNsLJcpqgBEzPcvqi7lUTzv9QOtmb
mhsiQE9LWB9jlUtYQxVVHMUSVg9bI6T1tRIAiT7/RITickiuiaUHujtPRvylRzTxP/lHLWu5Ptan
uIT17NkzUYqES5Ns3rz5b20OJEAkQCRAPgBAPpQyA+RgNoDk7tCvIvwdznQlzlbH5hy2F1DpZ434
nQcRffEFonkpJ5+KvfwSM+evwtii2nBS16b5eidpBoz0uqJHVUVeyLqeVuhQparQ2h6WCGxiDOfa
ZTC4eBGR9McAmUoWhCNZRyNIHLYbqFyqYsA40uQ/oZ0Z+un9VbZ9VmcLkcXuQtbFcNIGOxvM6WqB
piUUyYYcnVVZR1PUxuLosS5FNLGsS2Vs8e2BDZcUta0S019g/emr8IpYiQEeM7B09zkkXH4hKg2/
bY/4T9GJzpM9d+ccNWqUKI748OFDCRAJEAmQwgqQ3Jaw8iq26NvMRDjNuT3sAGMDYX3ktOTmWMkA
7r4T6er87a6g151/iiNb9yLGviqc61aEtsj/8MrIC1nSuYIooLjL0QZ7BtsitK0CgFzSvYXS8uB8
jSrq6hhiXRLeTUwQo6FIOmxYSg+D6Ht6NKoI76bGsOEwX/aREBi4FApnsG/iLHb6DmEE1nkdzNHd
piSa8TZksfQlSJUm66WP0kqZ1KwiPFrUQv22nqJMyZzUvRg8LgAaGh50vK5oYzcUU9YniUrD/0YN
rIIEEI64evLkiejvwW2eDx8+nKVkiQSIBIgESCEESI5O9DxyPlSJegHaGhhbr3yWpavMTn+R56Gr
j+lpR99qKYcBcnDzbux2qCmc6QFNS6OCXnloqvmjrnFDJPWxxKLOlrCrVQ4hNMlPJYCEKZfg+lka
oqO5oSjdflrZkbAHQaSeoY4IzR1oSdZFrTJopCys2JHAUo1kT3Dw+qIctg6shs0Ep0kEnVFktTSi
5+sQZNi3EkhAYogkKJ3tzbU04POVEfS1xhIsvoFe0a4oVsKb7i8ndRLNporo9YCG5mSR/+E9e5Wo
xvuuzaEKK0AYHjNmzBDl2DkKiyd9fk4CRAJEAiSXkdsVVmHORFeF73IEVnaHvirsmJe4eIJ2samO
hfsv5xp5xEs12V9TAWSHQw1sGmCLETZGOEn7CqMJPahVRdEXxLa0EezUtDFUSx1TWpliQlMTYUGt
p+OK6W0N+6pGiKDJnmWqr4226ooe5hzaW5eskMF0/2dlaXc3ZQkTLk8ylvYzpHJx1CulKwos8ufO
Uvo86irrZf2ojNLiUOEBlXVhVrILvT0OZSo2E1nnXLpE0ZHwR6XlxEtwx9GoQy+ERidn/f4E1vWn
rpNu/CN/SWF0orPfg6vspqWliUq6EiASIBIgOf2Rnz7FnDlzRNgiN8XJPB4/f1moS5kwRHJz6PNr
0b2rwLFuWfgvXIm4yy9zjTiam7YHy/efzeIoVgFkz6CaSKG/T69KOjjBobRkAfByFUOrFkEgXdn/
nNvU7hpcHTscbbGNrKjtZEGsJYiMbFQR09uboRVZJVVpu3iOzCqiKUKSzciqqM7LUqTBymKJ/auU
xLCSusJyGkMqqbRiuMmUmroilJctna8MtOCsrfAZDbMshjUuzTB+WRQW7zqF3iODyRJhkAxF6Qpt
0c9tAoGlEb3flJ77EpqaDeA+YwniLz0X8OR8D5vaY4T4/ofqDVJQAPKcJh52ovP5wN0FL1++LAEi
AfLfAAgDga+auKlNfgZfXbEFEh0dLSJOeHBp6nPnziE2PhHeza1EdnVhL5iYWQwProob1qoSfPS1
4FGugogk2pDNiczOYZeJ86FvEAjTKm6Yv/WwmDzjaGKNufYNjm7bjw1kTbS2MIS2pitKateGT/1S
Ipdkcz9rzGxTCYNKq8J8LRBF23awMkd7qxJkiZRBUwMdNNXVRFDjipjZyQKdtRS5KsHcYKp+eczR
1hARWUHKUN/mpXVFNno3Agj7d+zIUmlhVhy2hkUw5POyaGpiIJbDzpKqli6FMrpV0czEEOu6V8IM
+zoIjdkmLAh2fE9ckYg+Y6Zj3uaDGDVlITQ04wkeUcriipfR0cFD9AzhPii9RwbSc2eF+D4/9ykD
5Ntvv8XIkSOxdOlS4UjnJa3r16/nuv3t27dFj3RVifeTJ0+KSC4JEAmQQgcQToLauXOn6NMcRH+M
8+fPZ+lVkNO4efOmsEJ++OGHfx0gHC21ORer4W3KtytyQGyw1+Ur7NyYhuitu0Xfj4Qd+7AiNhHz
1sbAcdAQYR2wBo70RtyVl9m6ED7El81HixLnPLmOnbdMXJV7zViKIV4TMW/DJliYDKbXNoiKtlra
QVi4ahkStu9FzJZd2ETa6dENsfaW2DmIw3otaLsBpClwU9MXDn4Ou7WrVAxpjtUxmayOoeaGGFqn
HJoV18Fseu0YO93JshhHsBjXoALi6Hv1pdc2ca0rAsySHlZI6qcoDb+6RxX0rmyAShpF6DPsxPKU
sWEnNKr0GdTVOhIkWsIjfLXorqjqNMjNo5zHz1TCI4Yskz4wKucjgMrbsCZGJqBkGW8hvv++oq4K
KkC4nwd3GNy6dSu2b98uep2zVZLTuHfvnjjP2F+SkpKCuLg40TgqJCREgCjzhZpsKCUBUuAB8v33
3yM+Pj4jjj0sLCxPE5xDFO3t7cUPP/tV07+xhDW5dWURsvs2DaSyL1Vl9EyvbgSXKhWwIG4nNlz9
Bhsuf43QlIP40qYGhhuVhd3gUXBu0BSDv2yI8KR9WZZm+P4quh27KBZmNq6o18oTq49cReCaVISp
q4uJvd1XDaFTPFQ4p3WK9ETnQd5Yz87mC88QRUo+9wTHxzkgxd5CmVhoCg31uuIKv7majViuakEw
6GlrBKfKxeHfsCLGNqyAXsYGIgt9vdKn0VZbE8HtzBQBBPQ9fb4sB88SRdC2QlH4Na+EZCV4tzlY
o5NNNWXuyQIBtZK6tnSbSPqT1A6Dxs5AYiYLgpfo1hy7QRCJwNDAWZizaS8W7zyaZbmO7y/acUTo
Q/ZFLygA+emnn4QTPSIiQoTz5mXNv3jxAv7+/vDz88OuXbsy2tay9XLhwgVxX7a0lQApNADhKyUO
Pfzll18yLBKGSm7ju+++E1dY7DTMfpX1MZ3oPDn6NzbGdLraZvF9VVkS0cK2g6KFbWS2FrY5Ocsz
90znDO0GlS0QsfEglhy6CicLa+E455IgDm06Y+ruc5i2/aS4Ks+Ax8VnGL84Gk5WVTGsXVcs3HWM
Js77SEp/hfFRmzGjiK5YKhpoPwguU5aifht3+M1fh/jLf9WMiqLb5NP3ccyvP5IJICqwBbeoiCaV
a6JHtSoIoGNc2N0Ko4wU0WCjlRV0uSe6vY4Gmulri9Bfdy7nTlCN66uwNHY6VkMQAYVb4nLPkSFV
S2BlDzN6jZfIqorscA31MIysWwwLO1aEeame0C4yDkX0ysM5MIy+Ky/D/ZVAyMcslqsuK3qf5wQJ
fu5DwqMgAYSBwRYFF1TkcyIvJzrXyWLY8PnDS1TsS+RlZIbPjRs3JEAkQD5tJ3pe4+MCpBqG1yor
nL4svs/PZQfCQ564TYtnZJ9nDdcthy0DrLC1vyXmdDCGt7YaopThrC5j/DBz11kEFFE4oHuUMELn
oW7wqlgJbmXLZ/hARJkOmsiaNmwmrACOgBo7fy0SCR6L95yDg90g1ChXEb0Gj8TSvReFP2DDhQcE
j+dZig7mBBDVd9k8gPuc22DrwKqI7WONlsW5PLsGWqrrijpZXCSxRcki8KPv7PlFGeH7mEzfz4ks
k6BW5TG7vTEC6bWVyl4jZmrFoa9jCff65RHXyxRDapUjAJejv4MFttlXQtSkwfiyLTeQOgYt7Vlo
3NEBTTp7ITxh9weNqiqsAOGl3LFjx4o+5zNnzswzjJdhM2vWLGHpsx+El4wn0US0atWqLNGNcglL
AkQC5ANHTK3pYQWnKiWE+L4q3yNjSYosD657xfWvVP09VAmDHO46oFIpLBvQD0v7OiBygAMcm3VB
veKlMJQAERSZJJzfbhPDMYAsj0krEzHEY/zffCAMgelpRzBev6hwaHc3MMC0jQeQeO01nNwDRCIg
Z5AP85uMBHqOgcEhvpFHFd0M1526p4RQzgDJXoQypa8lbMrUosk9AiX0WmFKW2M0NywiIOJSQgd2
tUwxSFdTWZpEg26mQVNjBnwam2BMTSNYapSg59aQXsOmbD1E9u+D1Q4DsHLAACztNwDLevfG1sUh
aOsQRNvsJ3HzqEWi6VXDtm6Iu/jwb1FnbI1tuPD0PwuQly9fCsc5L+8yPPJTzj0zLGRPdAkQCRB8
/DwQhgI3P0rLIVkwNVvdq4ySJb0VJUucDHWwxKEL4g/eR+TBh1h14AHWHX6AeVtPYc6O02QpvBBO
44T0r7FelOD4Wvg9BtWuJ6TygTAMFu2/JHJDeKlrEMFm/fnHZGG8gFf4UoTr6CBcWwc+EcsRTc+t
OHkXq0iOTVqLbobOg0YghibgWO6xce5RngBR9SpZ2MkCA2tZI6y1BRLJOhlRUgFEV7USIjdDX20g
RhbXQv0SxTNqaznWMoZ/0xJQ12xMjyeSlqHH0BCsO/ZYfPe/dB9xp26L8uwDvaeiv/s4GBj6i+17
DQ8hqD7JAo+1x2/Cf9EqhMVtzbJklVtZ908RILzsy74PzgPhST+7b/CfDAkQCRAJkA/cHCqxry1m
d7FErL3NG7PNVZ0IORw3SYDEHCf9ByDlLE1G57mPxUMhvpLmSKOJKxJE4T8uAKhylnP12JVkMbAy
V5KNv/gMk9bGY/CkKVhJlkWiqPekuDIfFT4XYyIWYPmhqxjUqiOG2n6GAYHTMaWYobAS7I1KIXz7
Kczecx5L6Pakv0OeAFH5eLYNtCGYWKN71aow0O6G+nrFYGZQk3aZDkNdJwS2KobI7qboVKUqutjY
oGOVyqL3upqaG6pVKAnXyX5Yz9ZPpu/+lx4JGPByG4OU4cCQYFhkBgLDpNfwYJGlXrS4L8Lit2b4
RPJqLPUpJhJyKRNehuK+IPkNiZcAkQCRAPmXAJJCEHCxNcJkLQ0MMTZAjL3CR7AlF2uEI7G4LSx3
GUziqKy+ljhFk3WK0v+QcUV94jZNip7QKzpCOJeta48hGNwTBQXFhHr5uQhLVTVWUoWtlirvh7LG
gRg1OQK9R05Gk87eGDYhjJ6bgPKmQWjvNEoULvyNM7+NTdHCsCQclJV1W9SoAw96zqtMeczr/qUo
dZKf8GWun8V1tLielklJOyzuXB5D65jAtpQZ9LUnoYFJQ/pbmGPXIEs0rVxTLFvx8lVo14rYfGkP
geJZjln0a47fEn8TlUXBUGUYZgcBQ5KXtdTU7gkLZRxBJvnaa6w8dAZ1mrh/8Na2BQUgHFnFYbjs
B+GGUpcuXZIAkQCRACmoAGFfwDoCxjADbXEVH6yuLiyRwCYmORZPVHUiXKnsvGdP9+PsLLB+eDfE
n7yLaCUMeJIct4iv0gNIoSIRzrrWaLiHzUd/jxDRttUjfCXmbv4r0zxr4tw1kg1pFekJyZp0UYTh
Nu05FKM+qwm/ogaiG+APXLRQTeG0r6GnyEDnUu/O1QwzggHyskA4uirB3lL0V9fXnogWZlZw+cIE
/k1KwaR4bwEVTXV/hLYqiu0E1gUdzQVE+lazRJITvffkNkSfzeq32EAwHLcoFpWr1EDDpm2wYMfp
PHt2sEOdHeuN2ruJ5a3oM/cQsDgOJhb8+cHiGMoYjxE9RT6EFVJQAPLNN99g48aNWL16tcinunr1
qgSIBIgESIF2omfqSe5avRR8W5mKulKHcirfTvcdTIuJEN2lpM/NS2A4PZ6io40hDi6IuagIR2Vr
gpdrihsFQkvLFc27OWJkyHRoanHi3B4SJwkOJ+skAKbWnGl+RERTRSTvRZUaw+i1PqTZYplIQ2Mt
tLQ5RHYMiujZYfqGrVh25DpC6aQY2KqjcHr3NCoNm0bN4TJ1PoZ82QhDPq+PyFG9sYk7GuYRPKDK
b+ElvIQ+lojsVhbtLK2Fr0NLI4xAURTlDDqLJMSiOj4YU8+cIGKriObqb41NQz8jcG4jYLzMUl6d
LY0azTuKTPYjXAalZ3/xt8mzRPv5J8rluicikfKLZtw06pmAcKlyQzAkYJ7oKfIpWyBXrlwRfpBF
ixbB29tb9EiXAJEAkQAp4E50hkh0Xxv41CuPXvpaokDg4RwAouhEaIH+BI3OlYohtF9NzNRX9Mxw
MTXHrJ3HMG/LXmVE0XN4zJiPz+q3RvDqJEyNToW6+nTadC/JhTSS9IPIJldkmj8T74k9dxvdnH2h
odld9PkoXaEFjMo6iW11dANEfSzejntoLDtwBaPnrUH7Gp8jUVMLI6rVxKx9F7H6Au1r6x5s7FkJ
G3ubZSilj1Wu+S2byVrhzoaqfA41tekoW7QtWSGVlQmBQD3jzwkeVkglq2tLXytscaH/z8W9mJl0
MEuDJ446cwiYilDl39Gh98A3AiTnUi4TYFrFFXM2bRe5Ip96OXee6PnkY0f6+vXrRVa6BIgEiARI
AQcIL2Wt72MDF+VSFhcL7FmtlGgOlb3/B0++oidGX2scn9wZox0HY5TtZxg0fAzMqvqI+lXDJy2g
q+U7qPqFp1h6KlF6rGi96jVrFQZ4TkaXwWMIJl1EFFPJsh3pteMi2irywGX4L1qPgT4TyVqpR6+3
hFUNOzgHzkKFysPQxXESok7fzVjG4cl69blHcLayFUmAgUWLYOrGXSJ3JObQRcStWkxaIpSwZgX2
+/UXEPl7fksxpCpL1q/raQnnOhVRybAGFA0Gk2Fc3AaWRl0Q1Lyy6NWeOC8YI3t2wVcWdeA/fzZ9
T6+sLWY5WICO0WP6Ijh5jMfi3efy7HX+pmKSH6qIYkECCIfgcvTV+PHjBTi4Phznd0iASIBIgBRw
gKic6cPZma6tAWdjA9ECNsfaWLQdZ5+v7GaO06FdkZr+EMEJu9Gk6wBlnsN3+LLFGJrcuXe3a8bE
unjXUSRf/RpJ6S/oCv0BajUaI5axajTogrgLj7Bs33lUr9eanjNWljv/mRSCSlbdMNhvOgFkKAFk
YhaACIjQ5DphSQx6N2mOEnp1YGrtShCKxQbOcOduh0rFXvkWpyMmIsXOXBEMQBaXa60yGGxuiIWd
zBHXhyPRLEQDrT2ONuhhWwF6dHwVinVCZDdjpPQ1E6XiGaDzV0VC25CtqZ9Q0WwYLKs7imWvzD3K
+RjjOFDgyou3hkf2cvYfuidIQarGe+LECXGfs9F5OUsCRAJEAqQQAOSvcF4LxNhb5xjOy5MnL3Nx
9rlzMS2kBnTAxvNXUKW2O02g50juMDZ3gP/iDUikiVPVuzt4dQpNgLdEXwv2dYxfGgsz21a0/WHo
FJmF0KgEtOvHDvdDpLkkLnkei2Il7OHo6wcTSx9Fx0HNEMzeuJ2Ak9VpnZj+Eo6BgaLvBi91fdFs
NOIuPsgKmvPPcCp8fBaATGhlitmdLZBAj4dUNBCRaCOrGmFJjyqiWjA75AeX1hQwVf09+HZlbAwq
2bDVEY0GbX0QkbwTfVzfX4/y7BBZe/wKfZc7/xhEhSmM930PCRAJEAmQjwgRhkRqLrkg3J6W29Ry
sl00afbIlth0IR1WtdyEpVGilCcWbNuFBC67TpN3Elkcm259hzmbDir6WnzuirC4VJhW4cl3AumI
8IuErk9A+37jlRnbk2D5WWOMDAnFkt0naT+3Ub9VP+jqh6BOU0+sO0kQuvRYOJtV2dse4ZHQ0val
9/pDR9cXI4IXIf7aK+F3UE26mQGiiibjJSy/IpoY3cQYoRrqYvluRDFtzCALy0NPC+fYD1RGDxv6
2v5VRLJPFcRv34f5O07Cd/4KrNh/gSyqZ++1R3nmaC7/RTH09xotikoup89ShT1LgEiASIBIgPzr
ABFl3B2q5toAKrOfhJMHp7Y0hUtJXThW0MPOCR2Rdvm+yCZnS2MS17VSZk2rMqtnp+6B/ehJyvDc
C+gzejy+6hggSoiUq9SIJv+l4qp96Z5zsB8zEf09AjEmdAGadfUXVWq/bOEt4FGvdT9EnbkhrBpV
uOva47dEXkk/9xDa3z5SPOxGeSLy8BUMthsER9KSvRdFVFRmgHA0mWPl4nhOgFhLGtfcBGOqlRKR
aByRxn+Paa0rw6VWGSzoZCGCBzIA29cK65I3IuHqK6XT/9E/siryAxy2otiaUgQbRMFnrqKsvQSI
BIgEiATIvw4QXo6Z2pqAUDPrRJnTdrysNb+LBZZ0t0IEXaEn2lvhVGhXpJy/jdgLT7NMiJkzqw2N
xmOIfzDKGgdAW6c/XbVH0sR/nW5XYf7W4yL/g98Xf/kxNt58jQ20v0pWbqJUO/tI1NS8xfJVhcoe
iDl3FU27eIt6Urxv/8WrkHjlpSgX0trOl+SHlUeuwcUnSOSqrCE1rPcVlh+4QlfzLzIAsoUAEkIg
tFVXR+PSeqLeF0ebredMfCVIs4NVYYHYoJtNaZiYdoaT//x/FFbLsOTugpmjtt4cjaVqrHUkz3wS
CRAJkPcJED+/E/j61cu3/rwXr17hhJ+fBMinDBCeGBkGXLL8nFjrz7ZUk8nyYHgMNTbAQG0NuJA8
udx5C2PsC+6E+At3aGJ/nGdm9aSV0RhIk7qGxiiY2XhgwbZjSEr/WkyefDXuvzBGlGbn6K3E9Edk
YfiK8F4Dw24wtvic4DEazuPnI+rUTZhXbSvgoavvjWmxmzMczXEXH9F7n2PT3R8xdNxkuNJ38uZu
gmxhzFuNxKvf/OUDoe8+1LqkKA0/U1MDU9pUFrBI7Z9X1WJbTCJLRU2NQ4rHkfX0FdYcuybKlbxN
ZFXUKQ4uGJM1aisPKOTW2lcCRALkQwKE5eG2F0f278W1S5dw9eLFfIm3PbR/Pw64ub3dh0mAfJoA
4SvxWZ0tMI2u1pfTdudJV/jKvqweRpcrBsfWHbHs4JUsSzl/z6y+hXqt3EXUUualGJ4c151Ih7H5
aFEeRFtnHLo7+5JlwaG83tDSHgENzVXo5uyD1FvfYFJkAj1uQ9s2J7A0JUvmRoajnEESkbQX/TxD
0axVB1ylYzzFJdfLVcS8rScQd/lrnJ4ZiI1KgHCOCydLct+PyUqA5PX32uZgg/41uHf5bbEU16hD
PwGsuAtscT3NNuk/em8AyRyN9alHYUmAFCCABANDe0div9NAXKOJ/aqHR77E2+5wckJK795AcLAE
yKe+hDWNl7Bq5b6EpYjOssFIWyP0MiyCPiWKwKlcUbSi299p8uXufsOnLxB5HLllVrOTma0MlTN4
xYGLCuCI8NS7qNfSUxlBZU8ahBJlRsG2TjNlKZPHaNzBE2l3XqOvW5CYvLnQYateLhkVbbNOzGeg
rjkE7Y3LYST3FNHTh3tQBBJvfI99YQFIIIBsc6iGKDtrjK5TDv5fGYvQ3TcD1xaLOpmjWulmsKk5
AnM3H0bgsgSynNzEMpMi1PaRqFe15tilXJe3FEtYe/O1hPVfK+f+tuMVL5WcOCFa2HIeieyJ/n4B
Mrz3Cjx2GwWEhIgJPl+ibe+Q9ZEqASKd6Jkhwvkf0X1sEEswSaJtR31eBh5cwFCtHOq2G06wyGki
fJg1HJWsDS7TEX/pkSimqOq2t+rwRVjX7qysgRVL4uzvUaSFKG7UEtNi07Bw217UbNhPRFppaI6A
/6IoERKs6B/+UBRqtKmtyDspUzEQ/YNCRVn4X7lfSetOCFgejxEmxnA2KYqpZHGMrF0G4e3MsG3g
X73eeQkrNc+y97ZIsa+EWPqRR527k2E56RQZLzLwY889QCeHCTCx8ICT/5xcIZJfJ7oESO7j9evX
ovDiypUrRdXe6Oho2RP9AwDkkftoYPJkBQzyI9r2tru7BMjHAAj3gD5+/HiWH/zHBsjbZqyniuUc
Wwz5vLLSwT0A3ZwCCApZJ0NecuFJMnPL2tjzj+hqfQFdtXvAefw0kYHO4Ik5dx393DgxbwUMSwWg
et2mog6WmpoP2tq7oOewUOjqTxbWCeeO6BUdIhITed989c/7GzN1IWYk7EBf1xAErUrGikNXRa0s
pypVEbAsTkBEFX7cQF2xFOdeRANLupojrZ+1AGhiHzP6jlWwqZ+NCNfNLM68T6XbpN4E0s0HEHPh
odJyikYlK1cBwblpu6ChoSh+WPYDFj+UAAGOHTsGOzs7YV3s2bNHVO/lIXuivyeAkNExtMdSnO3X
B89HueLZyNH5Em97rN8AJPXoobBcJEA+DED+/PNPUbqBf/DchS1z97X7T54VSID8ZbVYoYHJ58pS
HzEYtzCSLIoXWeCxZPcZ9HcPgUf48oyrbq6+y1framrfimxzU+uBaNXbCyZWPhjoMwOBy9YiImUX
QtakwqisN03CIxC0cjVN0L7is7R1glGv1XC4TFqA+Vu5BtUmFNGbqIzYag/70YFIufEqo0z8Wpq8
lx+/jYT0V3CdGI4Ag2JwtPkMXc2rCL+Pm1EZzIlORPLugxg/YRLMSnZCg8+6YGVsPOK27UHs5l2k
nUjYsY+0C4k79yEqbT/WHb0rLCfOAeFckPlbD4tQ4dVH00Wuyocuvy4BApw6dUpA486dO6IPuuyJ
/n4BEkRGR582EVhT3Q47Grhia/3R+RJvu7R6H6xt04GsEQmQDwYQtj6C+D9Kg3/gqrXb5ORkBE8J
hUcTDje1LaAAsRV1oSzL9ECj9mOxePcRmizvZTh6OSKqde+xIjeDEwWDVsWJhkrL959RhuhyqXcG
yWBSD7EMVN7Ug957Q/hLGDbztuwTfo5m3caitd0I6Or1JFg0R58xE9DZcQJZIdNg87kDvc+Z3r+e
1BsN244Wn53ZaZ1hAdDt9LSjWHIwnSB1AIPH+Cl8EJdeYMOVp/iilQft4xfhi/FZuArx6a8Rff4p
Nlx+iXFLElC/vQ+GBS9BDMEpoxYXQYqtIJUfgx9/jAZQEiDAL7/8Ii6+GCLp6ek4d+6c7In+PgES
wgCZhZjPh+NA88nY2yw4X+JtV30+QgEQaYF8OICwxTFhwgTRA4FBwg5B1YmRfuMWfFvZFFgLRDjg
+1jh6OR2CFm2CpVt3LNkSnOmuCKz/DA0NGZgSlRKRtjuwh3HyIKYCqsa7PPgyZ9BUwcte3mJyZ8h
lHz9a0xayZBZLZzopcp/RcCoQ/dfkJaS2giLREd3OiYsX4nuQ4ajcQdHhCfsFc77vKOZFC1iuUZV
nLJCbm75FtmjxNh6Yisqr8/4GC1oJUD+Gpn7oMue6B8CIMMICgyHSfkSb7uKoCMB8hF8IDt27MDE
iROF1ZF53Hv0pEAvYbGS7axwZnpXNGnlkjVT+rIiO9tr1kLUbdkRo0Pnw3/xasyI3yYmXo7KSrjy
AK7TZ9F7OpHmkaqjp4sbEtOfIvLgOdiNCoV1rZ4En5E0aW9ARfNmwsLgqCwN9ZEwKF5F5GM07jCC
oPRQ2d3wca4TO0/mYlLPI2cjx3yLLFFiCl8HW1H8/Rg+Cgg9LTSgkGG8EiASIJ8QQHhkNrcLuhP9
bwAJ6wn34FnQE30rFFfuSekv4R6+DFra4ShabCGq1+ss4GJQ3BvhiVvQ1Ykr7HrBqFxLpQXCfpRp
KG/6Feq19kC5Snb0eCXpKSyqt8NXHbug53Af1G7cRQkRLouyVmSjt+jhSzB68sbkvXWn7mFq6iFE
Hr2ZZ+mRnPItGDqZfR2qyDFe/uJlsJD1aR8kO1wCRALkfY3t209JgHyqAMlpFHSAcCRWsr0VdgZ1
xqb0B5izea/iyvy8IvJKUZuKCyMeh7p6TWVDJhc0JhjwspMCGuNEPxCFFdJKGbobL9rWKjoWrkYR
PVuoa6TQ/SS0tXeEXlEnYXmoq48Q2eifN+mC1UeviHpYuVkCUXRM3C0xRL8oHJu2FhDJLdEv1/Ij
mXwdrFk7TsPNqDQucF92XQM4TppfqC0RCZDCMe7ceYALF9Jx8eLVfOvy5WtYujRJAkQC5F/wc/S3
FU2WMicYqhILh9uUgGvZYnALmJKl5wVPtJEHL6Bpl5Go07QXXbkvRtHibFV8D20dLs3enu4HoWTZ
+mjUni2OxvT4OSkS+sW6oliJyegzxlcsYamp2QnrRUMjAfVbd4Km1lphmZjZNIOhUTfh8K76RT/0
95iMKes3/c0SYOtj6bFbGGpsquj5rqGJ0I2H3qlBU2aAXOI+7GrWqNFslMhFkQCRAPlQ448/fqU5
NhVjxqTDw+NqvuXldQ1duy6Hm9u9t0vLkACRAHlXeKzrZQ3/ZiZY3s0SWwdWE8+lKUubBKsryp87
0+TMkzSHsXJ5khkJu9G82xgCwGCCQRi6OU8iUHgLH4JFNU80aOtA97eRdRGB6RuSafIPF/WyDI0C
MX7pYizcsVc40e1GsXXSTdTE4l7oHuERKF4yUFgmhka20NJmJ/1dZS7KGRTRbQmXSRF/swS44dQY
/1C4WFgLS4SXs97Vwc0QmbQyCQ0atYBJlfbwXxQvSq9LgEiAfKjx++8/Y8qUfQgMzH9SuDIxHL17
b4Sr6x0JEAmQj9hciuRUqZhIvGtdTAdDa5fFmp5VROY6F1d0qlgUU4poYchAF8SS1bFo5xEs3XsE
jTuMFW1g1dTCM6roLt55EH4LI7F41zG06xsglrc4vDdkTQJizj1A4PL1cPAaD/NqHmjYdixZMJdo
YruDNvZjoasfji+aeos+IFwavqvTYGGt8GcUK9GMrBbOWD8vkgy/aDYUcRce/i2ElyGy9NhNRCsj
q97HpMvhxutF2fobH7zlrASIBIgCIHsxfvzb1ShkaPTunSwBIgHycTPOo/rYYETxIthGFJhLOsjN
laxKiEKEbIlE97LEeq/WSL50DxNXJqNkGR+UrjAOn9XrAg2NxTShdyX1R58xwaJkO1snHKG1fP9F
0RfdMyIS0WfvYP3Jm0i7+1pppfwoSpmMnbdMlGnn9rWzU3fQJH1NdB1Mu/MDApdFQUNzqLBamnYZ
jGkxaajbsjvMq3bEuIVxYjLnpayVZGmwOM8jitvaXnopcjp4uY1v+XkRRUX3ueVtVKb2t2+U0ofy
oVvNSoBIgEiASIAUyiUsXqoKbVEJbSsaYAbB41AmgLAVktynCs5P746tNx6j10hVwygOwQ0gK4Od
3ZtJ2zHQZyrB4Lnwjaw7cRNz03Yj9vxd0ROkXmsvVLLqip4ufmRZeJG14YNS5ewVmd3nFbkUHC7L
zamcx0dg2MRF9P6DMCrXhPb9FT2eielx29HHdRLC6Db5+muxlBaetBeDatcl1cOs2bOQuGYZUtYu
w6y58xSRUzMi/t/eeYBHWWV9nIQi+y2iH+qiAkGqoO668ri2/Za2IKJAEFIgQEBKKIEUSCiBCKbQ
SyjSkRaBJASSSQNkJY2mSFdCWdEFaYqg+C2u7b/33MyEZIBkZjITksn/PM//YXjnbfPmfe/vPfee
ew5WLluMtwLCMGbyVMSvWYaE1UsRb5GWYGPu8QKIOIMIEAKEACFAHJJocavyNiRj7VBjF5YMqke2
bYB+9WthRp+XkfzpOcxKysGTrQK1FmTsw9hFG+BSbbbyFGboVCbigQydMh8tnnNXkJiGFzuOR+BM
mf8RpRShEyDWa+StPJgeqFFztFp3sU6RLtCRNO5DwmOMEwiH4bnWL8HFJVV9/hlP/rmHAo50mR3A
4096InxdIuKVp+I7PATHFPBEg1vUwvbejTGv42Nwr1lFpzAJrl4Fr9ethj3q8wylqe3qYpt3IyR7
PHGbDEYVLOvRQKc40Z6IBA4U1sHzBAgBQoAQIARI4fEQydaro7H65HdtDap9H75TDe/EGtURM6QT
Usd5IDGok5YhtKf6twsWvfks5i5fh03Kg1iQloka9/kbQ3eBatWjMWn5e2jytLcCxnC17DOll40p
3X/E8239dTnXoFkr0X/sdHgOl/rpvXTeLRcXP9Sq/SZqPRABL/+xqPNouJ43Mq1KDcys6orQmNWI
WpeCMQ8+gICaVXVp2rR+T6G32/0YbIRK0P9UQ+f69+cDxEVB5uXHEevVXHfNmXthUge+aKbiJ7F1
ZCdsHd1dyf2Wgt/A5sw4BZJLBAgBQoAQIJV7EF0aTfMKfYUH1zfJ2/0DNbCm+xNI8W6ia4Vn+DRD
Ru+mSPVujH3D22JbzhHE6RxYh9CgaaAeE/nfRwagi+9kxB39CjGpmWp5a1St2hSurpKqpANqPdgD
4Ss2I/r9JLVshlqWjfY9AvDc3yR665yGRcDM2Vi8I1enS5+iYPHXDt3wiTofAcKAwDCkn7iKLQGe
WNzVrSBybOQzDyNQff9cDVeEKw8qtmczjGhVF20er4WJ1V0x5MH7sMy9SUHIsmwjnpavAk/oi4/q
dPYF18K7KZK9mhSVpxsSdy7BhiOXCRAChAAhQConQPLnebTAvK6NdbSV+Vu5Kbx3fNv6xgY3f9ma
HqpB/vMfEPTK45j6akN0b1wHbo1a462wRUg49R0W7jyIsUvj8O6uTxCXdxWbT36rPItxCgh7lXKV
5ivlKLgMR8rZ7xG2VOZ8SGr0XWjTLQAxKdl4pXOArrUee+CsDteVWeIyuD508kw0u68mund+E0t2
n0by8as4ENZPNfSNC36T1D2f0q4BFnRupLvm5LzTfJ9CfwUISfMuQBzbur72tExBBOJpfa+Wh1V1
wYJuTYqtmZLcqwkSM9/Dhs++uzXYfuQiAUKAECAESOUBSJJqPP1a1EFkNVcMrFdLQ8TgU/wEQxlY
92v6IKaoxtZPaaCrC1ZJIacq9fDAQ68hPnokUueMg2HuBGydNRaGWaEY5tsLNWo+rwCxUHkaEXBx
9Ydr1ZkYPec9JJ26jrELVxuLSsXghb/7IfGzSwUVDmVwXackOX4FQSsTMKtaNV3ffEDHdtiqjpE0
bTR2DPk/JPVqXgSMcs5phSCQZvQyBkmVReVVrfdopn/bbZ6W+n5Nz2a3wbSommPrO55InBGKxOlj
sDkqEKvXGPD+0csECAFCgBAgzg8QAcV6rycxpFb1/JnbLi560mBan+LrhQtAhiqA+KhtPlWSFB/h
0qBXccUbLephvXsDLOpcDwbP/AHpNK9GeLGui7H6oBRhao7OfYbqbitTOVyJxHJrNhq/vz8C/lHL
kZj3TZF6I8uyjqN/xy7o+UhdRJuixBrVQopX/mB4YXiUFG0m3kaiEYzFeVol7s+zya3BdvfHkBw5
DFsOnyFACBAChACpHB5IimpQxzxfF8MeuA9DlSciaUsMJc5ab4l1PZqh/58fge9Dv8Nbjyj98WFE
tm+A5e6N4ave4P2ruyL0hUfzS+gqvdOuPuo+LAPnA3VKd9/QOUg5e+NWbQ0p2JR9GHOSMhC2ZA1m
JGToZeJ9yJySwPlrEKegIXXZ295fA36t6uooMTkXg9FDMnVHWVpp0ZJULhZ7cr1aYGf/JsiN7G6M
0CJAHGFSROrixYtOXxO9sgDkwI4dBEhFH0QXiMQqTyS5hBrh5o1thmps41TDKZKG94P+TyGsTX10
VY18qNJr9e/X3oqsn67+XbZ2DTp4S8GoiVi26xAWpmcakzLmjx1I+K+X/1SdOLFW7XGYk/whNp34
BptPXEVMxkcY1KQ5wqq5YuxLj2F7/6cLup/ivZoj4C+PIlAp/g5dcGXWHejZGIlB3QgQB3oXQUFB
WLlyJRISEpy6JnplAMiF4GCsi47GR9u3a0/EUu1NTcXRvXvxGwFSPgBieiu3dRDeBB2BiAxMyzjC
/8uYiAJIkqk7zLsZ4rdnIeHktzCc+RbDIpbcKui0bR/ijl1B/KcX8dJrUovjsq4F0rbbm/B9zR0B
b89SIPkOy5cvxoLO9YpESMkxBRybjAPj8lmW3ZPr6NVEh/tuKOfjIBURIFIGYf369YiNjdUAMZWt
ddaa6E4PEHVy/xw1Cu937YorISHaG7FYAQFICw/Hj+plgQBBxagHYtH4gk9LPX4gIbJhxi6sW5FM
6reN6oQNQd0RM6wTWjWSrLy/KG3GxO7PITW0BwwhPbCo1wv4S4On8aJLbfRXQLghUVHVqmKe3+tI
82+P1N5Fr5GtACkMPruplzq3fs9iy4Q+2Lg3r9zOXq+IAJGS0FLONkQ1Nv3799dVPaX7yllrolcG
gJxRAEnx8MjfzpqMkZMmITMqCjcJEOcCiKlrSyKYJAw22Sd/vEQadMnuu8mjCQbWvQ/RLlXw8oM1
4fZgV7zS4C/Y8GZDPbfEoN7gM/q2wIyubphQwwXjFBDeVxpimn/Sq9kdPSfptgq0ogtLBshNXW+p
9u7uUp5WUv/nsHH3pwSIA0wgkZaWpr0OZ66JXlkAYhCAWHOiInVRdhEgzgkQE0RSdRLGlnqgW9Ki
hLeuj7ldJS28ri6FkcpLWe3VUMHFOBBuqjvSog6G1q6BVx6qCa+GtTFYQWFF96bFNvTWDKLL7PpF
bzTGgEfyB//lsywrfja6NV5IcyQNfIEAKQNz5proBAgBUsTOnj2r34w2btyImzdvFvnu3MXLTgWQ
wuG+kpAx15hCZEoHN/g/9RD8FCBeqlMT/RUgoto10I31rboj+YAZptaJVR7Ctr75ILLXOaX3fQqD
/vhwQe4s+SzLTNALeeFRPdlQ5ovYBBEC5J4PtBMgBIjTAeT69eu4cuUKZs6ciUOHDhUsv3DhArL3
7EVo++ZODZDpSlEdG2Kb71OIUm/9k6q76lnfMl6S4NOioO6ITGaMUN+JJ5Ls09IhCSOn/d0Ngb+r
piWfJZos3vtJhKjPEuUl5yWz0mW+iIEAIUAIEAKkrAFy7NgxLFiwQGvp0qXa6zh//jxmz56NGzdu
6HV+++037Ny5EzELFyG4dWOk92nhVAAp3IUlGX6TjF1Eaz2aaXDIvI7XH6qJMW3q61xVJohIWhVJ
r2JwYBfb0u5NtQqDa3JVF/Q2DsbLrPREWwbaCRAChAAhQEoLkP/85z+4du2alngfZ86cgZ+fH3bv
3q2/K2wXvr7qlF1YhSfnpRWKjJI3/uUKLMP/+jh6/766BompwTZ1JRnM9iHejKm4lb0ixkRpZiV7
+yivJKB1PcR6NLftWAQIAUKAECD27sI6deoU1q5di82bN+Pq1atOPYheUioRnY/qidro86dHCrqy
7tZlJI342jeb6q6wt5o9qD+n+Ng7mWT+4L3Mxg95/lFsM9aD5yA6AUKAECCMwipFY68jm+xcOrcg
6201V3g+/RAGNKx910FrGeAe+uwfdIldkXyWZfbOSCwhxzIbP6VPKcddCBAChAAhQCo7QOQNfG7n
RpjYrgE22zKYfLe3/UJZb2UcZL1ncxj63j1sVgA24a/1MN2lipZ8dtRMc7ukQCFACBAChACpzACR
xnyOgseYGlV1mvbhzzxs+7yI3iXXF7Fku8iODbXKoj5Kel/OAyFACBAChAApdjD77nMlWmrPQ+Bx
XqmfW20k92lp93OxJuutKauvo+Ehhajkt4v3xUF0AoQAIUAqPUDuFE5rSUM6THke/RrWxsLXG9mU
4ry0yRnvheclv1nAKd7XHPnd1kKLACFACBACxJkAYj6hT7qCSvJETHXSk0uT1sPq0Fr75qiytk6I
/Fbxtr5S10ggIp6I1eMtBAgBQoAQIBUNIMXlcLIFIGX/9l98jipb4GFtnRDxssTbEq9LPJEEzkQn
QAgQAsTpAaIaxuJyOFnbhXUvdLccVbbvz7Y074W9LgMH0QkQAoQAcWaASEMnqdPDqrqUOCHP0kH0
e6E75agqzaD5PSs0RYAQIAQIAVJRAGKqvyFzKkqVw6mczD0x5agqLgJKoCkgLA4wttQJIUDKr0n6
n4MHD+LEiRPGBvZn1kQnQAgQe3RhyYCzzKmQuRUyxyLFpwKnOvEpPrxXvpPxEb8/PYJpHdyK/a1W
D6ITIOXWBBSJiYk6m7WAIy4ujjXRCRACxG6D6MbKf+URHql2SoJoMEZpDXj4dzgs3VI1q2lvpayi
xAiQe29SA33//v26vK3p/85YEx34Sf3GLAKEACkbgJRbqUZfxmikm620EDEHSAABUmkAIp6FPKSS
jFQsSjUgly5dKvc10a9d+w4ZGXuRnr7fYmVk7IfBkAl//wSEhxMgBEglBYipwl9YdVc9RpOfuqRl
qbu4dBfWsyV3YREgzgOQzz//HH379tXdU/LAHj58uELURD969AT8/PZg9OjLSpcs0pgxlxU8TuH1
11fj7bcJEAKkkgJE5qX0qVcLN42RUGNb17dLJJQlg+gEiPN1YUkBNhlMN9VCrwg10Y8dy0NQ0Cnd
Rk6ZYplk3QkTvkfXrusJEAKk8gIkzVT7Q3kfEh223qNZhR7gJ0DKv5VPgORpMFjcmKt1x4+/ToAQ
IBwDEW9B5qWYqg06e8EsAoQAIUAIEALEznU2bJmXkta3/EaWESAECAFCgJQ5QCRmXfpyKxNAbBo/
UZK0K5J+RdKwpPi0JEAIEAKEAKm8APnoo490JMkPP/xQZPmFr68SIGaehyR8lMSPkgBSEkEa+hAg
BAgBQoBUEoDcuHED//rXv7TOnz+PL7/8EmvXrkVkZGTBzFnxRHbu3ImYhYsQ3Lox0vsQHuYAySFA
CBAChAAxA0jm1Kn4uZz8jR0CEMnZs3LlSq2NGzdixYoV6mZ4G926dUNOTs4t7+PCBWTv2YvQ9s3p
gbALiwAhQAiQkjRpEpLHjsWhQ4eQd+yY5Tp6FCePH8fNmzcrXheWTHC6fv26TsFgngDu3MXL7MLi
IDoBQoAQIBboN3VRVnTpgk9GjEBecDDygoIs0kmlnX5+GiIVdhBd6MdBdIbxEiAECAFiG0B+VRdl
fdeuuDlhAqydoXlaYKK8kQoLkDsZAUKAECAECAFiOUDWKYDcGD8e1l7YPAKEIkAIEAKkfAEkttPr
QHSUgsg7likqEmeDApHiSYAQIBQBQoBUWoCsUQCZ2+oVfN5vCE75DLZIZ/oOwQddPJDQzd06z4UA
IUAIEAKksgAkL+80goNPli1APJMwKug8IpRDMDnCMk2JVgDpNN8GgEQogAxGWIM22PnyWGx7KcQi
ffByKJY/42t911cpAXIyOBin8/IIEIoAIUDKDiA3bvxgdV2Pbds+xuLFcfD3P2adN1AKgEhb3KPb
Wvh2WYWAvtswyifdIgX0245urfwUQPxsAMgghD/RETltI9WyKRZJtlv93LAyB8gRf3/ELV6Mj7dt
w/70dIu1NyMD3127RoBQBIizAOSLL77QdUGsAcjFi1dw5MhnumvJUh0/fhJbtmRg0KBcXavD0roe
ISFX4OWVigED9lnVRpYGINIV5dVxDpY97YPkl0Ow9aXRFsmgPILRDf6GWA2QCBsA0kEBJMLxg++l
AYg6Tu6AAcjw8sKVkBBcGj3aIl1W2uPnhxPGypflEiATOrbAjr75KdBLUrpRaQ6Uo/efVka/ocyP
oV4CUge/iISPTiH++NeIP3a53ClOndfoyFkVGiCS4WGKajzmzp2LHTt2FCyX+VZLly6963arVn2I
kSNPqMb9rMUaO/ZL9O69BYMHH4ZU0o2MtEyy7qBBH2PgwIMF20lbWZJkvYkTb8LdfZP2XCzdRisa
6N1pARJbDcP+9tHY0y7SIu1vPxVvN+qITWq7vepzbrsIM0UaVXS5rBurPJcpjV7Fvjtud2ftVee2
vtUIbOj0Rv6FMv0IS36suigb3N3xk9T7tXQbkTrO/oEDcWjQIFj1h4yKwhdjxuCfd+n6Onfu3L0F
yJfnvkKf590wrd1jiGr7eImKbl8fUe3qWbSurdLHcOD+y+QY6ho5+hjRcozCf4s2jyGyUzNMWrga
E1dsxsTl8aVW+Er77MeksBUJ8B0RjJ9+/LHCAuSDDz5AcnKynpQrZW3FTCVtR40ahaysLGRmZhZR
VlYmgoJmqoY5AZ6eBqVkowzw9k4xW3ZL8l2bNtO1vLy2wsNji0WSddu0idbbeXsnqX1Ztq2n5xZ1
jrFo1SoQPXtusXCbrflSx3nlmQEIcfs7prXwQvSTHhZJ1vWo8zRGu7W/fbsWHpjawlNLPptvF+jW
Dt51nrH6eIFuHRD8zLNIVR6BhPOa/i1JyT17IrhVK8QriBg8PS3aRpTWqxdmtGmDWUqWHkuUorTk
jTewdtUqZGVnm91TWRoeq9R39wwgP6oHOXf3bnVyOSUqd/cehE2ahA2b4pCdm2vRNtZK9jsqIBDb
P9iJrBwHHEPtU/Ytx3Dkb5BrJNdKrpkjjpGj9hszf4FWjvkxsjJLrWx1c+7Yvh2jRo5EdnaWXfZp
0oGPP75tQmtFsj179mDNmjU4fvx4QZeVAEQe6g8//PA2eBSGSFbWriLKzs5U0BmhPJkM9XnXbd+b
1hHd6bviJNvk5mYjJmaOVm5ulhXbWrau7NO0/5ycrPztclRDpz5bo2y1zZ22y96di3nzY7Tks/n3
sk22DceT7aRB3qXON0N5kf4K/Jnyf3Xfl6QsC9fTUuua9p+Vk2PxMQor0wwchbVr1y7thdwzgFhr
BoNB59BypK1btw6/3KFkqL1M9i3HcKTJNZJr5Uj7WDXEIoddp19+cfh1qqiD5QsWLNDJSaVeuj3u
919//aXC3icVff+Obg/Kor2pMAD597//rRsWR5p5ynlH2E8//eTwY0gNbUf/hl8dCNqyuk4V1ezl
Rcl94kiPTO6RsrgXHfkcOfL85do7ss1x9P4rFEBMduXKFZ0q3lGWl5eHAwcO6IFJe9s333yj9+2o
m/7SpUvYu3cvrl696tC/gYD81KlTDoOI5E6T6+Roj7Mym2TOlu4vcw9H6veYJz61df95dxiAlegd
U2mH0ti3336rz7VwAy/3i9z/8l1pXlT3799f5BzlsyyT7+zxImy+f3mWxNOxF6w+/fRTvU/zZ8p8
WaUDiFyEcePGYfbs2Q7Zv0AjNTVVp6OXvmZ7dz9I18OSJUvw3nvvOeT85eHZsmULJk+erI/nKEtK
SoKPj49DjiFwjYmJwbvvvntbA0ezj0lKcMmQLZLPYjImKc+V3J/SyNt7/2ISguzt7Y3c3NxSP6fR
0dE68qxw9JnsNzExEe+8845NL2nyxj5//nwsW7YMM2fO1MeR/cyYMUMvk+7D0nhs5vuXfYvS09N1
3SRZXlrbt28fpk+frq+PgMRk0uYMkkisygIQudhHjx7F7t27tT777DNs2rQJGzZs0De5PVxvIb68
xcj+5eYzeTb/+Mc/sH79erv+njNnzuibR0xCMR319i7p8wVUPzoo2uiTTz7R/arSOFy7yySj0pi8
/Ur9GPkbS00ZWunt4sWLBc+RvP0uXrwYx44d08+X6WVGQoTd3d31d9II23v/cl8uX75cN/gyCGvr
cyqS2kLz5s3T38nLUuFaF9JDIfe/LT0I4h3Isyk2bdo07cl//fXX+rPpuS2NF2K+fzlXk0mAxN2i
mqwxqcEk3p9cp/j4eL0sOztbA0qe2Z/LoKJhuQGIvFELnUVC1lmzZmH8+PHo1auXrn5YWpNGVmAh
+09LS9NvXgISaejt3fcpcJI/oNyQ8obkiL5n6cKSY9hjgPVuJh6OvN106tRJNxb2Nrk+QUFBusGZ
OHGiw8daKoNJZVDTcyTRWtKoy79y70sjIw2bRNSEhIToRlOKwNl7/9J9Io2nr6+vvkdtfU5F0jjK
PuQeEYDI/mWdr776St+bd4sOssT7DQ8P1/uVZ1SeJ+l2ls+yTK5LabqfzfcvXW7SoAscJSzbHl1k
sbGxGhgpKSm6p0D2KfCIiIjAq6++itOnT1feLiyxs2fPIiEhwSH7FmiMGDFCu5fWviWVZNIQilcj
N7yA0REmb3jBwcHaS7N3BTJzuEsj4YgBOtn35s2b9VukzHug2d8EEtLNIZLxAmloZJl4+FFRUTrO
3xH7F5MJkAcPHiz1b5BzlQZdYCLevfwrXmtoaCji4uJsbujl/GS/0pUtpbcFRhLVKMvscT8W3r9A
UcA6ZswY7ZHI8ezhbQpcxUOTLqyMjIwC70c8nLJ4IatS2R8wufkc5eo5+g8oA9yOjnwpC3N0xB2t
4l/3O52rLCttkMrd9uvI85b2piy6l8rCqvAxotFoNBoBQqPRaDQChEaj0WwxGTyWQBwZwKYRIJXS
ZPxEHoLvv/9eR25U5LxONFpZ2ZEjR3QE2Pbt23UQjjw7Eqosk/lkwqoE5cicJllPBrdlHRnglohM
RgESIE5jAoytW7di8ODB+gan0WglmwBBIp8kOlHmkEior8BC5qlIxJJEWUmoq0BGni+JZpQw25Ej
R2rY0AgQpzHxQDp06KBDF2k0WskmUU8y6VXmenXp0qVgkrDMkpfQX5mPITVWZKa5zEOSGfmSCUHS
5EtYLI0AcQqTuR2SZkXiuyXVCkNdabSSTeZySHocgYSkITelJZHZ9/JZvA15pqQrS2aHi8ci68qs
bkfnlSNAaGVmHPOg0Wz3Qgq/cBWeK3KncQ551pxlXgYBQqPRaDQChEaj0WgECI1Go9FoBAiNRqPR
CBAajUajESA0Go1Gq2gAoSiKoiirxYtAURRFESAURVEUAUJRFEURIBRFURQBQlEURVEECEVRFEWA
UBRFUQQIRVEURYBQFEVRBAhFURRFESAURVEUAUJRFEURIBRFURQBQlEURREgFEVRFEWAUBRFUQQI
RVEURYBQFEVRBAhFURRFgFAURVEUAUJRFEURIBRFURQBQlEURREgFEVRFAFCURRFUQQIRVEURYBQ
FEVRBAhFURRFgFAURVEECEVRFEURIBRFURQBQlEURREgFEVRFAFCURRFESAURVEURYBQFEVRBAhF
URRFgFAURVEECEVRFEUp/Re2L1+d7WYadgAAAABJRU5ErkJggg==

------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_adaboost_multiclass_thumb.png

iVBORw0KGgoAAAANSUhEUgAAAZAAAAEYCAYAAAByXKB5AABKBklEQVR42u2dB5hc1Xm/v23qvYMk
QBIqCNFVML1agCkOHRxjO1Qnzt8h2MYlfmI/tpPYsZP4ISa2cYyN6RgIHdFEFQYkBEiABBKg3ttK
K2n7/77n7rd7d5jZne2zu7/3eUY7mrlz5849936/85VzTl51dbUJIYQQTSVfp0AIIYQERAghhARE
CCGEBEQIIYQERAghhJCACCGEkIAIIYSQgAghhJCACCGEkIAIIYQQEhAhhBASECGEEBIQIYQQEhAh
hBASECGEEEICIoQQQgIihBBCAiKEEEICIoQQQgIihBBCSECEEEJIQIQQQkhAhBBCSECEEEJIQIQQ
QggJiBBCCAmIEEIICYgQQggJiBBCCAmIEEIIIQERQgghARFCCCEBEUIIIQERQgghARFCCCEkIEII
ISQgQgghJCBCCCEkIEIIIYQERAghhARECCGEBEQIIYQERAghhARECCGEkIAIIYSQgAghhJCACCGE
kIAIIYSQgAghhBASECGEEBIQIYQQEhAhhBASECGEEBIQIYQQQgIihBBCAiKEEEICIoQQQgIihBBC
AiKEEEJIQIQQQkhAhBBCSECEEEJIQIQQQkhAhBBCCAmIEEIICYgQQggJiBBCCAmIEEIICYgQQggh
ARFCCCEBEUIIIQERQgjRhSiMHtU6DUIIIeSBCCGEkIAIIYSQgAghhJCACCGEEBIQIYQQEhAhhBAS
ECGEEBIQIYQQEhAhhBBCAiKEEEICIoQQQgIihBBCAiKEEEICIoQQQqRS2BV+RHV1ta1Zs8bKy8vD
//Py8iw/P9bGqqqq8L5o4YVSWGijR4+uPa+txd69e23dunU6wW1I//79bdiwYa2+361bt9qOHTt0
gtuQkSNHWp8+fSQgbcnOnTtt7ty5dvDBB4f/L1261O69914rKiqyv/mbv7Hhw4d3iYsJYewIceZ7
33vvPTvjjDNa3RC9//77tmrVKhszZkyXFvqOajs6UK+99ppdeumlrb7/5557LrQb91l3ob3akbbb
uHGjrV+/3j7zmc9IQNoSbpKxY8fakUceWfv/Xr16hccRRxwRVLwr/EYe7U1BQUG4afAU2ur7Dzvs
MNt///27rNGprKzsEHHEa4TNmze3yf779etns2bN6hBx7CgqKirare0QjxUrVuR2ZKKrNGzSuJWU
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
ZoSowMK4eM8IQ0HiGgOE18BFiQBwAfKaJzV9dCnvIUSIhieM+RyCwQXLhU5lDjcNFzKfIzGLoZOA
tMwDOfLII4PXh8iTZOUcc84ReAw/hsarauggUEhAx4DEKu3Gg/epliLR7Z0D2omCB3qvGCFPrGLo
8DTxViQgLQiZRIafKXGopqIogXuE88696B4fbUcbcx8hKLQHosK95DlF2pTCA+432pU25zXuRTp7
tBdCgofCPn3piM6Sm2gvlANpAYQ2PCmOm8tzj4X7XDZcuBgMLnx3g7kI2ZYL3pP2bM829KLcNWe/
9JwwQPSMuMj5HnpM6gm1zHvkPPtIaow9beJJVW+7ZMKb57Qd23hokc/SJi4oXA+85iWftC8Vfd52
hMmyHTkt0sP9wvnnXHKeEQTahXvH81a0LW2KsBMB4D3uS29fPAufmsRf87JZtuMz3s5+X7MPhbAk
IEIIIVoJZfOEEEJIQIQQQrQfJNEVTBdCCCEPRAghhARECCGEBEQIIYQERAghhJCACCGEkIAIIYSQ
gAghhJCACCGEkIAIIYQQEhAhhBASECGEEBIQIYQQEhAhhBASECGEEEICIoQQQgIihBBCAiKEEEIC
IoQQQgIihBBCSECEEEJIQIQQQkhAhBBCSECEEEJIQIQQQggJiBBCCAmIEEIICYgQQggJiBBCCAmI
EEIIIQERQgghARFCCCEBEUIIIQERQgghARFCCCEkIEIIISQgQgghJCBCCCEkIEIIISQgOgVCCCEk
IEIIISQgQgghJCBCCCEkIEIIIYQERAghhARECCGEBEQIIYQERAghhARECCGEkIAIIYSQgAghhJCA
CCGEkIAIIYSQgAghhBASECGEEBIQIYQQEhAhhBASECGEEBIQIYQQQgIihBBCAiKEEEICIoQQQgIi
hBBCAiKEEEJIQIQQQkhAhBBCSECEEEJIQIQQQkhAhBBCCAmIEEIICYgQQggJiBBCCAmIEEIICYgQ
QgjRVP4/5swWBlsh1/cAAAAASUVORK5CYII=

------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_adaboost_hastie_10_2_thumb.png

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

------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_forest_iris_thumb.png

iVBORw0KGgoAAAANSUhEUgAAAZAAAAEYCAYAAAByXKB5AAHD2ElEQVR42ux9B3hVVfZ9kN6rVAEx
QIBAII30hPReSQ+hEwgk9N5Dr9LSe++V3hEQRBQLODpOc0bHGWdUrNPL+u913nsxZtDR0UHm97/7
+86X3PtuXXefvfbeZ99zjQAY/QdNE0000UST/zvyn/CAkRE0AtFEE0000QhEIxBNNNFEE000AtFE
E0000UQjEE000UQTTTQC0QjkG8h7772HF154AXfu3MH9+/fVug8//BC/+c1vvpfj//a3v8Wvf/1r
9f8///lP/PjHP8aLL76I3//+9/jZz372SGHBa7p16xbefffdb7Uf7+vTTz/FP/7xjx/0+v/+97/j
F7/4Bf785z9/p+N8/vnn+Mtf/vKdr4e4vPHGG0q/Wh7vr3/9qzqHQahv3xZzg/zpT3/Cz3/+c3Wu
1vLBBx/grbfe+tbH5PURR+L5VcL7+cMf/vC9Pj8+tz/+8Y+aUdII5H9DSktL4e/vj8WLFyMpKQmz
Z8/G22+/jby8PCxZsuR7OQcN8jPPPKP+b2xsVOfbu3cvXnrpJTQ0NDwyWJA8Q0NDsWrVKly7du1b
G1xi930blG8rNJju7u7KoH4X2bJlC65evfqdr6empgaBgYHYs2cPPv744+b1dCCIs0GysrKQmJj4
H53jlVdegaOj4wNJ87XXXsOpU6e+9TF/97vfYcqUKQrPr5Jz585hx44d3+vzI16HDx/WDJNGII++
PP/887C0tMS9e/ea1/3qV7/CRx99pAhk+fLlah2NUVFRETIyMpQnaRB6jPn5+UhLS2s2NvQkS0pK
1Dp2MMqPfvQj3L17V0Uezs7OCA8Px5kzZ9S5DMRiuJ7U1FTU1tY2e6s3btzAs88+i8rKSpw/fx6f
fPIJysrK1HanT59+oNfJa+Tv7Iz0Tim3b9/G9evXFWHxmlsbBp5v8+bNGDVqFNLT09Xvf/vb39S1
HDt2TJFgS+OXnZ2tMDJ4txcuXMATTzyBbdu2qWulATp79myzB8t74P3zeo4fP66OQYwY/THq4TXR
iJK8HyQkNN5TYWGhiuhojGkYDce/efMmXn/9dYWPn5+fOgefFzEyCKNAXjPPS1wNwmfHezxx4oRa
fuedd2BlZYXp06er9TzXL3/5S3XPxKYlFi2Fz5TbX7p0SS3zfu3s7BAZGamu1RCd8e/WrVsxduxY
HDlyBM899xyKi4uRkJCAkydPKhwMESvFcG5eO/FqLa+++qoy9nxejHauXLminnNdXZ2KcIkN5f33
31fnIY4XL158YLR4+fJldY/EzdvbW/UFOgf19fUKt6amJnUetgULFiiceA+8Bjog5eXlajsDBhTi
x/U8L+/PcF4SH89FJ46OB6OeiIgIODk5qWPyXjTRCOSRFXbiuXPnPvC3nJycZgJhp6LhouGOjY1V
hpwdiESwc+dO1SkLCgqUBzhz5kxs3LhRbZuZmak6y8GDB5VxplHw8vJS56TRYGdkh6HQ6NL7p5FY
uHAhVq9erfZdtGgRxo8f30xS/G3lypXNHbW118mOT2NCQzZr1iy1P43s+vXrMW7cOGWcli1bpqIF
3kPL1M++fftgZmbWTACMyhiF8ZoCAgIUIRi8RJ6fRo3XT4NLozpy5Mhm40Qy9PHxab4+GhtiSoI1
NjZWGPC43I/3vX//foUTvXUer/U9+fr6KkPDe6bhISm7uro2Hz85OVn9RiK0sLBAXFyculcaQV4n
jVNQUJCKBOgM8PlQ+Ixo4Pn8+Ox4HTSELi4u6pg0wnQgeF00atzOsG/LNBWPGxwcrI7Ha+W90tjz
WZAYSN4Gw8ntDxw4oK6TOPJeeEziQvw2bNiAqVOnqmvmb4xY6ZXv2rVLrW9N/gYCofBehwwZou6D
emogJp5z2rRpSjeJIwm7daqI10JMSbx8PiQ4kgcdJd4XnQnqXkpKiroXRlB0iKgvJCoSOO+7urpa
7c9z8LwtdZZ6Sb2jw8H74vXyN+oHn+WcOXOU3lRVVf1HqTeNQDQCeWhCgqCh/ncEQk+InZrGlIaF
+7BzswPQ6PJ3diiDB8X0ByMOg3dMw8NOR1m6dKkyQgbDGB8frzqUh4eHMmzsNCQXGnuDEafxNwi3
5/lpRHm+lsJriImJUUaD8tlnn8HGxkYdk9dEg2hI8/A+6Pm3FEYp9N4N0RD3ZQqE+9MghYWFqd/o
XRIb4sHrpLdLD9LBwaHZuHE8KSQkpNnA875JwvydxzVEfTSkNPbMt/M8NMJHjx790nXR+yU+9PAN
x+f+vFbD8WnMaIy4TK+fEY8hgqNxpSHkMUhSP/nJT5RhY7RCb5fXz3Pz+CRrPg+SCc9LIRG4ubkp
QnrQmBU9e3t7e7z55pvNESBTSgYHgM+1tRBDEqdBcnNzFTkYhMT305/+VDkeNK68Pp6b18s06FcR
CPW25XFo3HkNvF+ej8fjM23pPBh0h8/LkFJl9ERnghgRO+owdZEkxKjDQDgtHTBGhnSouB2fIwmb
550xY4Z6Pi+//HKzzlKX+Cx4X7weZgJIQMR4xYoVmnHSCOTRF3p1BqP4IAKhZ0SDRI+S3hQ9URIB
O6QhJXLo0CFltOnlcRCZxoSeMNMfXM/wnV6XgUBoxHlsA4FwO3rNkydPVh2NRpkdkJ2Ix2O0wP1b
jlPQQ2R0ERUV9aWBfhIWPeWW6QN6iOyYTC1t375drSNx0Jiyw7cUGlt6fxRGEYwoeB0cG+I10UDT
qPGY9G6ZWmFERmIgWdFwk/QoNBY0IAYS5TG4HfHh/vxLWbdunSIew3mID8/dWni+NWvWqAiORo4k
QAIxHJ8EReNDr5pjIIb0B++dxp2GjOkxGq3o6Gh1LhpkRgHz5s1T98dz8xw0rjSU9LgNwvtmlEF9
4bW2jPwYMZEUDWMcTE3yeXIbGn9GWq2F0RwNdksCMRA8hc4JnRA+f0YF/MvfeZ0t06itCcQQYbYm
EMNzpy5R53h/hmdAMThEBuKlXvG50DHgOAfvg4aez4YkRozoqDBiMAijWuoZnw2ftUGXiAuvi9sy
aich8zmS6PjceF/ElOfk9RkcN000AnmkhQRAY8Y8LJWXhoDpGRoAdnp2RBokbsM8Mr0lGqf58+er
9YwC6KHx76RJk5RXTMNJI08DxnVMQbBT0POjcKCU6QAK88E0ZoZoiAaeRp3Xwv1o9Nj5SVKGcQoe
n144PXZ6gi3HUCj0AGkgaCx5L4w0eI1MXTAKMQyQcn3rKjMaD96fYXyHBppkxLQTDSiPyfPToBEj
RhkkGRoSjm2QQJiqodHh/ra2tqpQgIZn4sSJamyIRozbGaIfjhPRM6bHy/vifbdO0RB3evckVJI6
yZq5eXr5HEsh1iQC4kqMxowZowwZn++mTZuU4eL18XqJBaMrRhokQBpGetfEhM+fhEMhqbDQgefk
9dBIkyRpQIl7y+iNRME0GKNR3jfPSWNK4blJvK2Fz416xedN481tqFcG8fT0VLgxhUYdofPS8jpa
D6LT2FOoyyTHlmkp3iPPwWdB3aSBZ3TB5dYROdNNxIFOEMe0eG807tRNYkQSZaqNEQtTVSQdXheP
T0Jgeox6xWdE4uZ2Bp0l3iRW6hkjWh6Xz4iEwr7Dbekc8X55na0jbE00AnnkhIaRXhDTKIwAGCnQ
Y6KXSyWncKyCnYPGfO3atcqLZVhPo8yUEg02jShJhd6aYR3z2fTUmN9mx6Ds3r1bGQUKjS2PZ4gs
eG56hjQ+3J4dikbMkHOnEeSy4fiMoAyD5AYxkAUNGo9FY0khiRmIi+eigWzpgRqiBhqbloPxNGo8
H9cb8vi8f3qSjB5orAwpFZIuow4aUG7H1A23I3GROEmYNPxMDxnKpbkdvWSu4z0RDxqa1saWv7Hx
fIbooqKiQj0XXgePz2dGAuG98Rr4TIklDRqNLtMovBc+Z2JKgqYB5/7EisbekG5iOo/pSK7j/0wb
Gvbl82tdvEADz/MyKqSeGKI7jrMZUmEthfpDMuT2/J2D7CR/g9CQ8z4ZYTH65b0TI15r6+dGcjUQ
Fp0G6kjLgX2OnVAPDfrFY1EXWo+fkRR5XkaVTNkyyqUzQALnfRv6B8mBekdSoF5wexIriYzGn79T
B0lIfL7sRwadpe7wvDwur5PXw/si+ZIw6KRwmetbFjpoohHIIy00CA+qaPom+32Tdd/leP+tbb7P
a2qdT/9vnOfbXse3eTZftb7lvfw3cP82evd9PNPvcg9fh9H3rfPf9ZgagWgEookmmmiiiUYgmmii
iSaaaASiiSaaaKKJRiCaaKKJJppoBKIRiCaaaKKJRiAagWiiiSaaaKIRiCaaaKKJJhqBaKKJJppo
ohGIJppoookmGoFoBKKJJppoohGIRiCaaKKJJppoBKKJJppooolGIJpoookmmmgEookmmmiiiUYg
GoFoookmmmgEohGIJppoookmGoFoookmmmiiEYgmmmiiiSYagWiiiSaaaKIRiEYgmmiiiSYagWgE
ookmmmiiiUYgmmiiiSaaaASiiSaaaKKJRiAagWiiiSaaaASiEYgmmmiiiSYagWiiiSaaaKIRiCaa
aKKJJhqBaKKJJppoohGIRiCaaKKJJhqBaASiiSaaaKKJRiCaaKKJJppoBKKJJppooolGIJpoookm
mmgEohGIJppooolGIBqBfC/y6aef4q9//euX1v3zn//Exx9/jH/84x+aKn5DIYZ//vOfNSA0eWTk
b3/72/+vOqkRyLeV3//+98jOzkZ6ejpqa2sVMXwTeeaZZ/Cb3/zmX4zhuXPn8Nlnn/3b/d944w1k
ZGSo87LxGj755JP/Ofx+9rOfqfvIzMzEK6+88q33J15Hjhz51vudP38ex44dQ2pqKn784x9/p3v4
5S9/+Z2P8d+WZ599Vt0rW319/QOfw09/+tN/e5yLFy8q3PjMeKy6urr/b4mCDh/v/9e//vW/9O2D
Bw9+LX45OTlKb/5T5/P555/XCOT/gly9ehWzZ8/GrVu3UFhYiPnz5+Pzzz/Hu+++q4zbO++8o7Zj
VMFtLl26pKIM/v7HP/4RH330ES5cuIDnnnsOf/rTn/CrX/1KeTB/+ctflCLeuXNH7f/BBx/gRz/6
ES5fvqy2ef/999XxEhMTsX//fpw5cwa3b9/G9evX1flff/11pawGUuE67vvqq68+UvgVFxdjzZo1
uHnzJmJjYxVevMazZ882d0z+vXv3rrqf+/fvq3UffvihWqYh4/1TaACJJbEykCzxI07EnNgbjsln
VllZiRdeeEFtT5x4PGJMIbnfu3cPN27cUN4kj8PnYfAsDdfIZ0FjMWfOHIX/oyorV65EVlaWul/q
xmuvvYa///3vCheS344dO7BgwQK8/PLLSjeJN3H77W9/q3Dj8+H2JBrqWFBQEBoaGnDixAm89NJL
Sn/5O/EybGt4di37we9+9zu1zOv4X4+033rrLQwaNAi7d+9u1klilZeXhz179iiHkFhQr4gzhRiX
l5crPU1ISFD9nNtdu3ZNYWIQgy7zmAYnhX3cYAP8/PzU79xfI5D/YeGDZ+czCI0hI4ItW7agqqoK
q1evVp2IHvbWrVuV8lDx1q9frzroxo0blUdy8uRJ1XFJCOy0e/fuVYZx1apVOH36tPJ0AgIClHLS
+BmilMOHDyvDRuXy9fVFU1MTqqursWvXLhQVFanroMeSkpKCkpIStUyFflSEeLADsmNER0crY3b8
+HGUlpaqzkbC4DWzsx06dEjhS+JdunSpIo+oqCi1nvstWrRIreNv7HjEg/gQ0+TkZGVA+f8f/vAH
tUxDxo5JfNauXas8aq4nWTz99NOIiIhQJJGbm6vOwf35rNjR582bpyJORk18TjNmzFDG41GVDRs2
KL34+c9/row475VYbdq0SekX9YUkSHLYvHkz4uLilIEiKfI+ua6goKD5eMSYpMvnQX1kRJeWlqb0
nITK50dsiSv7AQmMywsXLlR4kngeMeP3reXAgQOKKObOnascCd4jMSV21AnqYE1NjcKF+NMxXL58
udIpEi71m+uIF49Dm0CsSe5JSUnKjixbtgy/+MUv1DnKysq+1Nd57EcsVaYRyH9CIDTOLZXKx8cH
8fHxytjQCFVUVCjj1jLFRIV68cUXVYdjJ6ZS8Hd2TBolKgyF3iJJhIpl8LSXLFmilIxC5WNHp9Gl
ElJ4rsWLFyvjSUXjsT08PHD06FFlQKmoj4oQm8jISGW42WnoldKwEztnZ2d1/7xvEixl1qxZyuOl
ITIQELelUWKHMnjbTNnQsLGD0Vht3769GRtGF4wUiTWJ4sqVK2ofCr07no/HpBGkTJ06VT3jffv2
ITAwUHnnxJfGgqRP0mYK8VEWGnreM8maukLx9vZWGBhwpMNBoUNkSHMxcqDTsmLFCkUwFEYXfF5M
31KXiB+9aH9/f4Ud9Zn6y2fCZ0u9I4Y8LzEkljSETAH9rwoduLCwMGXciS1xJUYUOntcZkaBOsl+
SZvA/k0dZ/9l/6fzSFJlnySR0LEk4RJD9neDLlMniSmxo81gdMJzaims/wPCjkAPmfL2228r4mD0
QGWiV0xjQ4NFJWHagwaSirVu3ToVgdBLMXgY9ATpcfzkJz9Rxo9pKnor27ZtUx2ahGDw/phqoFCp
aHBpxAxjAbweGkAeh2TEtENMTIxSPnr6VNRHKYWVn5+v/meHYscjOTB95Onpqe6THYo4UOjp8x5m
zpypIgkaO5IAOy2jBEYnjA6INcmGHbOxsVFtQ+Fz4HNiJybuhufGfWgU6GUzP90yv09PkR36zTff
VNfF7fhMSX7s4Pztq3Lej4rQ0BvSoRR6wMSSpMIUHu+F92wgEOoihQaPEQRxYYrRQCDEkZEM9Zhp
GuJOvBmJUO+JFXGnrhr6AfWZ+3A5NDRU6eX/qtBps7a2VrgSF+oq+zB1kn2S+sCIgZEbozo3NzeF
M51BRoGGNCodUGJMIuH/7LskcvZ1YspjEjvixmiQ0Q23owOjEcj/AaGhopdFw0+vgN4CvV5GFkxf
kUxIEvSauQ07HD0Ieq80jhw34Xp2Wnp79FY4LkKvjl4eDRQNHNMjVEhDlMMOSqGy0RiQyOhFUpgC
43GorAyD6enRINC7oZHmtTwqcurUqebIgWTH+yVG9FJp1HmfJBnm1in0xNixmI5jJyJG/J9jPMSQ
y8SEHjG3JYEQG0M0QYJ67733FCkZOjLxYXqH+xIf5qtpUA2pPho8ph/5fEkWjIqIJZ8byZtkwsiG
qYpHVWjQpk+frgw6ozHeD1OrNPjUQeoYSYFkzmVGcBTiQgNHw2aItOkEEUemF+moGJwZGjjiR5yI
Cx2llv2AekndZRqHyzS2/6tCZ4V9ncJUHHWWxEGdYGNfpZ4QOzqA1C2mSvk/iYPb8BjEiARDXabT
SX2nLvMZcV/qNnFmitGQtmUkw2dBXLmtRiD/B8QwaNh6XeuBwq/a7kHyXUP81sfltXzVuR41+SYD
rA/a5rsMzP67fVtix21bP59HHVteMwn1667z+8C09fG5bMCKf/9XdPD70qHWevKgfvigvt7yWA/C
7RHEUSMQTTTRRBNNNALRRBNNNNFEIxBNNNFEE000AvkfJhAO+t3/7FN8+PlnuC/toz/oGv9X61ou
f/bFNlz/lft8/jX7fPoZPv3kI3z2mb59+pEs31d/Des+/ljXvnKbB+zDYz7ouJ/IcR7Wy12ffPqp
DstPPlF/mzGQ5Q8//aQZpw8/1W/TEqfW+8j2X9pGHffjL23zEXFqcc/8n+s+1ePCvx99JBh88gUm
H398XzXDPvyNy1/a5+MW+6jj3lfrvumMBN9V/vH3v+MjhVlrnL4a2y/j9K/Y8lhf4P+v2N7/+Ats
P6IOC9b/FtuPvwLbT7/A9qNW2PJ3PpOHNdjOwfD7+vv9Jjjd1+PEvnqf+1DnDNvweXz0ZR38UHD7
4P5HeP/9D1X78MP7uP/RFzgRAw6YN/dnvU6ytd7GgCXX3//oy3pKHO8/YB+2//K7NxqBfJ2sW7sW
HoNHIGqkCaaOGI3AIaMRIC1c/o8cORpBT+iWQ4aNRtQoE4QO1y1zu0hj2e4p3TJb2JOj1XGCh+qW
+Zf7cL1hnxizCbCw8cfY8b4YN84HppP8YGYbBNOJfmp5rKkvnN0D4eYegDFjfTDO1AfjLQNgZhOE
cRP0+5j5qmVTc3+1zG0mWAeqNm68bpm/mdkGw8zcHr/5zbv/faMnJBXs6YOQkeMRZ++AsNFmCBg8
CoFPmCDWxg5R5tYIGDRKrYuYYIFYW3sEPzlOLYeMMFX7hI+bpNtniAmiLScj2spG7R8weCSmjpmI
aCdnhBiPR6AsB8q+gc6emGLnizFyvyaCg4v87ye4TZjggzGybGHpB2/PENgI3iZ6nFynBMPFKUhw
1m1jaxMAT7dgTDL3g4ngbTbRVy3b2Qao37mdk6M8jymBCAsLfyjvOfzynbdh85QJoswsdTgNH6vD
6SkdtlPHTmrGlhhFW9oozLiOv3GbkKdM1XLwk2PVMSImWKplPoOoSVaIsbEV3dZhGzzWHCEuHgga
Y67DVtYHOrjB3c5LYUscHAVbH3d/TJzkq3DiXy/3INjqcaLeOQuuU6aIXsr/3Mba2h+eHiEwt/BT
ujxB9NbNNQQOdp6qYuxhyKkzZ2A7aDjirG0RbTFZ178Fh/Bx5jqcRozTYSD6FEtszXQ4BQ4ejQgr
W0Q5OjfrYJipOWK8PBGm8B+JoKFjEOvmhhmhfkhcFIWFiyIRHxuKEP8AmJv7YvRY6qAvQoOC4eQU
IMveCicf72D4+gTrcBrjA3uHAIQGh8LSyg+jx+iwDQwIEawCFbbE0kOwDgoMURhyefJkf9knDPby
bA3vU2kE8gPIskXJyGzXB88PGYlrA4zR1NEYx6VdH2iMm0OMcba7MerbGeNyX1l+YiSu9NMtn+5m
jBuDjfHsIGOc6GyMxg7Gav+bcpwLvYxRJ9vw73Oyz9UBut+PdxiBH7nbwG96ESy8C2HunA3bsBLY
x1XCJqQY5k5ZMPMowIod5dh+sBSmjrmwcM2BXWQZ7GMrMNm/UG1jE1ys9rGdWgYLOYaVVz7soytU
4//quPKbfVwNjCcG4Lfvvv1fx5G1IxF2zrjmHoIfzV2AW35RaBpohcuWPrg3KwGvxM7C2VHOODXc
Di9FTse92fNxTQxOU39LPOsWitfmLMCLYdNw4gkbnDd1w93pc3F3xlxcmuSBE8NscCcsBs8vWobT
IfGoGOqASp+5KFl3FJmr0hAVyJaKp5dnoGBnMRbPTIOHdw6WJVfg8P4GbFpbCR+/HMTFFmH31lrs
3FSLyMhC+PnnYsPqKuzbVoekxDJ4eOVgwbxStbxpbTUCgnIRHl6AHbL9ljUl0oEjHopO/uztXyFy
6Cjci5yhcLpqF4BGwemmx1S8Jti+EBKHE0Mm4+IED8FonsLqwng3WWeDF0LjFJY33MNkHytccwxQ
x3hJjnVquD3OjbKXZzFD9pmN82K46ofZ4fTMxWhYtRt1kYtROdQJ5Q4xKF2+HznJ+zEz+Cim+qXh
4OosZOwsxOKEPHh4ZiIpoRgHd1Rj/Zpq+AXmIiKyANu21GFnSj3iphXB2zcHq5ZXYc+OBixZXKGe
x6xZJbLchPlz9qly1YchtU2NWCmG/s1Z8/Fq/FycG+uqdOzO1HiF07NTQpQOXhddvJuwADcFq+PG
zjg9wRO3FiTh9sq1OOscjMYRjrgxPxkv79+DZ+Vv40hHXAiOx+uH9+KNjIP48LVyfPLeadw5V4WL
5aU4uKUA4WFZOLKzAE0VNcjPqENkVB4SFxajurQR1WVNSE4uxtSIXGQcq0VT9XHs3V2JoJAcbFxf
jvrKJhTn1SN+egFmzCxESX6DWrduTRmCw3Lx9L5qnKo/K1gubC6Z1wjkB5DlyUtwrF1/PDdsDC4N
GI2a9tI6jMaVgSa4PtQEjV1Go7LdaJzpPRo3hpvgbJ/RqJLl+s6jcU08k2cGm6BWtq+W/S72l22G
meBEd90+/Mt9Ljxuon6vbT8Sr7rbw39aASxdhRzsM2AbWAinaUIgfgVqeaJzDlZuL8O2vcUwtcmC
pWMm7KeWwDFOCMRDt4+NT77axy6oSC1bTcmGY3QZHKPKYOWSBQuHDPWbU3wNRlsE4be/eee/H4GQ
QGyccM7SE/fmJeKyeKbV3Sfg5JMOeEUM3O2weNT3s0Rtb3PcFHJ5VTr0GenM1d3G4/xET9ydJ51Z
DGRNTzM0Dp6MF6Nm4o6QzvGhtqjpZYZrrsG4lbQcx+2CUN5zEiomBqF01dPYnZwuEYMQhlsqtiVl
IHd7MaJD02DnnImZM4pxeF89kheWwMElA34Budi2sRqb11bB0ycHTlMy5bcy7BXCiI0thJ1TBqLE
EO7dVivkUw4X10wxfNlYv6oKKetKERoS9VB08ucSgUx9fARe9I/GK0K+p0e7CE4TcMHCW2F73TVU
4dQ0xBZ3YmbhTvRMwcxGrbvuFoa7QjIXJnkpbIkxsSbmdYJ9/ePmuB0Si5enCbajnFDVayKafKah
ftUuVLsJOfc0R/lIT5Qm78ShxIPw9UiV6CsNm5KykL6jELHR2bBzzJC/BTiwowqLk8rgJDh5CZ4b
hHS3Ctn6C6E4uGQiQch47856TJfnYC/YhoTmY0dKAxLn7VPv3DwMqT9xHIt7P4nXps3FC0KiDQMn
iz5NVLpGnM4JCVcJTudM3fFyQiKuiBNT09cSdQNtcG36PDy3ZBUaiX/vSbgkhHHnwB5cDJyG6j6T
cHySD+7u2YGflqXi8/dO4E+fXcS967U4VVyC5IRcTHHLwIqkXDSU1whxVsLVMwuhU3NRkF2Hotw6
hEfKNh6ZSNlSgYaqJixdUqywnDW7UJHMkaer4e2XLc5PNtIO16h1JBRnt0ysWlGKk3VnkDh3UfMb
7hqB/EAEssuoP64LERzvNholRrp2utdoRShl+mWSxrNCDiQXLpdKuyCEQUIx7EOyuSqkUt5G93td
WxOJSMbgZFcT9Xux0UjccrCHb0QOJlqnwdzqGKycs8T4l8NCiMLcKhXjJqZi+eZibN6ci7FmqWqb
yV55cIgshfnkNLWNhV06HGPLFXHw90myjoRhF1yESZbHdMclqUyrfqgEEmpuh/KupmKwElArRr7E
6CnBYSSeC4zBpcl+cv8jpD2F0yZTlOHTYfsUqrqMl+WZODHCQf3OdlU8w2e9wtX/ZUbGODPcAc/P
TUZtD3M55ghZNxLl87diVmQGxpmnYay0OTEZ2LemQOE03iIV9kIaB3bXijecDVPzYzCzTMWSRWVY
kFAi+xyD6aRjCAjUkYqNQ7rsI1jbp2PjmiqJPPLV7+OkzZ5ZjO0bHh6B/OLX78C/Q39cHOemjB4x
JE7VXSfgpbjZaHrCTuFSIrhcd5+qSMOA7fFhDopQuC33KW9jghflGGfGuKJIj+V1IfcXg6Ll/1Gy
zQhU9LNG3bLtKO9rLeueVNuURSzBktjDClfiGzU1Awc35sPSVoetrWM6toqnHBKWp3AivgkJpRJt
lCucuewlUcjWjTVi8LIwXpYnyPq1q2qwMOEhEsipE5ht1AO3vSNxVSKJIoXTCJx8ykk5KZWdTBVO
Fe3G4jaxHTdFlp+UbZ7EOcH1mah5epyeRO1gW7ywaweq+1mp5WrR35eXrsT9F6rkTHwp9hp+89Yp
lKVKP7ROxVjpy45CvoXZlYiNy8cYM53Obdtagd07K5VujZV14ZF5KBRCcRUyGTfxmLINuRm1WLCg
SO0zZsIxIZcSpB2pwSTRbW4zxT0TjdWnhYw1AvnBCeRI2/64KeRAQmCkwHZ5ICMMXaTBaOJUL100
cbq3brmuE8lCIpVBuoiFBHO+n45kTggRlbYdhRXthmBZn4Eo7DVCog/Zrt1IvOLmoCIQiyk5ugjE
v0CiiQoVVXDZzCkbK7aVIWVPEUwnZ+oikLASOAlhWLvr9pnsna/2YfSiIhCJOhwk+nDQRyCWEoHY
BhQ+9AgkfLIjTk90k2giEZesfVDdYwKOi7F7OX4Onhevt66vhc7784rAqzPFsx4lnl338TjLlJV4
g9eENOhFNwywxgsR0/GiGMKTQ2yQ1ckEyUPGYaOPP8rNPFAh3mDFOF+UrjyIHUnpcHdNg5trKrYs
zED2tiJMDWIEkoH4aYUqAklMKIaDLJNItq6vxsbVlfDwylYRyKL54iWnMKVVoPaZOjUfe2R5sUQm
zuINunlmY+2KSqSsf7gRSGjf4bjtE4lXZszDKTF2jObOyb3fnZuIZ5yCUM1IbaAuUiPJNA60VtjR
SCrPerw7qgTbUyOd8crMebjhHYEGiUD2dTDG4rEWOOLqifrhduJZT0SDe4wuAnGKQXkviUCedEXp
oh04MP8AvCSyc3VJw/rETKRtL0BkeLZEE+nyNw8HtldioeBEHBmprVtdhS1CGD7+OSoCmTObKas6
ldKyl4iQKcHtW+ofagRSJxFIUvehuBc7B7enxqOhv5XgNFEi2lC8OkcXBRMnOjUvSRR8KTgGNX3M
UdvfGlenzcHN5BWoHyGRWp+JOO8Xgzv79+CCd7Ra3tBjNFYGBuDkoU34y/0zEoFcwGs363CisATz
Z+VIBJKO5Pk5qC+vxnYhDRIEU1R5mbUqCgkJy4WLrNu0oUxFIIsWFUkEkoFp8QWoLGnAwX2MlLPg
6ZulopHK4gbExOarCGSJRCsnarUI5JEgkOxO/XFLyIGE0dRVmhAA01cqZdVXRxYkFC6TMOpl+Uwv
HVlwuxM99NHHkNG4qVJWoxHevg/iBcYd0hzat0dGpxE43XUUXvOyR8DMIlj7FcLKNVtFFkxHMU2l
0k8+hVi5sxzbny6FmUsurD1y4RhTriOMoEK1jV1YsdpHEYYcw8ZXCCWuQjUSke640rEfcgQS7eSK
637hKs1yOzQOjUNsccU+UBm0l8UQkihOGTspL5rrrjNPP2gybvhG4l5CoiKME0864Ly5F16dPR/3
5izAcRsvuHTphXWCY5I0z2ESfTzlgsqQhSjZkIqcdWmIC5UWkoojqzJQuKsYK+alKrJYs4JjIPVI
2VgJv4AczJxRpMiC4yBxsYUIFIO2dX0V9m+vUykr7sOU1n4xets2VCMkJA/R0QVq+61rSx4egbz9
K0Q/NQ734uYowqCxY1rvOf9ohRMJ48Rwe1y09BacFiismN7iOhIKt7npG6WwvaZSWom4O20ujo60
gWOHTtgnOIY+9hgSnjLFCWMXnJkvRnL1btTFr0DFk1NQ7jYdJULO+Uv3Y27YUTXGdHRdJjJ2FWLF
ojx4e2di6aISPL2zCpsFp8DgPDFsRdiZUofdguVMidiINwmFKayVyyvh7ZejIpR9uxqxYO5DJJDj
TVhtPAE/nrtQpQPPm3nipES6L8bocHpWiJU4Pes5Fa8kLsTNxCQcN3HDaUs/PCe24fk1G3DWMxyN
4uzcXLwcdw7sxe0lK5H05Hj4t2uHA4KlU+fOOFG8GZ/89hyeP1WBixWlSBWsIsMzkbmvAI0V1SjO
qZMoJE8itGLUljeitqIRy5eVICo6V0UbjdVNOHSgGqFTc7BtSzkaKptQXliPWbMLMHduISqEPLhu
88ZyhIXnIvUwx0DOCJYagfzgBLKXKawhJjjZQ5d6YjvTRxddVDymW67tKKQihMGIhMvlRroU17m+
X+xzvLuQyhMmKJDow9moLT4mjHoSiZZzVEko/LyTPfyicjHRJl2lnqzcshVBWAoxMD1lapGO5VtK
sDklT0LgNJhLKEyCIFmY26arZUYljvqIhPswZWMXWqwaf2fjbw+bQMLM7VDTb5IyaPSOmWIpbzsG
t8OmKa+5VJaZjuGYB0mkSqUPjFHbaxJeip+r0ixcLmsjOEqnveMfg/WPDcMcPY5sQdI2Gw1FVccJ
KF+4HQvjJGqzSsMEyzQsis/AofWFsHVIU+kSd4kyDu6pRXBIrlq2sEnDyqXlWLyoDBMFN6ZamKra
salGRRsTLFLhKJ4zo5TY2AK1zO3mzysVQnm4KayATgPxjLmPSvVVdhincGEE9/L0uSqqUNg+ZqLI
94ZPhGA2Sq07PVo8afGc63pbqOWqzuPVMa5Z+CDEqDfy9Dj+Tpq1UQdkG41A9XAX1C/fgYqhLihj
mqvtWJTFrcKa+EPN2M6MFmw3ix46pytciNfOTRWIjNLjZC34C/muXF4BS1vdNrqIo1ZFJ8TfyjYN
G9bWPvQU1ly57zsBsbjuMVWfDjTG2XFugtNsfarVGDXdzPDCjDk4ZeWt11NjXBBsr01PRHm7sSrN
1SjY3tmzSyISZzgatceP9VjWSVu0krrxLN5+8ySqMiSScEmHqXkqvHzSUV5QhblzCtWyuejg3l2V
OLi/SvVbroufUYDyogb4BWarZY7FFQjhLBOCIY7jZd26NaWKaGwl+uMyt9VSWI8QgdDwM01lIAOO
bTwzWEcgHL9gFMKIo6GLbpnjHIxKmLYq0+9zqoduYH1t2ycwQgjklsBIEpkmbaHRYFQKgbzg5AC/
6DwhkIxmQ//FeIYQiKUQyNYSbEnJbyYQW78CNUjOdJW5dGhLp0wVbXBQXRGGKKW9RCVMdalxElnH
334IAqkdYIFXJXLgAC87ZkX7sXhhajyuuoQIRqNUB6a3TCOny9PrDaMQCDu1zjCOxi3xoK/6RSKy
zQA4CX4fSPu5NEejx8TrG46KLmYoS9qJ5OnpysiZiZFLnpGBIxsLYe+kIxBPn2w8vbcOYVPzVEe0
EsO2alkFliaVYZIYPK6LEgO4c3MNprhlqX1oGFM2Vqv0F5dJIAvnP3wCCRQCuWrli5diZ+vz9Mao
72+lIjmmWwzkfFOiEkYbZUpPjVVKhljWqzy9sWBsJtHHHFRNdIOVUTcsEQz/KO2kNDujzigUw1hj
7Iq6FUIgT7mKLkuE194UZdPXYP2MQ4oYSCBzhKiPbMkXfDIUbq7uWYJbBWJiChQRE8+kpHKsXlEJ
KzsdgQRLBLdDojdGH8RSjS+tq3u4BHKSBNIHLwXFqTG1Uj3Rnpvg/iWire0xES/OnIdTNr6KPMra
jMTFgGhcm7kIFR1MZd1TOD7OHS/v3Y0Dw61hLARSqcdyo7Tt+xPlbDfxy9ePoyarGFNc09XYkZ9/
BiqEQOYnFCly4BjSgb1VOHywWjk0XMcogxFGYHCOGiNxnJKBotx6rFpZqnAkvhvXl6nUF4tBOL4U
HJqDphqNQP5j4cygnNmSs43y2xCthdOgc2prTiP+dZ/oXLF4CbI7M4U1Rhl/RhEne36RwmKE0dBV
yGKQbplVV41ddRGKIYV1tqdEL93k9yfGYFaPPght8ximCoTG0tzatsO07r1R120UTnUbide8HBAw
owiTAwph7ZGjUljOTGGFl8LaLQeWfkW6FNahUpi55akBdEMKyy6kSG3DdJdTvC6FxRSXjX+LFJZ/
gS7txaqsb0ggnOqcOHI6dMMsrAbhzKKcdZQffzJ83e4rU1jObrjuH6lLYQlpnBzpJMQRjLtCKMzD
szJIeX7xc1QK64ZXBE4+5SBGMAr3EhYqT/mCiSuuTvbHDfEO/YcOw8w2bRSBmLVtC5devbHMwRW1
431QGZGM4o3HkLs+FbMj0qWl4ehqXQprzYJ0BEnUsXZlpUphbd9chbCwPPECi1WFFVNSM6cXqegj
ZUO1SmGtWFKOoOA8RS4qhSUkEhmZj+lCJCqFte7fp7A4JTxnXCVOnDWY03W3FH6giFPwUyc5Cyun
Qv+qMt6Ykaa4F69LYV33nCo4OeJWYIzCiWmqU6NdcNnWX2HLiO+SjZ+q1tKlsBbilhi/M0854bZX
JCpDI+DSo6cYUiOMY0q1Qwd4DByINHt3nBrvgTMLV6Fu9W7Uz1iFqnE+KPeejZJVT6sU1sLIo5ge
loZj67OQuasQq5PzECTe74rkUpXC2iI4hUcUYPr04uYU1tw5JQgJy1dVWft21mP1Span5iFxAauy
vlkKi7MqcxZnYslvj7T+yBJntuaM2ZwxmbMIf9UkhLXHm7BmlBl+PG+hqka7aO0rkS6LOGaLni7E
TXFSTogOcozolQUL8dzCZJya6INzdsHNKayLfoLlRC+8uGINNkeFw7tLF0wXHJ+U5t69mzhOE/Gj
c6l4/61TuHVSl8LK3FuI2fHZyDlQiMbKGpQKIcwRoli1sgR15Y2oq2jE2tWlmDkrH/lZLONtwtFD
1YibloddO1iV1YgKiUoWJBbJPRar8Q+Ok2xPqcC0+HykH63BSS2F9Z8LDRm/jcFp1PlBIH4EqKXw
QzmcfpnTcnO20q+S1ctW4NBj/XFTiOD847qIo7KtLj3FMZG6jqNVSoXpLRIGoxRGHxw455jHVSGW
re2GwuuxnnDr0h0ujz2Gv+pD2zhp6x8fjBuPj0WlOu5IvOzqAP+4Apg7ZavIwcZPNyA+2TtPRQ8T
7LN0g+i7izDOKkNVXNmHFuuiFNdstc1kz1zdmEhAgfJiVEqLg+iRZbB0yFTrbAIKvnEEwmm+iR+/
h8AvCHLadIPw7Wt+OIffHaFB/LoX6SJtnHFy3BRl9EgW5W1N1ID4S3FzlPFjKWplp3Fq7OOVmQk4
MdwBZYI1DR8NIdNciR0Gw6/7ANgNH4HFehzv01vu3AVlYlDPWfirfcqN3VG6Yj9SEtPh4CgRmIN4
aQsykJVShCC/NIVttHjHh/bVYd7cYpU+cfPIxpZ1VVi/qlK8vExYC7YL5pWoQXMSDLEliZAwFomx
o8fMlNbq5RXfaBCd03BzGm9+lInTehu+KdNSZ6mr/GaJ4XOoD5LffPA+QnsPwy2PcDWIfnyonbpn
Rhck3it2AShvPwZ1fSzwQsQMvBAej9rek1DeYQyesQ9UY0e1Y5wR/lg/BPcfign9B6BGj+Vlac5P
DMXz0dNxQqLEsnYmqHeO0A2i20WgvN0YlA1yQGniNuxNOABn51TY2KVh9fxMpG7LFwyyFE5hoblC
vFVYINEZcWT56ZqVVdi8vkalDi0Ff46F7NlRLzpVqJ4HI5FtHET/BhEIp6XnVyI5TT+/n2H4YJZB
+EEsOjycsv7r3mo/ef4cFnYbgrvRs1UqtUYijYoOY1WxAYn39Chnhe0pIeiXBNtLEtFVSMRX1XMi
nomdheeTVuLoEAv4tu8Df5OxMOvdE7/QY7lN2ixvT7x3Ih//+MMl/O0vl/H6rTocLyjBjLgs1Q8T
ZmWjvqwaWzaUK33y8s1CdlqtiiZ8/LNVtLZ2TRnqKxsxL6FQYRsRmYdKIY99uypVxOEgEcnT+6sU
oYSG56rjJgqxnKjVIpDvLPwuR3h4ePM3sw3CbyVwjn5+L6F1hEJjyQiFnXyKgyP2Gw3BtVZlvCSK
SwO/KOOtbqeLSlqW8V7pb4L8PiNgY9QODQJZurTJ0n6vV7B4ozbY0HcwUruwdHC0St+oMt5IlvGm
q5SVqqCSaMGyVRnvppZlvN4ty3jTdGW8MV+U8ao0V7CujFct68t4v20VFj+GReJt6c3xOx2MQBih
8ONChq8mGoTfIeE3E/Ye2A/7wSNUddArX1PGW/IvZbzGqoz3VengG0ZMRIDgdlGl/IwQI+0f0n5N
T69rN6QGReJYd1NUyDFVGW+CrozX1EJXajpXX8ZroS/jZSUQy3hZR9+yjDcxoUQtszFPzyhElfGa
s4w3A5vWVCHCUMZr/p+V8bb8rntzakqIY9q0aQpLRiCtdZZfmeS3NdZu3ADvx3rjkqm7KsEtNdKl
XUjAHDsioRDLUlXGG6Zasb48laT8cvQshHUbhOV6LN2kHdXrJFNXAcNk3yl+oq/GqGSasd9k1C7f
hrJ+1roUlqwrCU/G4thDcv+6VExUWCr2b8hSRMwcvJ1jOlLWFSM0LKcZy/nzirBscYnCmVh6+WRh
68YKlRbkPmaWx7BOyHtRwu5vlcJixNb6k8385gmjOeorcW7p9DBq5vdj2L+nz56FBKM+KhIjaRhw
OmmsL+PtPF6VPzPVejtuFo6bTlGlzSzTPS+4no6cDds2nZGtH+uYIO1FPZZMXS308sL12kP4098v
q1Ledw1lvCy3nZSmyniLv1TGm6rKePcYyngn6sp4+V6Iq6eujJclwLoy3kL1O/dburRYRR3m6ri6
Mt6GKo1AvpPQO2YI+yAAOT8Mp9fgl+74pTR+0Mkg/HjL1atXce36NUSGhiG93SBVxssxDQ6Wc7zj
yiCmp3QVWdUddGMiKqXVT7fMNNatoWOQ8vgQLGsxyOvdpg2mtG2HqMfawrhtBzi0aw//Nu3gatQd
xe2fwj13iUDiC2HpnqvGMlhZ1RxNOGZg4pRcrOCLhPuKMd5OPDnnLNiHl+jGPLxy1fsifOnQkNLi
Mazd9C8SSrN2zVHr7EKKvxWBMJrjV9j4AaiWwoiD6QNiSZyJd2tPkR/huXjlCrxNJ+GinZ9KYTGa
qO1nrkp1mbe/HT5dvezGPP5zATHK+2NZam3fSbhk5YPX5y1EzLgJioiJ40fSRrRvj+jOneHbpSuM
u/eEV7ducH1M1rXthwqrMJSuPoT9S9Pg75UGP89U7Ejmi4RFiI9Ih4tbpkqlsIx3yaIi6XBZCAzO
FU+wAhvXlKsqIVfPbCxOKsGulCox7AXqfYWYmHzs3FophrBUedIsSV2/qhyb1hYgJDjyG+kliYBe
M52bL6X5BEPqJRu/amf4WqBB3njjDd2HsqoqEfL4cNwJjlPv1JwVIlE4CQmzRJovwdX1s1AVaySU
O7Gz1f9cd8MrHM/NmAu3vv3wnh7L09KGduqMmZ06wb5rV4zt1hPBsmxr1AGruzyJE6HzULn+AEq8
5qB8oC1KJgQgd9lB7E0+ikAf8Zo9M7BhaS4O7y4Vhyxf4RQbX4Q9eyqRtKwKrl458AnKw5pNddi4
rR6BUwvgItjOW1SB7XsbMWNeGZwE/9CoQmzZ2YS5iUKSa9d9Iyz5FT9Gcq2zCFxmY9qQpGz4OBmF
ZMIPYfErf1t37sCyfiPx2vR5ijCOD7ND/eOWuOETqXvh0sIbNYItCzteTpAoOGqGeomwUYj45uwF
yJ8xB1M7tG/u3yukWfTojnjB0bR3H1j27Yuw3j0Q5mqO1+4W47Vn63G6uAQrk3Lh45uBdcty0Vhe
LY5MJXwDshEVk6fGN0ry6xWpePtnYdf2CjRWNWLVqlJ4COnOn1+ImrJGpB2pVmW/wULSGcdqUF3W
oCqyWNq7fq3uRUIthfUfClMA/AIYP83ZkjRIDgajR+EXAZk2aO3tGWTV0uXI7NAfzwk5MCXFQXKS
A8dD1HsfvXSkot4yl+VLepLhOMmtYWNQNHAEnIQgnhPIaPz6CYEMb9cJs9oOhNNjnXBbr3grpSV2
fBxvejkiYEYhrH0KVPTB8Qw1BhJarJbNvQqay3gnOOfCyi1HpadIICQZvnhIcnDmGEhEmYo0GKEw
xcXG/7nOIYLlwd+MQPjFNEZrLcmDaQE2RiOGzkuvj1HIV0m0kxue8QxVBMKS04ZBk3HRyleRBQcs
maoylJq+Kp33qpAMU1x8Ee7HC5Kw1cYJUYLTm9I2SevRqSMm9XgcCT1GIECImAUJn0jzatcOO71i
Ub7hGDJW66YyiQxMxcEVGSjYVYzkmWlqAH3Z4nI1BrJhVYlKn8TGFUpnrcP2rbWIiCpQU3CsX1uN
vbvq1fsMrBaaz/dCZHnDet1UJlMj8sVjrMXmbxCBUO+YBuR4ESe5a+mwGIjDIPx6HyO3B8k77/0W
UcPHSFQ2U6X2WAqtcPIMx90ElkhPQ+MQG0XATAUyzXVuvAeaJDJhmuZHCQsRMcxYpViIpb+03t26
SxQ3EBE9nsAavU7Sk3bs3gv1c5egatMBlEYvR/nwKSh2mYacdcdwbMVhxIWlIyQwE7vX5+Lo/lIk
CRm7C7aJi0qwd18VVm+oU+QxNaYIm3c0YuuuJsTMKIWnfy6Wrq7Bjn1NWCQk4+6bi+lzyrB9z4lv
RCDUOX55k0TbkoDpCPKvoX8Tc+okv+75IGk6cxqrho/FG7MT8bKQyBlTV0UiHKMjGbNEun6AlYpO
OAbyLAtARrrgpJmXGg+5uHi5wqhRsLrBcU3p30Me74/oXiPg2msQavVYHpE2b3ogXr1chwvlpdi/
uQBTQzNxaDvLeGuQm16r3jzny4FVJQ2oLm1AUlKRKsllZMEyXkYlHEhfv65MTVtCoomLz8f0GfmK
cOormrBmdSmCQnNwcG+VNgbyXYSKZWpqqj5kz09BkiCYM+WnN6l8O3fuVJ+T5EA686VfV4W1R1/G
y/c5DCksTl1yeZBuvEOlsNrrynhJHlxm+uXKgNG41M8ESUaDMN6oC/oKbCnS9kozMWoPU6O2zfnS
w6y9N+qLlxwd4SuKNHGyvox3ir6M10mfwjJP05XxbtGX8co6vtvB8Q0L20xdisr+kJAF3wFJlWPI
8uQMFY2QWFRZL48rkcg3jUB8fX3h7u6uMOXnTEka/F52bm6uyudzMJNYGr7d/NVVWPao7DVBCCNB
TVuiS2GNxvMhcWIEA9QyGz1qTlPCt3+ZPqjuboZXp83FSRMXhBv1wTCjjhgteGWyPFLaYPGUw+Tv
n/RYRnJsqe1wVC3YjnkxGTC1TFNprPlxGdi/Nr85zeLizhRWNfwDstQyK4WWLinFwsQSTLBkmeVh
hIiB3LqpAvbOhzFejmEvz2HT+kpERuertAxTYRx837qx+N8SCMeIjI2NER8frz4Dy2/eU/hpVHrE
1E/m7Zm+ImHzm9lfWcbbcQAuT/BUZFv2mIngZKzSgqywOjnCUeHG1BYri1jyzBQX1zE1cy9+HrJ7
T8AUox7obdQOPoJXjp5I+guWB/Wpwd9yQN3oMeQOsUXlhoMoGeykfxN9lHjem7Bkti49aCoYxMRk
Y/ducWKcMlR6iunB9Sn1KqqYYJ4u7SDmLhLyXlkBc+tDmGCRrohlw/YGTJFohPsw1bpyYwPmJT39
bwmEg+TDhg1r/mQ0x+AYbRjImZ8nJpYcZGef529fVcY7x6gnXvSNVmRhmOmAzsxLMbNQ3c1MLVd1
Go/b8XNwYpKHPoU1Ahe9IvDc9IXY2m4EzI26ortRGzUulyHNXHAbJH38hl4n66XNn+eH9351DpXp
xbCxT8fYSalw9UhHaV4VZs4sUOkopvd27ajE/j1V6n+ui5FIpLSgXr25z7SXld3TyM+qRrJEMaaT
jsi6dFWRlZVWq8ZMmMKig6SV8X4HoWFjpQbDfnrQ9O7olRgiDXZmfve69eD6gwhkvxDIDYk4SBo0
eBw0Z3kuI5Kqtrp1DZ1181zxRUMuc/3pAaPg17knbESRhgpZ+LdIZc2iBy3NVRqNn70YxYNGw/Gy
iwP8JIydaKcjDA6Iq3c6XHXvdIy3zsCKraXYIp7LWFEc5jzVfFkxlZgweS9697FHh4726NZnLDp0
skLP3nbSObfBIbxMRTMcYFNlvF5535hAGKWxGIHfe37rrbeUV8f0ID1nenv8nVi2Tsn8C4FY2KP+
icnKa6aRM7yHQCPItEu5eqdmFC7b+ilDWNvLXG1zgqmt4HBYdu8DZ8Gym3ROQ87+c2lj9RUvntJC
1N+uKOxtifLFe7Bylg4jRQ6zM3FkSxFcpujKSP0kgji4XzeJHTurjWMGVq+uwvLlNTAxXYYuXa3Q
rZstBg0ULDvYoF9/T+nwaUjZWo8Zs0pUCS/xTEqqwOZN5QgJif63XjPxoz5SL/m9cAp1krrJxnEQ
pgu/buCXBBLUZTCu2wWqyI0Dv8SJpdGvzJqvSlBLjEaisuM43AqOVWNMzOFz3eVJ3jjo5oVxbTuJ
zrVDRzF69/RYMkruyRSMND9GcvJbvBB23QQ/lG4+jJKxvqgUHS3vYoasxF1Ym5gh95+uSnnnzM7F
TjF6rt5ZujJe3zys2X0e0bOrMXR4NDp2tEbvftbo8/gkdBS9HDYiDiGxFVi39wJ8xLkxszgGOxcW
iJzHjOSMf0sgLEggVtQ7YsnIg3rJfk2dpH4SR27zdZ+BZRlvQtt+eDk0Xs0HVt7ORI3LXbTwVnO0
MbJTJdLi8Lw4ax7OOgcqHeV2FwXbmdZ2mKScwXZKDw39e7e0zoKfo/7dJJ8nB+KZ60fxy9dPoiar
CL4+LLdNQ2hoBqoKK7B4UaHCzcYhTaLiChw7VKmmg6GDsmB+AaqKWW6eJvi5o317Ozw5fAJ69bRE
l25WMBm3HNu2VKAgu1r0M0M5Q5FRuWiqPiERSKJGID+ksIw3txNTWGPUIDmrrU4ZyniFMM5LhMFx
kCv6Mt6rQ3SD7c/0G4PN/QbDXaD6pbSz6h0FI7wk7Q1pNvpBt1/pjd6CTgNxqfsXb6JPDixS5MHI
giksppxY1mvpryvj3XGoDBPdC1T04Sgd0Tm+CoNNvOXJHJL2rrTN0pZJK0L/J111ZbxyHKa5VOlv
dPlDnQuLXTjaxR3PBkerFBanIjk9xgXX3EJVVRZz+UxnMe3Cl+GYPmCHPm3ijFfCpiN87DiV5nu3
+cVLHXbHlbenS8Uw5TKxQ0fsN52C2tjlKNmYivz1qZgflYa5Uak4vCYLBXtKsW5RKoJDs7BqRQn2
7amUiKJIveE7a04htm2rFeOVj4EDbAW7K9J+KS1cWqG0xfDxmS3RawM2bKxEhHRSphC2bKkWL7dI
COThvAeiynhHmaq8/T3Bji8KEktGckxhcd6ws2NdccUxSOXx785egCsOgapE+lb0TFj07q2qrlh8
wHJyvnn+jrSt0oL160tJJD37os7GHydXbkHxliNIn5OCXc4L8XTMehzdkI2j6zOQMD0LsVFZ2LWl
GHv2VWDp6lIEhBdi3tJKbNh3DvGJ+9G+g5dg93NpL0pzl3ZBrZu+8JBscxYL1zaofWYnVwuhnEXs
/MPfeAzkuwrLeNeZTMKbCYtUKpWTfHKaFzUbgmDJ8bhTooPURaawbi1ajDNW/rg8JRwF0bGY1KYN
XhOs7kizlXZe2lvSAvVVWNTXZPbveUG4//ZZXD9RhTMV5cg9VCLGPRd5R0pQV1GD4vwGJCwoxtp1
5aiuaJLWiI0bKjA3oRh5OfVoqjuNeLkmI6Nkab/W62OktNMYNtwBBbkVqK86LrpZiZmzi5CRVif7
nEGClsL6YYURyEFGIEN173wwZUVPmdORXBuiS12pt8w5aC4k0yAkUGFkgtPi8SX1GIDVLbwSE30V
lr1Ku+hSBNCntGLkHLVtRuHOFAf4x+Zhkn2WRAppasxC91JgjoocJthkYkVKKVJ2FWOsBb3rY7AP
KYNjTCl6PW4ph7urP90FvbK9i+69LCT6KFAkxAoteuRqepOHPBfWVEsHND1lL0ZvgRi8KeqlLc47
9GLMLDVoyfLJsrYmuO4UrObCqhHvr0q2ufCUM/yHj8ApPV53pXXXRxyjWJjQAuNQiU42txmGqoEO
KFu2B+vnpauUFctGVydkIi2lCJ4SRUy0SkOQYLJnfyOmTWc0cQwOUzKxetMJzFt0DO3aO+KLw26V
ViOtWn03ZNOOk5iZUK6iD2v7dCxcJgSyuQohodEPRScZgQR3H4IbziFqHrG6vpaC5Ug12aRh2hJi
W8XJFadOx63QaaqaqPaxMag2c4Vj9+54X39zqdL6SPOVxhTrrhZFCjZGnZAtx62ZHILiTU9jWvBh
jBf9c3TNwPaVuVi/MFOVnppP5tv4edixpwbegYzmjsAzqACr912BexCdmPktsKTRe0daAlx8l8s2
l+AbXqSiOUf3HCzZdg6xi9IeGoEwAlnQcQBeDZ+BW0ExqoycL11eEuLk+BHnaisRDJoG2Sin5rRH
GCrajkFTl4nYaOmIKCEQw83RERytzyo8Lu2Wfv0Jjm8ui5AI6TreeOk4avPLJfLQvZgaG5ONqrJ6
rFxVrqJkljsfPVqPjPQmuLhnCS5HsGRZJWqrz8JKHCwjowr96ejYREj7k0TH9ti0KR3FRSfh7Z+j
oun4mYVoqD8vzyVZI5AfmkB262fj5fTrLWfjvTzwi7fMS9qNwtye/WDTpqsoUl/MMRoAk7YdMVyf
q5+nzzF/pm8sQZ2t78As892rzy3rZuPVjYEYyni/NAYyKQ0rU8qxZtU29Ohth55CDqMsF8IpphpP
Gk+TJxMoLUeas17BojF0eISQTEmrMZDsbzyI/n0RCMdAKrqPV9EGpw4v0efpmWbhS29qdlijkcgf
NhmRY0wFly6YIdhHtu2PgR07qRcGC/iegt7QfSqNY0hW+uUN6rdOakZVTiVTnLwNs2L1eXoJ62fH
Z2LXxkJFJmpaEiGMPTuqMNlmIXoIjn362SImZhvmzy9Cz95TBLtF0lKljVHRXJs2TphgvgJrV3O+
oRx1TKYLOIi5fk3eN67C+j4IJKDDAF0Zb9SM5nLnmu5mKqV1Ypi9bgZZWX9ovD28Bg+X6Lcb5hsN
hHenfujZrp3Sx1xpI6U9oy8+oKGbKC1LWqy0CKNecowRqvIqf9NBId5jahyI5LsuKRvJs9KbMYiI
zMXmbRUY9lQYuveYhCeGe2P+ujohhywxcHRs9khbL22stNXo2MkaU/zSsGznRTh65Aqux3Rv9W86
h7jFmQ+PQNRsvD3xgjgwnOHZMAbC6WA4azFLyNWM0J1MsdbSDvY9+onD0hMJopfW3fqgbxsj7NGP
bU7Ul+hTL9epFKAOS48eXXDhmcNytufwzs9PoyS9FFY2LLdNhbNbOgrzaiSSLVQz7zJltW17DbZu
zRF9nIJu3SfBzj5eopDjsHNYIdjRscnW921XRc7de7lj2YpypKXW695en3QMbp5ZqKs5pxHIo0Ag
6e35PZAvJkrkeAdTVXxxkCmtxg4mmNWxHxYILMwnL1fTQBjheWmcp8lI7zF76F96+0h5z20Q2rUv
Enr3R26/J9HA43YcibseDgiYXqg+/ETSYPUVU1h8h8NCli09CzBzRS6mONrJcSul3Ua7Du4w990G
W/9ijDJbiGHjA2Fin4DhZhEYOSEB1h66gXg2voVu6az7hsjDJpBIexdcdglSKSwO7rKsVFUKCaHw
vQ+WmrKU16v3AKQJRq/y/Q6G/3ojN1mPZT9pq6TxhUxWsZl17Iz5Ey2Q5OWDYq8IlA5xRLnHDKRt
ysSO1dnw98+Cn7RNq4rw9N5KxE3jLKfZSFrEuZn2oFtXksVNaXUYNtReyDkfQaGZmGgxDR6eEQgL
WwB7+6mwtlurxj52SQdfvaoCnn45CAjJw6aNVdi0vvghTqb4NiKeGIWXp8arGWMvWvoIluZqOhh6
yUy7NEn0ljfMGo6dOuOSPrVioieNKlZd6bEcIq1GP2hOR8eq7+NY5GCLzSH+qLPxQ90IwTIuGakp
6Vg5+xg8vdIRE52NvZvzhYxzEBSWA0/fHKzfUIGwqAQ55nRp96SlwNolAos2nYej5wFxiCLhKTh6
hi6WKDgWDm4HMHfVKaw5eBnTFzfCySsXYTMrsXr/M4hNengEwtl4lw8ejddn6ioBTwpxNAy0xvPi
1BBLpv6O97PC5qFmCHmsjYp+WfAyXq+TKXocO+hTqT/RF3PQOfQ0NUNioB/y1y7FRz+vx6cfnMPt
i7U4VV6BrWsLVfHGzk2FqK+qx9EjdQgMyVXpp5KiJri5MdrYr7Bs+1gkVq5Yhe3b6+E0ZQ28vEJF
dxdK9DITTs4zER6ZidycJlRVnEDy4lL1AuL27dVoajiPBI1AHjEC6awjEE5Z8uww3RvojZ1M4Nau
G57Vh6w/1qdV5qmXBXWDkp2lddIrmZ/62wbRXXuqcZPrg8bguBzjRMdR+ImXI4JmlsDauwjWU/IU
gah3OoIK1Tsf1j5F8Irbi6GDPVukBTZhtN0c2AVyuvZc2AeXwmVGLRwiKtQx1EB89BcEosqDOQX8
Q05hRdq54JJToO6jRx5T0TDISn2whxEJvb1THFgfMhlT2nfEH/Q3l6cf75imb8P1WHaVNkVPypM6
dsR2F3u8umUZds/fC1/vTCyak4vcQ4Vi5PIQGJQvLQ8b1hXg6QNliI3PhauXeNBLKxEzjemVVc1Y
tu/gj8SkvWIMS+DlX4hV66ux7+kGzF1QATfvfEyfU4zd+6tlfYX8nouA0DxsTKnEppQihIY+rOnc
f4WIIToCuTt7vpp1t36gJZ5xDtbNtOsXhVODbbF10ARlyAw3N0//Ama0fuyjt14nH9frJMfobHv1
RPWseLy0YzPef6kSf/z9edy5VI30bTlYPisNvr656l2YXdvKsSOlDMFT8+Dtl4v1W+sx2cFfTnOy
OcUyeLgL5q1phEdQCfyjKrFi9xUhiKsImVYNN8F29orjQiBXEJ/cABeffITNqFRpr4dKIMeFQAaO
wusz5qv3ZRh50InhzAiKQOwCcHKQDSL7jUChHsc/6sc4kvQ6yZRVNz2JjNRnGujs+IwahWf3pODN
kgx8/nYT/vjxJdy7cRLnqmqwZW0xwkLzsX1jEeqEQA4fqkXI1FzMmlMk0UYVnhjCSON3eiwr1Odq
t22vQ0BwvkQbVaivPYuc7BOIii2WVojsrHpFIIuSS2SbHKSkVKGxXiOQRyqFdbxVCsvwJnqlkUQg
sg075RlpnAeno/6t1A/0A2nu+o46Xu+l/F2fxtrXcxBOdBmJGUYD4NOmFxKHD8GI0e7oN8ARQ4fF
wNKFb5VXwMo5FxbWrMpIx+ylufB2tZencFhaAzp0coC59059GW8qLOzTv5ja5KveRHfNfugEwskU
K7rpPyjVq0UKKygGl2389R+HGgmPtr3UW7wn9B2xvd6jM7z0ZqU3fLH6iI6Dvq5du6BuzXLBZQ96
9AvA4KHucPOaCpNxbujTzwnDnkpE9MxirE5pgJU9K4XSxAvOQfK6NHTt5qCiD6arRoxyRuycPPU7
S0v9pJOvSqmHjb48dbJjBpZvlM4eVahSBeOlxc0rk20qEfwQx0CaU1jNb6I/pWaM5bQwJ4bZqbfQ
U41GYHJbpvR0RDxEj5thxt0teh1tr39PgREdx5l8RxjjjYL9uP18lhBlLFYsj4K3iw+GPuGAvv09
MGb8JqxZW4Wk5DLBKUO9PR0ZV4wZ85liCZZ2RloS7N3jEBBVrjBiimraonqJOk6oVNV486NwDyjA
0h3nv0hhWf5QKaweeME7SiK4UPUWOlOgp4yZwpqFqs4TUCFYrjUaCvfH2iqdXKsnDI5jcgD9zyrd
p6sEfFwfmfxdn1Jd6u+H392qRF3TLixfGYEVS2Lg5+GL/gOJZZBEFAdRmFeH+BklGDdRN5Pu5i1V
CPAP0Ts2p9GmjS+WLFkHL7989SY6xzCzMhuxYGGJSnupN9GXlSH1WL2aEkZ9UMozC7XVWgrr0RhE
b/OAQfT+urmw+Inb6jYmSGw7QA2OT9IPkrMjJujbB/qqq178NoC0v+k78HQJiXP8nbB05Ej4BYgX
GMZwmIrTJC1KWl8MGxsLF/HYTCevh6nZFpjZ52Ll9gps2HIQvR73FOPojPEu6+AUW6kilOap2jlx
oigclY2z9HIAXQ2ic8ZezpfFQfSHPBvvVCsHHB/poCqDzoxzVYaPRML01U3fSFR0HIvK9uPg1/Vx
NUD+hJ44TuoJuETaNb2X11n/1i/0+Lp364pTqxfAxky87jlGmDjRSOXaOfBtZGQpnXAIoqdvw7YD
DWLAlovB2ovQqGLsTzuNkPCN6N3XEcOf8kTSigys2FCvpi4hTtPnlSJl/3H4BeeqwUnvgBxs3duE
OQvL1JQok2W75NXV2LirGiFhD3EQvccTuOkSoirW+PY+sTxp7Nic0qp4zATZncfCumNXlYunYXta
Wpmapl1XCchS06H69GqTHktObRJgaoK6zcvhYNsPc+aKsezWW37KlZYmbQi6dDXF5pRiMYiZGG26
DJY2x5CwuBL7Mo5jstNc9OxtjwlWsViy/SRiEut0RRtOmZi/9hSStpyFg+gnp+NgxLFq/yWJTkoV
qTCNtWzHJcQlZz7UQfTETgPwSsQ0PBcUKYRhqua+umTng1dmzcbx4Taokj6/tasxrNu2U6lp6l81
Z9jVj3Nw/ChcvUNjhKf01YHQV7WtCPXHsRUL4OLaFlFR1ElzvbOyVPXvMSYeYuhFn+bswahxa9Vb
+xnp9UhLFXIYF4y+/ewRF5eEmspGzJiVr3QwMCQbZSX12LFDN38WdXDv3kqUyjpO404sZ80pwPGG
M0hM0KqwflBhGW+OfjZe9XGo7rq0lWE23vNCKme7jYFfh+6q6iJe/8a54ZsKZnryaKcvl/TR14Xz
3Y+4IBt8/G4egkMmob7eCJ6eXdWYhm7319WAWc/+5ug/wgXtOlqhQ4eJGDJ+Jtbtr8PetFpYeFbA
zr8cztNqdGkuvq0undMhXPcRKr6hbu2Zo2bgNczGyy8cct23mY33+xBVxuvshhtBUc1lvKfE2+fL
WyQUjoNcEsPXMNYVvp274md63AzVQo36HP4YaQP0g+n8nzPIurRpg82hHji1cjZcnbrh8hXpzP1N
ZbfP9VgWSLMWcnWB8ShbwdFaoo5J4jHvxeH8Z7D94DlExNdi/pLj2HnorBDGCfmtEuFxpUIMx7Hj
6ZNYtq4eQRFFWLymDjsOncSm3ccROb0U8fMqkHLgJNZtr3loBNKyjJcl0PzoEWc21pXxLlRVbZfG
uuPAaFsktzHCVX3FmiGVtVyfVn1cn7Y6oMd2Pte3b4fyZdOwOX4qZs0U0i6h0ZvXIl26CO3amcPZ
ww8DB1vJ/1by1x7LUiqQXnEJq3aclaijBvPXX8S6Q1dVhPH/2PvusKyu5euXImBXbKjYFayIIr0q
XTqIIDbsooigAmLBLvaCHaX33stLt2ssiUlMNKaZ3hPjTTExrm9mnwMhucmNN999zO8Pz/Och7eB
OOy916yZNTOeQZkIWJSPyD0NiN7XiJnLCwVorNhSg7X7G7FsQxVcp6VjbngJPT+LGctPPDsZb2kp
YsYa4W74Cry8YhkabbxQY+iEFxctxivhobhCwNI4xhHzh40VoLFdZhZsjCei0FJyGNmhCZFznjZy
FMJy2ECcPRkHXztzHDpMbCScbZkh2/F7ul3Rt68R3Dxc0bOnEdTbGcJusj+qq5VoaGjE9p2lWBZW
gPz8GtTVViExsRjBC1Nx8HABlNWVKC2pQPjqTKyKzEJZWQWUNVXYdyAf8xelITWtFI0N9VgZFvYc
QP5pBrJXngfChYSZciGhsk0hYbRCF3oKLaG84EpUWznUcliO02fJuY9sOV7KnktXjXZ4+dZp4EE2
PF1NhKcXGKhGll1L92d076C7N91acljgB7ovQKGqDROryXB2m4O+A4OhO8iPgGSfxEAsTwjpr1Bu
id5YidI8ELPjImnO9wSzNoWEz1qFxYWE/U0EYLDklKWnXEjIYHJhih+SVIdjgYoOhqioi2Svrbwh
L9EdLLO5XbLk9IiQ7EoMZbThcHzzagoKT2yDnl4fbN1GTNCwi8w+3pfrOHpBVV2Dvu6WN/BuaPfq
BQcCNHPbEPQbMAMjRs1G+IY8hK0rxUSyGXtygfMyselANaZMlYoN7ZzPIHZPFWYTwBhy40rufLqm
EBv2lMDbb8YzYyAeHfqK2eU89IirpdmWpf1MRXiwbqw9DqsMgZtKTxjRfzZNBojdsrDDUmYj3A06
ShYprJTZsbVaF7wWFYHda5ZivIEadu4k5txttJwYv0H3eLq1oaqmLdfJPBbKv8H6xBynz4aBcQgB
Cq1J83CsiquD37w8YUceIrVgTZkACxOrk+I1d3Jw1uxugKNXqghfmRGDDtta98wZyCK1nrhOTO48
/f5Z7fTFrA+l+VRcDwsV0wi3qgzERNUumEWOynY5DJ0pOzUT5P1tJVfzO8n1H33ZyUlZjw/PZ8F/
qgs8PBWIiFBATY3X4kd0Z9I9gO7OxI4nyXv+PXp/GBzsbRAUNB8jRy+ETn8fzF+4E1VVSkyfkSTU
g/bOp1BYVIkt23JFU0aW/+7anY+8vApMdpQKOQNnJqOhsRHhEeHPAeSfBpBdv5tI2NLK5HxffSxU
6QNvhYpon9FeXkgt1FZPLnD7RWYi3WgB6qm2g/344UhOXosnOI9Du+bA0rId3NwU0NVVgZq6Gtq1
60KPVbF0qQLm5gpaYPNkj2UG3TGC/qqrd0KHDtpCXtqxuwVMPONhJFevTyQgEdXrU9pMJPRO+42M
l9/7bxnIf2rV/rQ5kJxuBqJWoajXJHm6oD55zrPQYOkBB9pMS+WCLA6rBMibcaTM2h7LBVscCuzX
tTPG6vSEj9MkXLqagAefVcFjqiWcnVVha6uAtrY62bEdsY3OMDJSYNkyBYYMUcjKtTfo5oRvHN0+
0NJS0Gc5tBACQ1MPzI/IhQFtQo7LewSmYd2+aljY8cY8AjNu376rCn5zM8X7/Nrc0HzE7CuDl1/Q
U9vjP9nyr+wstTLRQZOBI24EBCNLdWTr5MZbsxcifag5zBUaoonnQLp1ZNYRLT/eJnvQe+Vc3fDu
XTG2fQdybjrgGB1qeR7+MDfThY83HZAT6G/RWYPsqIX27dvD3V2BuXPJAerSRQbnLGFDSaY7gdak
Cq1XP7p94OQXTuwjV85vHBHJ8kVRFdJYArKbo2cqVu2shY1zoqhE59eXx/73OZD/H1sygHArk5tz
FuACsY10IeMdguoJjnhldThitfXJLqqCnXWR56Vsk5PnzITrZFtyUr0z7e/RA/vDcvQgxG1fgF+e
nEPigRgYT+oEb7Ll8OEqZB8taGp2Qo8e7RBMDG/qVAVUVU3oRzyhe5VcMxNL9utD67K9YHydO9tg
7/5DcPdOFm1KOGSVm1+F1dHZIv/EOY+Nm3KRkVUh6pI4N+fifhr1Tc2IWLXqOYD83Yv75QQHB4vO
p7/vIvvyyy+L1/n9P2u01gIgJzX/vZkih7CaB+rBVqODqDSPkT2TCnlB3ZNbbATKyV5Ouvlpdsb9
7QF4+PZJ8HSyR1/nw2nKMOQXKPDiiwpERqrAZOJQaHfTQmysArdukZdTwh5gZ3TqNIJ+rC66dzej
BWWOjh27Y8wYFXrtDt0boG+5GJbeOTC2PQNL3yzYzM4TOQ9mI6IYMShb3Mw8jGxbmik+HYBwawju
F8Y9nFbRguQ2MW2v0tJS8R63IeeWJ38GIAFWdjjr6Cs1U3QPRFEfYzQYu+L2whAU+QRgqlo7ob5y
k2XQLW3vU2QAni+rrjppqCN+ng9eOxKDr15MAuvrL5bFw8ZaC1evKnDhAgGOpxpGjhpD9lKQZ6ag
v7dCeNOqqv3Jdv3px+qjVy9TAg4TAdb9+3N9wnfQ0JyKZTGnETCvEC4+GYjeWYetx5qwZHUxprgm
YmF4EbYcaUB0XA1cfVPhE5SJDfvrEL2rnBjIXwMItyjh3mzcIfb3bca55QaPEeD3uIcbt+P4Yxnv
fbmZ4jzB5potPaUOsk7+eGNpKLZY2mGdrAY0ktdfSwxqvsw0lsiHYf8unVFNtry5njxwF2+8PHcu
ts7xRfB8BW7fVqC4mEGkMwYPHYpx44gNXlLg+nUFpk9XEKjo092TvOaJ6NPHlH68AcaOVaBjh6X0
+B3oDrVDaGwlnLwz4TUzD5F7mhC5txF+wbnE6JKxdF0l1u5vEszEziURgYsLEM0hrNCnC2HxAC4e
Gsdrr23TVL64tUlUVJSwJbfO/7OZP4W0dqMnmOCtfdvxWtxm1Fp5onzUZLwUE4V34nchYLyBEMYk
y4KDw7Idv5UFHj4yM+YiTFuT8biaewq36mhNPj6Pzz5shJfLZBw8pMCrrypw8KACI/T6o7t2T/qd
FXQmKVBfTw7SSDUCljEEGtq0Nk0JXLgLwhBi0QpZ1ZaNoJkBOHWmGp5+Kdi+qxgNTY0oKqnG3Pmp
ImRVXFqDuoY6xG7NE8q4E6dKcfb8WYSvingOIH/n4s3n6+srhvQwkPDcD54DwBf3xeImitwZ9ZVX
XoGfn9+fDvBZHRaOI+q9RTt3HiIl2rlrSvPQzxGIWBMT2C6HqvrKBW1ft7SCYBWGnKg0Umghr/Mg
KOMW4MqlA6ip3I19OxbCbNIA4R2vXUteDHl3Ts6TMVjPHDMCybupU2D7dvJ0+igwbRoxGj0FkpIU
OHlSgWHD2MvmBXYCau1mYpzDOkyYvAvDxszDSLMwmPgeE8WDPEeEFVec8+AJhfxYtHP3Sn1qFRaD
L093495N3D57+/btre9xHyy2Mzf+y8nJERv6Dz1Buv3NbKA0dpbkkbRRC3pMELLJV7jil7xeI1UN
UVg5QmZvtbItOSzoLqvWWEnk16UPrkYuRea6xbhYsQfpZzYiYulMGI7vQIeGAuvWke0nki09AjF0
+GA6sCVbzphBP3sE55oUsLdX0MZS0EEt2bdTJx2yZQH69HPEig1psHOOJY94AaYFb8f6faWYuTgP
1vanMX1eFrYdq0PYxjIBKE5ccR1XhfX7y54qhMVzKBiEuWcTN/5rOwiJHRlel/weN1vkbrN/zEA+
gF/vobjuESS1cx89BQXahmKa3t0loYgzthEy8i2yUshKHvf7kRyfXy6DyABizuuGGaJx4Qxkx8zD
C2eP4ujhSPh7OcPBXlqTq1fTWhveHVO9Z9Lh1x5paQpyGCRmwkzPwEBBjoNC5PD8/ekg7cFszl4k
3ccZe2PeqnwYWayEkWUIgkKOIGxrNVz9yHlxOIPZocWI3tdEwJEvEutSSOvpZbzcxJMdG16DvIff
fPPN1vcOHDggpj+yLRlELl269McMpLwc4QNH4o1tsbi1PlqAR/FAM1xdtBRvH9yJGSPHCOnzHFnU
sURW/l2QASVGZsh6ZMu04PkoPL4X+YnbUV9zGJs2rICFqRGdPQqxLjmnNHL0GFhauwnbVVYqcOqU
tP4khqLAvn0KZGYqBGvu2VMhii9VVaOwIjwMMRsTYW61GNOmhyMhKQmnEivgPS0RPv6JSEwpR2mF
EouXsfz8NDZuyUNtYzN933MA+VsXN1Lj7rAtXh9P0uPpZXzxqNCAgIBWD489GG4U2HKxt8IN7tiL
CVm4GHGKPpKMt81AKWU3fWzR7gttorfj5H43LOPrIHvL/eWN6iXXLDgqusFLo5sISfXqpQJjExU4
OytE+IQXDi+grl0VGG+ogv66arRodDFokAp0dKT3jI2lDXvligI3b9KhYKWQq80XoUNXfYygw069
naXcvmQwNDsOwEjDaEwwPiG6+pp5yjJeozYDpZ6SgbB3x15zC3PjTrEtF89N4YFSfDEz8ff3/01b
cgZttvenZE+PccayjHfJbwdKuQUieNhIITGdKjea7ConecfInvJqmZVwyCWY56D36wozC2Jn2mpw
dlHAzIzZhQIWFhJAsF3NzVXQsVN7tG+vI2zJoMtKmIEDFVi5UmJ4DCw9e3LuKYhud0w0mwIbx5ly
iCuY7u4YNMwUxhb7hcSS5bzbDlUiIDgDY8bHY4zBYSwOz8Oek+Xw9f9rBhIZGYmKigrxOD09/Tdg
zAOO2FtusevvZ6twR1lel9dfvgW3dr1QT8BxTch4hwtbFnQajwZiQZZde4hwyzyZzWnI6qChcg4u
VFYSaSvUsFy9P0xHaWEssYs+fdXgJR9kbD8Or7AX3K0bedsmquQhdyOA6Iq+fVUwaRJ53z4KsT7Z
qXnlFQWOHFEIZRFLeDlXYjN1HgYOdaDHHIJ1gapaF+iN9YGhyVGM42ppt2Ss3FYrwIPDXBzGWrah
5qlCWMzWeA/zxEG+uONuZWVl6/vchffy5cutYMKdo9uGtXhv852SlSlkvDfmL8X5gGCkKgaJWznB
GZlL5mNQOy0RBlwpKyw15EiDriyYmSmzDwNFewR3GkhrUgP9+qtg9GgVeHkpBANmG/n6coia/gZD
CWz0VckePTFggAZ69yZHx0mBKVNonY9WkLMrRSMWLFAIRsf7WUtrCELJke3S1Vze3wb0WAdmVsuF
rF9/XDxWRecQoJSLfAhLe20dT6FC2YzQlc9DWH/r4g6dDAx/BCDslfDzFgBhr4+ZSGuI4K23REtt
PhgnjDPAcY0BQsbL/a84aZ6vroeK3iNgqdlehAhaJpBly32FhsnKFsie3xjhVavB3FQFqen0fIyC
DhEJDDw9JXUGL5pVq6RF1r8/L54OIsE2bpwqlErJw2MGwh4hJ+O6dOEE3BfiL6GquhJq6vz5l+RI
RZZoGdGjtzMmWfEAqVOiKaMYaUvsg/thcVPFp2UgWVlZov09X2wnDvu1XDwsittm88WHGwNI2/nU
PACJQ1tL6DbWGYDaCY6CgdTRBs3WGo2KfmbIneqN0VpagmW0FBCGyiAyUvb2IFdMDxbgrIYlxNo2
b1YIEOawSm2txDr4MOPnLi4S2+jcWa3VloHE6l54QYFduyRb7tghec1qap6y3b6DVgdzsqWhLFqA
LLccRZtyKUxtEjHVPx3rD9Viwapien5KHH6hG8sRuacMXr5/zUCYffBAKb54pHILMPPF0wYTEhLE
Yx59y3Zre6WlpYnpe0GzZ2EqMaYXnKeLYVzcuoQl0NzefZu1nQCKNW2K3qzk6n1mH9+0UWINJK+5
j6oajp2UGC6vvxs3JK+YAaKxUQqhjhypwKhRbCcNYUsVlQ7k3UuhrKAgBSwtFdi9m0GG1+0B2W43
0bFzD5FXkp5/K1pvqKkbYJLFNrLdaaHMitrXCJ/Z2QTQJ+DgmYJVOxsQ9BRJdHbyGEB4YBlf3NK9
7WRRZnfcIp8vDgueOnWq9T3u5Mvrmfe3k4sLInT08dLatbi8MhyFOibI7WqAcwHzMMNkomDDuW3m
o+jKeaTF8ms/yvlOXXIk9fqqorBEssOZM5ItV6yQ1hg/3r+fWN8ACUQkcUwHApB2xNwVOHdOWr8z
Z0rrun9/rVZFporKcWhra8qiEMivj0av3taY7HQMU5wScPRkKQpKaxAwMxnmNicQtjoLSmIgoc8Z
yN+7eCYATxpkestjVnmaHh9wDCI8hpWfc3iLwzL8OfaS/5Am06JKkLvxcsiKO+9WdNZDve4I2Gh1
EGyjUZb08chaVRkwtsvJ81uy56KnUIfJRBUknJY8DQ6fnD2rgIMDHZahEpgsXkwetiYvrk7kSavR
YaIg+q0QB192NnvK7ei9duIwVChM5ErVR7LMkjfrWfk1TmgOQ58h3jB1SpXmqssyXlPXZFEnIoZQ
PSUDYU+OQ4AMDBkZGSI+zyE/tjGHDRg02DvmEAyPEP2zK9BmMs5P9cErCxfhqk8gygaa4ry1O8qm
+WNM+/Yiv/GJvCmDVFSgTvdEuZMx5Dg0h7ZG9e2DucEKbNxIHvVkBYGUFKtnYObDr6GBDksbDqWo
ELh2EvFmft3OToGtW6VciLSBVWS7zab7J7o/pttU1up/JDesCyLPWR+Tp0bBzT8Li6NLsOVYA9bu
VcJzRjqmzc/GxkN1iNr9dCEsDktxaIVZGrMRnlvBDg2vST4AOQTI77HX/GcDpd6hQ3PGsNF4ZdZC
IeM9Z+8rhkXd8JqFPVMcBMiypPSRbM+RqqroriJJeT+UCwZbWIjeYB3s2i0BCIeiLl+WDjoOTTEo
Z2RIh56amiY5LVrC5hxmYYDh96ZPV5UBmm2pI9eK8J+rQX6+gO4HdF8TUuqOnSfC1T8ertMyERpb
jegDTSIXwkqs2SuKsPbA0+dAGEw5BMgOYsu0TB7PwDk7tjGzObYlg8nvR962XMXlZVhjbIFbe3bg
hZ2bUW3vhzJybq7FbsAsC1MBxmfk/c0tYbTU1TFQRarqfyTXIHG4cHjHjhg3vqeQPTOAHD0q2XLe
PImp8f7mUGqHDgqxf/WJhcTHS6DNa7i8nEFaU16X6nRzzvMq3b/QvZPurnQn0f2V7CAOJdbohEXL
U7EsPBMllTVQNtRhx94CBM5OwZnUcjSea0ZYxHMA+dsXb05eWHyzJ8zzuTmx1hJv5tc5zMWe4H9K
ou9hGW9/fdHGPUNunljfQx/7tPujM3keY+VwgZGgt+3Ja9YSTCRQfq0vLYjVin4IVusJE0MNQWtH
jFATcXgOF7A6iEMvnTpxGEZbLA72kjnEwkyF3x88WPIChw1TQ+cuvdG1S09RICcVHHKTumi6+8lh
LWcoVHpgxLhQTDQ9JdQtFr5poi2KmJvOxYYOZ55ahcWbkEMtzOiYrXHYgL3hFq+ON2qLLa9evfof
Zbz5fYxwa2koSrnLKc/bbjcKN8jbC9E3EBXR9nJYQJ8OJDOVzuhDtuMDMYAOwYFaGrAzG42rL5zC
vCBbTDBUR/v2KiK8wiE9Pug40ctFhO3aKUQor2vXnnTISEn0vXvpb9FXYngcY2bvT7vnIPKKuwlN
vkLhKW9SjuGPlb9ak737w9x2LwyMjsHGMQE7jtRgztJsodQaT7YMjS7EzuPl8J321yEsdlT44GNA
ZjbC3jADMsfo2c48C5zfW7JkSeu8kD+U8WrpoNHIBVeD5iFHc4ywZXHvSTg7Yy5suvVuVbGxOmi4
ijosVDqJgUfGdHu1U0fPjlpYOs8Fly4eh5PNEOjrqRJbUxWhFPaE+/WTwoK87tTUVAULmzhRE9eu
SSFUZh68LtmWk8iWXbp2RLceQ4VcWlILsvS8SBQeSqDMowbGQUfXCMaWJ4Rs18UvHavj6jDZTSqQ
m0QsZMXm2qdWYTFgcH6D1118fLyIKLDdeC4NAwlPImRbbty4sTX/+UcqrIUKbVxdsQbN85YhQ3UE
7e+hqLX1Q+6KUAzUaC9ymPNlJjdKrQMmEgNjUYwrrUlrWpN9tDvj2OEVxNQ3w9ikJ60rFmWoiFAq
71lel7w+OWepqtpBCDiWLJHWJDuRnE9qOQdYGNO1W0+6+8sgMksOAXIhZzexHqW12h8TjQMwyTxB
yHbjduejqLgSVnZSZwDf6Ym4cOksoqJXIT//OYD87YsXU8u8c6a9bQf1sBf9Z6Ns2wLIbhlAKtoA
CM9Av9BvJKaqdBehl6PyZl2mpiOmlUWpDkDAaA+E6LkiVmUA/GljLdHqi/TNs9GxyzDh+XI+hL1j
BhRuyDZggCbRVaapZbC11RDhGGYl/D57z6zY4FCWq1NvuHmvQfuOemJGhULRKMfsh8ltx9mbTkQv
HQcYmckAQuDBINIKIPb/nYy3ZVhPi/14Q7bdlHww/plq6DcyXp0JuBS6HIW6pqLdRpYaMbuZwShz
8iE2pyHyRge5VkG9HfZqjcAJxQCs7TYMh4L8UJe1DWWVu7Fj51Ic2rgMEYHu9P8cSJuyvcgTcTiQ
7chA3KtXX3p8F+rqEZg/XwptcViL3+PNy0qtQwdpY9uZwcltDf2MgfT5U6I1jMRA+H6T7h+JgSzF
MP15ZLdTsJpyCuv3VSNwgQwgk45iUUQBNhwse+o6EAYKZsItyiC2aYsai2P7/F7bMOCfAUj1pKlo
mrMYWRqjhS3zekzCxUXLcXCkhVAAstw0lgvdNLsgUVUPcQpdROiZYXtUJM43HEFy2nps27oYx2NX
wN7ERBxKPXqoijXJa5NtyQneDh2cBbPV1jYTXvThwxJQc5L30CEFLl5k9qJCLG02RhsGyeBbLTcD
HEK3rwgPcq2DhpY9HXCxMJx0HM60HrlWZPJUBpAjYppe6Kba/0rGy8y3rSqQnzMDaVmjbMuW538u
49WGclEUSoNCkaEyTABIgZkv6tfFYWEvfZF7i5dBxKvTANFuZ5OiL1Y4BBCb3Y1z54/jcHw4NsSG
IGbzLvTuM0bsb440sFSXQVja3wpaj1vEyIUxY7oSG1UgJkYCawaawkIpJ+fkrAm/oPXo09dMlkhz
ZGGh7CDGyVGHs+je0wKGxvECQNbE5uNYShXMbE4IifRU7yTkVp3DwtDVzxnIP3lxJTqHsLgSnVuX
cAiLe2KxjPfSIH0UaQ/HDHVtuGh2wKruvdGgMwJxup6Yb74BlnOK4RJ0DJPHdEdIhAJzF6nA2mIY
emj3EJuUPQ5OoG3YIMWZtbU7ynM8IFhFp05D6WBzplsdrq4SDebwjItDJ/gtPIRx1vugodlHJH8V
ihJ5sZ2Xv78MPQdMgalj8r+FsMQc9emZz7yVSYCtA2qCl+LS5s1oWroSRSPsUO02CxdjY3Fp7Qac
MHGGWw9duI4aiX0zZ0EZtBSnx/qgdsFKXDu4CyeiQ2Fh2QVr1ijg7qoGw5HDoKPTEQsXSiDLiUdW
tLFX3KnTcDlH9JhA2YGem4oQirqapC5iCWVKCh2uVobYd7oCprYr6HPsPS+VPWcegvRQikGrroWN
01K4T8tCSFQpth9pxPo9tfAKzMD04GxsOdiAmN0VTyXj/V9cLOP1Hz4aF+cswPklS6F08EHhADPU
ewbiwtKlOBcUjNiBBnAmEPUZOxoJQTNRaumNfP0pKFgZg+KTp7Byni8cnVSELa0tukG3jy4MiR1z
KIuTvmwjBmUGEHX1gNbuCBoaw4j1uZKtBgqPmsNY7ElHRSow1W+uUKQNHsGNPofLxbBHZA8aIhyj
2d4dTr574OqXieWx1ULGuySmEg4eKZgVWiRVooc+u0r0wtIShBpYoXH9XtREx6HYcjryR7ugakUs
ajfsQ3HgCizoMxKOfQdipp0DTkfuxHGLBTjttBxp204hYU86XB1NBSNjZ8/IaAQ6de4pZOSmphIb
Zkk+P+7VixnIEdkWKQTM/cm2HsTwOgqxAuecOEfHjs7qmL2IWJuO7trMQszFYDipRuRU699i2HAb
zFmYjAUhmUjJUSK7uB7rtxTANzAZB4gRF1aepfeeJ9H/8ULCw2q9cYmT6L31kKtOdzs9IellQOHO
vAVq+qjppo/rg/SwfVSgSFIbTkmG7ewSGDhuxPQAifYzALBOftw4FWzfoYC+viTl48OM5aQcdlFV
HSmrWGzlvlj+0NRsDxPjgQgM7AB7e01siPLC+u1pGGeeiAFDAslD9qANHUmLcQh9ZeXGSvo6CnpG
K6QkOid7A1qS6KdEs0UxBvcZN1OcZmqN3Cm+UO6ijeoUiKwuBshjEIndhIrlq8QAqYIeRqiZtxw1
u/Yg2P8wTKxPImRmPOoT4hHo7oTYTXJ9TKkCmlqSNJcZBocDOebMdSCcWNfQYK9viqxaGS8GGCkU
FrRpO2PwEB1M81eHwfjOWBC+HsvXl8DU5ji0e9mRLRfShl4ANfXucqhgGbp0pwPE6zB5dwnwINBY
f6AeC9eUwGJyAmydzmBFbCXW7KqAl++zAZC3338PPj0H41LQPFyPIc95pJ1Qt1WZuuLm5nVocAtA
Adm2eJAlLq1ejYaIVcjVNUd2N3otYAnyk08TaAwR9UdsS5aKs4fMyVuO37NQg0UdLN5g77ldO47N
szJtLt2GYn1xeJAPygkTusPPTw36owdg5eYz8A/OJa94Jzp0NCPgXU12dJHDsvMFExk03AJT3BJF
1bmo+9jXKHpicXW6k3fqUyfR/1dXUVkpFpMTWB25BaWhMcSQ2U6GKPZbgrItu1Fg5In8TuNQNNEL
ddvjsCPyCCzsEzDF9QxO7UvCEVqnNtYauHRZEhUw6DIz43ApMw4GWLblsWMKAl4OB/aRnRR2+uxE
/lJFpSt69OyHKVM6kkOpTk6NOQ6fKIL39AzojV5Ga9lWSHnV1blWZJBsfzPYOcwk9pyMyc4J2Hek
FGm5SkybmQIL2xNYFpEtAGThsucA8o8DyM6WbrydfteNt4+ePMxHApYLA/TgMWETxpqewZjxmzFi
0mJYOM3FmNHthGrlxAlpQ7KHzODBC42VQDU1UjKdPQ+pWpoX2Ri5GWA47GxMcfToMixZ6oaSMvKU
Ltdj3bozGDWOq8qPYbRpFEZaLoV2T86JrJfbJIShTz83TDQ5JWS85rKM1/BvyHj/VwDiZ2iG9O4T
0Eg0P6cnz5oeLEIvNUvWoMxlNj0fJO5SIzcUxB4UbRrGTjpJXlw4QuYvgreXEzEQyY5c68E1B4MG
SaoWjiHzZuWbQwcsm+zcub0ck+eNuo02oT8mmTtgwGB3dOlmhwmmW3A4tQFOnkkYa8jhqENw9ImB
jetyAm0+KE/SnU6HoBeG64dgvNEJEb/n5C/XLIwxjBdS3ukL8xG2vQKePs8IQLgSvV0v1BpPxSVa
n5KMdwjyuozHZQKMEvJMJdsOhXL6XFQEBNM6HSRei+o3GhErV5BDMlIUA3LS189PkuqyzJlzRMyK
eU3ymuXQCst5pbY6vcWAMg6jaLW3Jlv4QbuHLbr39ISL73HEHqgVLWAMJh6nr7vhFhiF8aYzyO6T
ZQ/6DNp3sCSbbcW4CcTMpyYjnGW8U36V8YZseMbdeCu4G29nlMyJQp5fKNmMQ1QDkWPgjoLIXcjs
OF7YLlNjDErXbCKn5gBGTTiJUQa7yC4LsToynPZyVwG6zGiZSTDT4PXIEl0WyHBYihkKsxAWHygU
g+TQXqgoAu7bzwimFjPRuasp+uoGY+O2POzYW4rRBkdojR2HvfMWLF8ZheF69jIQZwh217O3rQhX
jRx3BCtW5+DwyQrRpJIr020dTiG/7CwWPQeQfx5A4tsUEuZrEOPQkAoJzxNglHSQGAm3Nrk8cAT2
DPOBwdgY2mA2gnJ2764Nf39V4SH36tmOaH87IXvs3FmFPApH8kosCUjUhTqjO/0MLS1n6Or2EMVH
o0b1RD+dgRgyeBTU20WhS5e55GHMxNZDWdi0Kw1jzE5JEl1/aSa6dl9TuWcRRJ+i7r2tRGU6Fw9a
thQSEnBwcSEDyjNnIGY2yLYPQuWW/ShyCUZOLyPkjXZB+do4lIWsIy/ZijxAM5TOCUdp7H4s9j4M
Pf355LW5i1Gow4drCpkjJ3m7EDhwBTnXx2hpdRbebZcuI0VYhZVsPXua0fdZwciovfiePn36okfv
IejUxZK8uHVkeyc4e6xGfFoTlkYWwIq8SiefFKzZ3YzFa9PooLNr00BwC8ZMmAUbp1R4z8xE5N46
LCAGYuN0mrzpJCzbWIkVW8ueHYAQA/HWGY7muaE4H7MRxRPdkN1zIsrt/HExdgtqfOcjp7cx8kfY
ozZiLcoiYpCl5wAPdR2oKebQ/98CFhbqQt3H4Nuxg6ZQsLG0uX17ZrG+BM69Bai0b69Jj53JCzYg
B0cVnp6aopK/r+4QsrMvFCq81i0wJ+Q4tp9ohvfsLMHMps3NxYb4y3APWk8/L6TVlmrqnjC13Qxr
x2TMXF4kGAgDsOWUBLiRx716V+MznQfCDGRh37EoW3cQBRE7kT3MHll9zZE3aw0Ktx9Hjk0QsnpN
Qo5lIEq37sfeyKOwsduPLl2thES5Y8cBcHNTFS1e+vRRIXtpCKBg8NDUNKN15kxrsT3td6lYtXNn
N1qjAwRzNjPrSq8NRH/dEWSXEGJsy8QYgviEEpzJqMa0oBTYuyZg885ilCovEuPwbjPS9n307mMB
F88TmOqdSIylHBn5SsxekCZm3ayKyZUZyHMV1j+bA2nbykRXamXCeZBzcjdeBg6uTm/qo48rtBDe
8HJB6ExfoZZop26DgAA1oQHn3MXYMR1gZtpeeHdSg7qHIkmrUKyhxaeF9louQq3CIQUOLbB32KuX
KtRUo+RF86Pwppev3Y8dh7IxzuaM1NMqkFuX5GP4RKbDbkJKqaruAH1z8jSnJMHEJbE1B8JtTQSg
TM945gzE38YeBTNWQLlhL8rnrkbuQGsU289CdcwuVK3ahoIJHsgf6YSasM1o2LgP1zJOwdbKStB9
TU19wdbYLqyx79a1GxYsUBePJako2+dzES/W1e0kigAZkAvkMA0nKzU0OCxVKX/2OsYY2BGA1CBm
VwUcPZIxfX4ONhxowNrdtRg+aqocc96Dnn2sMS34KOzdUzBvZTFiDzZizfYa8rpT4RWUgZg9dVi9
49mFsDgH4jN8PCpCNqA0cgcKXecS+FqiyH8ZSqPjUDIvErlD7ZBn4Y9CAuesmD04aOGDrqpDoKrm
Dx2dXq124Rqkrh07CUkpy3glpgBRU6Sp2R06ffuLg9LUtAPOn5di9BwibKfB6/dD+bOH4OA5B9tP
ncPssCLRliR4ZQliDjZhYVQ2unY3EwyQ51voG7gQyKTD3iOV2EYl1h5owqKockx2TcKMJQVCxhu0
4tnlQIpKS7DYwBbl206gcFM8ciwCkD3SGQWrdqJw50nkBUUga6At8gPIqdkRjwu5aTiwdwP9X7gT
sSs5gxpCkMGhU2trVVp77YWkfNIkbVmEIXWD7tZNHV27ThKhQLYzh7X4HOCIw685JkBDMxDrt+1A
Tkkjlkdkw2d6Mo4kVKCgogkhK3fQ389S5JX4e/wCFhBgZNKdjuSsGuQU1yFqYz7cfROxN75UApCQ
5wDyjzOQlmaK5b9rpsgshOeD8OzpU+2GYX8vXXx47hi27w4RLIOrnTkcwBSW2xMMHKiBkfoaIswy
ZAhvzFdlUFiMhNNhaG4+CisbQyxaJBUWxcURFR7anTbrXFnF8oaQRC6JjMemzckYNf6YaIxo6pIk
2MVE8xMYprcU/Qd5iNYmxvZnfm2m6JMmbtGd9282U/z/DmFNMEMqeXcl2w8iW9eabDlENFMsDN2I
fK/FyBQz0Ydh3zgn7I9ZjwdfV8HZxVQ07+OQFDeX5EOMQyuamh3I61MVensNjakyGH9E3vJkXLp8
CLl5mzBmrI5QCbFUct48FWh10JGTuj8ItZruYBvEZyrhTpt03ATJTqHrS7EkqoSeH8CAQYEYbTgN
S6MTYO2QJMIF5ranCGCq4R+c1Rp2CV5RiHUHyp9tN16NPii1DkD1qk3IUB8lwlXZvUwJjLcjb4wr
2XEI0mht7vAIwl7P2dinGIR+ndQQu1mSjLfYhT1hbpTISfOwMAaQzfKaPAsra0u8/EoK2XsBxo/X
EArAqioOxRBj7sQKwItyk8/VsLSfh21HG2FmKzWdtCQnZd0eJfxm52DUuK3EWDxh67wYi1Zlwsjs
pLAd9xLbuL9OtIRhO3Jn48gdSiyOfNYhrO4oWUwMeGa4WIOZisHINvFF/sa9yNI2Rg7Z8nRnQ6wP
WoSbV1JQULRdhKBbkuMMGCy354R5167tRM2RtTU7MTWyLfcgeu00At8kzJrtDA8PFZEwZ2VgfwKc
dhpOcjfeL4R4Y2X0HsQdlKrKORwVOCcVSZnksHgkYfjIVeg/0J3AZR1CwjOFAoubJ66KycPR0xUw
sZQGn/G0zNzSZgKQVSh8DiD/LIDskdu5V3WXAITzHjxcqrm/lEDfpBgIM0U7zFNRgceEEZgW6Cg2
JCfVOEzAseVJk3pi3mxH0TaDNeEchmH6qqE5GctDvPD4lyb6117EkjVbaEGpYuIEBTp0VGDrhgBs
jPRF506TRfHg6HHByM/PROyWJIwyJAAxOSpmfDAL4XbunPMwnpwkGElrO3famBZ+aVI7d9OWdu5n
nn0OZII5ikZa48X921AxZrKQTOZ2HIsXYiJxbs585KjpicmOk1XUEKipgRleVnB0NURGpnRw8cHH
ajUX57FwdzUX8kdu78KbWV19PHr3tsLx42voX7ombDljzgwRhmGdfbt26pi3eBUBtBNUVB2hpm4E
d++tKFQqMWdxmpDkmlqdwI7DJdi4u4gOuRO0gU9h8cp8HM+shbPnGbFZHdxOIz65EiGrsjFebuce
vbUAh1NKMG36MwSQ9n1xzsUX16PDkd/VAOkqw1EyyBw3Y1dDaeKMFAJiJ0UXTFNVg5uaOqzpscUo
dVy6ohDyUbYjh6zmz3XExPGDxXNra+6EwFJyS7KpJQEx9+K6ia8fNMPAYIzI33F1f7fu/bCGDvjB
Q61FrUyHThYIXp6IQylKTHZJEDUd9nSAbTtahZlLMmE46QQmWZzGmm2VxNYqYWJ9QnzGd3Yadp5U
YqpfsrC/ue1JbDpUg+Xrjz1TAFmo1gtNq2JRvWQNMuV27qUOM9Cwcx8KBljjIIGvuUILc9TIlkP7
ImiWK2bNUhMsgrtC8P4eM6YDloUEELvrIECFxQja2j2gqmqHKfbO+OIrbl/zEmpq09C5Sychg+Zc
ycjRNpg1bwW6a9vSGrbCoCG+2HO4DAeOlYuuu2ynBUszRHjK25/sZHRCjFZOy21ANLENznkw0Kzf
WoiE1GrY2Evt3H0CklFQ/jwH8s+HsP5ioFR9L304qHVCmcxBc7h4cKI+bGw6iC6cnMvggiwnh8Go
zI2Gbn9NzJ6lwPLlUmGRicNcfP5OMjbFBMHCchI6aQ8X6g1OcLK8d+Y0Y/z8aTJuX96L9KR4vHw5
E/ghDRv3ZMKAw1POBARBWdJAKa9UwSwsp6WLgVKc9+CCQTO3pN8OlHKQZ6Q/44FSM+zscX3+HLwV
uwovL12E6jG2uOzljzc3RuBezEqUWjrDUk2jdaIb9x8aPXAAfLxVhIqF80hWzOyWeWD/tiWi7Qu3
iuD+VpxTysw5irPNmQTaU2E3xRL9+vcRByN71qzHDw1bjivXapCacQKHjqRBWVeDc1dqkZxbibmL
0rGBgKCoso42Xi0i1+diQUgG0vNqUFJdj0MnyhAUnIZ9R0pQSs8zC8hTDs1ExNpcFJTVISOvDAGB
zyaE9eb99xCkPwp3lszBnZXzccXDG5V6FrgeMB13wxfg9QWzETfMUBQS/iK3h5mirgH97p0RFv5r
2xFel2knouHnZiGSu5GRUsHbkGEDoGwoRHrmXri6WsLG1gJ9+rQX+Sau5Hdw0EBC4lHklRVg+76j
2Bufi9Q8JbLLarH1QDH8Z6Viy94SnM5VYv/pSgQtyMCSVbk4kl6DYwTGYevyMX1uGnYdr8Tx7Fps
O1QOv1lpiNxchBPZDVi95egzlfGutLTHpcPH0LTvEMrdg1Fs4YuGrbvRfPgomlasg7/OCNH6vqWd
ieHQgTA16y06GjCAsB0tzLWRdPoQ7d2eQonFoUHOLzk4OSG/rAaRa1eSs2OMMeMmiV5iHAbkkKyZ
+VAkZlTg6Ml0zJx7CJFkm+yiOuSU1AmAmLswHafTqpFf3kBrsJycojRsJ9vmldbT2qzFkrAsLAvP
JoCppX+nHlt2FYt1epTsXlx17jmA/F9gIAdUJRkvD5HicbbZbUbaFmnow07RSYywbemHFbrCB9t3
LkWXrpI2nCmtk+NgXGzYiwnju8HTS1K+jBihCqeATVi2yAMOjlKPJq6Q5oOSQzasygrwNcKjT1PI
ha+h3+YC3XXA95mI2ZyC0UasdjkmgMNqRpZo086M5NeRtsmCcfB8EM55tI60pdf4vWfOQIytUDXB
Hvc2RKLexAWZZMei3sa4vXIFbs6ah4SOo2ChUBczzlsAJFihA0Oy71BiGZu3EKhuVGDZUnfkpmxs
VVtxAnPcOB0UFCXD0mKkqAfh8AIDMbeC4epqrgpeEbYYr7/ejEc/naPf5jy++LIB568oERGTLcbT
OrgmIDmjEicTy2E95aQYgrRuUx6KCFBm0qbkosHpM1NQUKrE1p2FYvaC1eSTOHy8DHnFZQic8ewY
iHdXXVx19MIrC+ejRMeI2NwIVOtb4fayxbhg7opo9QGijXsLgDiTXcNVBqCnQg2WNpKSLXCGAkmn
YrAqxAcmplI7E24B4+Y5BUkpRzFSv71Qu/EaZrbHoVVmfFZWqkhIOIRbrzXj8ZPz9Budw8uv1dOh
VgM/sg/bieWkyQQqEevyxBq1InvuZM86oQJTXBJEuHDxymwk5tZiFh2S7Ek7Ecs7mlqLDXHPkIGU
l2JJ18E4u347aiM2ILvrBGRqjkSF3yI07TmIcoOp8FbpLopbWwAkYKopktM2iMp97nPF6itHx64o
LqR9ZTJC7Fve39wOJjR8FR3iEQKgeX/ze/w6Czs4vG1soosTyaWIiS0W83zsHBMQf6ocx85UEtM4
LRhuRFSuyG/MWZAubOvpl4TUHKUAC2bNZsTodu4vRUq2Em7eicK285ZkkDP0HED+TwAIy3jPsYy3
8+9kvDp6xDj0sV4OYXF/HHv9Abj1ehq+/VaJQP9J8PHRwOTJ3ZFwJppOUfK2YrxpA7aDo4MqAma6
wHdpAgYN6oX8PKmjKSfQeVFmZSmI1nZCTfk24GEOnjyuxRPaqE9wFvgxB1HRpzHK4KiQ5HJinAFC
VJnzQCnz42KgFCfL+X0OWZl5yd14J7WR8T5jFZaPoTlytQ3wxsYoMb+CB/ekK4bjxYWLcd55mpCZ
zlb0hINCFTNVuHVEByTSZ+I0h8HKpDcxC7blYLxwPQHffkae7TRz8uRUBNvbs3c1jhzfL+psOKHJ
tTVsR/YSuVhu9KjBuHQ5G3fu8OyXZnE/+qkJ5y8r4TU9SXQwZeq/91Axtu0qFNJIvoPmpiIrvxqW
difFZ7hRHYPMomUZ0B8bL+615CnmlzxbAHFr1wdNRo64tXi+mIeephiK/C7j8WroYlQOs8IZsqU9
Aa+/QgVTVVTgq+hGa3UYwnoNIwelK/x8NTHN3wxffVWJFxtOwNZqADw9VQggCIhLTmDB4rnwnyat
yZZGfxzr59xeQKAj7r1eg7fe/dWWn33RiPyiShF2YTsxsCZmVWH2wjRhx1EG8Vi/rQC7DpWKsAx/
xss/CUnZ1XCYerrV/vFnqrHz4HGsjXmWOZAuaFi8BpUzl9EaHCjuoonuqN+4A3mdDbFPoQtThYaY
jjlFRxtllXHCmVu80J1AQJPAowM2bpyJH388jx1b18LcvDM5NSrERMajpLIEBhMMsWePNF+FhTFs
S+4qwd23R42dSQykjphFqrAT5zM2kXOyg1jGmPHSGpw2I4U+UyPUVZwT4X1+MrkKS1ZkCbuNos+E
rckl4JGGdbH8187xuYz3/+vibrx5eXmi8+nv++BwuwieEcKNAbml9ttvv/0fAeRou964PFBfJM2L
tOhur4dmApQLA/VESIvng2RoD8W+nv3R6OeKx5+V0nfW4sXmnQjwtsOWzYvww8MKAoJ8ei8V18/v
x5WL8TiaXgSPxTzS1lhUpqemSl4JTydkDyU6MpDAohRPPk/Fk4eFePITgcj3ZcC/0rF+ZzrGWZ4W
QCCGQ7HCyiVJdNsVRYKzskXrkkk2p2DsIM9A55CW/RnxmoVv+lMBCNuK+1txR96LFy/+2/vcOoIH
SrEdeR7In81VYQCZbmGLcx7+uLd5La5Mm4WSQWaoN52Ku+vW4JWwUFSNtEPFUGvkBwYibcFsKO08
UDzEBJfnLcD+qCVwcbCj32ML/VJNwNdKfPcBz4E+gstXkvH6G00oLs3EmNG9RUEcz0zh3Agn3tlr
TkndgduvN+H6NSU++rgeDx404t5bdThHALL3aDE8fRNFrDmvuAaZedWYPT8N3nTAxZ8oRVl1LXmI
eeTdncGamByUVtXh+Oly+AUmETNJRSodlDmFfw0gbCueQcM92tqOD2i5uLMst85nW3Jrcrb9H4aw
3ruP6QNH4PUVS/Hm1kg0T3YnWxqLcODbcWtxIzgYFUNMUTXJHjnLZqEgdBaqjexRoWeBVzavROyy
GZhO6/TG9UTgp2Y8+aAaH7yYhYbqw3jjTi5u323C/gNbhLSX7bhpk9QlmkNcFhZ98OqLebh/tx7X
X1Ti088b8NU3DbhxqxaN52oRtSFHzKOIJDtV0/81/mQpvAmg2Z7pOdXILVIK8PUge+8+UES2rcPm
HYXCtqERWSgsqycQP/aXAMJtdXjd8eH4Rz3DeOwAr1m25Z/NApFUWKVYPnwiLuw6gIbNcQQcbsgf
bgdl6Fo0HTyCcs95KBhihUyXIOwLDUXJ6T345tNafPVpM8pyEuDs5EnMLADvvluK+2834ebVWtRU
pKC8LB43X61E7blzcPUMgJOjBB4c0uZaEbblsBFGWL2ugJhbA/YRO2NmMWt+OpIyq4lN1GDuogy4
+yYh7kCJCE+t3VRAPyuR7JSNrMI6EabyC0wRct8TiZXitZCwbEz1SsTGbYUoeh7C+nsX9xriBn/c
7G/dunViOE/b0Za8kd3c3ETrbF6EPNnszy7uxntCQ5LxNveTAaQDz0NnAJH6Y3FtSEMvfVzpPwK3
/d3x86eluHv7DOys+4q+S66uKohe7YvHX2cDX6ULUAAacSi1FD7LcvDGi0fh52MNa5uh0Bk4BqPH
DUXkGn9882UJgUWBBCAP8vDkZyWefEevPUzDhl0EIFanJUkud9blkJWbDCDENGxm5YikOVehGzue
ESEuMebW4Yx4jd97mhAW9xnirrBJSUm0URaJDfn7jero6EjeabHojPrgwYM//VmB1pNxyX82HXob
cW3WAhT3M0WjtRcxknV4bc1qVI2eggrynl8LC8e7W2NxwXU6ynRNsdN5Knm+WohYxQdYB+SlbwIe
1BGI1OHxT2fx46OzuPVqPW6+1ICcrN2wsxtDLG84jE0M4GA/BseOr8IXX9Xj2g2lAJD3P6jDtw8b
cfcNCUAOJ5TAnaj/0hUZdIApCQxqMG9xugAQDmfxIbdlZwGc3U9j/eZ8lNfU4UxqBXwDkjFnQRox
lBpkF5T+JYBw87+dO3eKIUjcfPLatWu/eZ9ty4O7uCsvd4/9MwDhbryBw0bhjXXhePvABpx390Vx
30m4OnM23onfhFthS1E6kGxr6Yp398fgw7Qd+PZONr67X4DIhR5wcVERwGpj1R93bqbgyYfVePJJ
jQhF/fB9M154sZoArga745aRHYn9WY6E/eSx8PYyRm3dIfzrm2a8/aqS7FmDjz9twJdfN+AFsm3z
+Vq8/mY9Pvm0Hq++Xo+q2lqcSioTABK8KI1sVCPCfyFhWSLUcuhYqbBl3L4iOhjPiJkWxZUN2Hvw
rwGEAXb//v2iiSI3+fz9lExuVMkzQtiW169f/9OfU8wdkMeY4uLeQ2jYvgdFxp4EIJNRu2Yjmg8d
QeX0Jcjtb4Yqv8W4cOAAXipJwtef1OHOK8WYbD1eOH7MdH19rPDqS9UCQN55s5HYyDncfbcJZcp6
5BSXYvYcD2LKQ2E4YRyMJo3C4CGWxNZ2YsO2EuSW1pOjUi5ANXhxBlJzapCepxQtStx8ErH/aLkA
kE07i+BEazAiWgppnUqpEuzEf2aKyJPwa2FrcuDicQbb9hQ/z4H8Ly4GB96UbTcjd0DlKXrcTps7
8bYdK8oXN7J75513RNfZhXODsVuhI8l4fxfCauz7ayV6nroezuvq4QF7dbhBHtwKkbjlFibcrsTS
qjc+eJsO3wfZBGaNYrN+QrR/0fpc/PRdFT2/KGjx1hMV2HKkWM53nMeTR7S5v8wg8GgTwvohB9Fr
zxB9PSbCUaYihJUpKaw4hGUhz0QXIayjIoRlLkJYv85EZ+D5b3MgvBl5Y7a9bt++LQCE5ysolcp/
+x4GFGZ4b77zNtxGT0Rer4kEGDFinG2aGCg1Ai8tCsF5l+lIZekp3XUmrnht9SrRaDGb3rdQ06LD
RqpbYPlpQKAN/REbCVTrWkMoX37ViOs3a/CLiMlfEF9vvlyPr79slm17ltZCHV5+he0ofc+PPzaJ
HIgvMQkODXBoZX98CbbvLpRCA3Sz58wHn/WUU+IzHMpKyazCktCM1s+s2/Tfh7B4DsjvwZjZh7u7
uwBsBuY/AnNel2cvXYSrei9ccPTDnbgNQgrNtizsZYR7B7eg2tBR2JIr1K8tmo8vLvEwpUv44psq
WFj1EK3DW4YW7dkTCnxBYPWwrtUu79yvxZtvKuU1SPcTApZv6sVX6bVmvEfs7Z13frX/R5804NJV
JX76uVnY+sdHTWhorkXwwjRhI7Ydg/DBo6VCvcav+QUmC/BlYOb3Ob6fkFyFA/H/XQiLu/HyyIa2
FzuODCwMML9nKNxckdke7+8TiWewUNENjUsiUTVrOdlssOiGUGzsgfpNO5HTdYIIrWZ1MEBd1AZ8
eiePfsILqG84DEcnqT0Rz59xdOpA6/8EgUgDvvu+qdUujQSqN19tbN3fb98/i+OJSgIP7qJ7XFSM
n8moETm2ljDe5rhC7NhXIh5zOMp/piTjtXeR7DTR9DhOJVdjKQExh7z4+8KjcnE0oQJGZsfEa5xn
eh7C+qu4Oi0EPtR4YAwvFL758d27d1s/w62cT548+ZvvY8DgsAx7JuyltAxLavXwaJNyW+01kWsw
afwExKvq4qKuvujAm6kiJdJ5uBTPSGfgYGmvmJPebzg+TI6ljXYFeblbMHmKJD/lvjiOjiPxzUdZ
wDeZePJTjdhkV19WYkZ4Nn78ulgstu9/IECJLcS2eJ7vXC/AgkNWT75Iw5MfK6TnjzmJnoW1sckY
PeG4SLKZeaZISXRiHxOMjwngEIzEJUnERDknYjEtXaiz+DG/ZsrFhXII69NPPhQdYXncaltbMovj
bsZ8cUdjbuXOk/LaXhyy4hABh7fYq26Zttdy8WAkHs61MiICxn0GoIYOt3ubN0Bp6IQMleEo6D4B
t+m9azMXIEtjFDLV9HHRfQbuxESjhBhKLh2Onl36YtFyBRqbpENv5cppBCANePJNHa2BZnHwvf9B
A65eq8HDbxuFLb8lgLlEzz/+gOz4pJkciGa8fqeWDs5asnOTeO3Lr6QkekhEpji8WALJzOLoqTKR
nGR55Bqu6CVWMm1GstjQXtOSkFesJCaSJ+zIMf99h0t+k0TnGTTHjh37zZrksFVL910GXbYVf67t
xQcar8uqqip4eXn9ZkQrXxySYQCft2ABXNr3wovzF+HNI9tRrGuGdNVhqJ7giHdO78ZZ9wBkqA5H
XjdDvLolEp/Vn8IvPzYS86ZDaLIedu9RoLpaIdZnTsYW4NNaPP5SKdnplya88YaS7hr8/LhJ2Pbn
Hxrw8At6/kO99PznJty/W4s7d+oIMJoIrJtx7+06XLhSi6++aRQ/57MvG1HbWIeo9TkiQc6J3sPH
S8m+leLQZHuHhGUKgQKDtJBIuyYgI7eW7PkrgNy4cePf9jePYmhVURUWihkqPE+l7cWAwgyPmTO3
fG/bhZsf8zx6Honr7umJ5Z0G42z0FihXrCWgGINM1REo9whG4+79KNCzF3Lz/KF2aNi8DW9dSqf/
3yVceyERpiZayMtTiDG/FpY9cPliJm5dr8fnnzcIGzwkIKlprEXzpXoBrLxWX7hZjzNpNYJxscPi
RwwiI78OKyNzhU0sbE/i4LEyHEmohNVkyU7LwnOQVVSLwNmpQu7s5H5GhLg2bCsUQg8j2tNbdxUL
kOF8En+GlViFFc8ZyH+8OCzFw46KiopECIVvfszeBYMLL5Ldu3f/54QkecfMUH7PQlquyPBVOC0P
lGLpLkt4eS5Ii4y3tqc0ZKqprz4u6I7A1YnG+O71VDz6tgAbVnvA3q4vnJ1GobF6h8Q+vkilgy8H
eFSB6L0FcF2QiUefZtDzUrz7ZjGM/bOx6wg/LyDwKMeTrzKlENbXWXjyQ4UIZXEIa+NeOvTskwQQ
WLXIeH3ShALLYlqGCGFxzoPrPcT0wVmyjJcec32IyInIDOSTjz8QYb/a2trf2JJDUszWmEWEhYWJ
1/7TxR40hwv/7Aqyd8KNJUtFCOuVsJWoneSMq/5zBaDcJVZy1t4PDZaeAjzubdmA63MXosbMATXR
K+HtOBG21n0xI9Aa775OtviS2MYXtXjwFW1Y8qCv3qjFlReUuE+e8YNvGnD3Xh2aL1TjLQKNr+n9
++/X4eLlajpUlLj7Ri0+Jo/5JQJwDmGl5UtJ8c07ClBaVSsONVZf8QGXXVAtwizHEspEGIbDLhXK
OhHmCiXgid6QKz7fNoTFre05NNp2TfLkRr7YueGJjn/EMH4TOqXDjQ/HP2TVH32EOcbGeO94HO4n
7cWLEWGos3XHq5uicT91P+7u34yGyZ64unAR3svej/ez9uPr6+l49F4xqo7FwNFqGKbYDcC66Bn4
8bMqPH6vEj/fJ+D/nmz3VR2uXa/G669X45sv6+hgrsf3Xynxr89ryNFRkm3r8clHdSKE9QLZ+947
tXjvwwZcvFqD5ou1uHqzFu++10BgUoeKmlpkFVQhZGWmyCGxnUoqpXAg25uZHNv2VFIF5i9Jx+4D
xfS88TchLB5N3XZNsk14rg9fDLQ8urZlXMOfXdOmTRM/54+ussoKhFs6tMp4K3wWoMTWHw3bdgkZ
rzKM2LKZB2qWR+PsgQO4lH4S92+X4q3bSqxetoRAZBBsbIbg2NEY3HmlATdoPb36Ui0++rAOV27V
o4jWU05pHW7Se6/cpseF1cgpqsOeg6VCVcXhKZbkphALWbQsU0h3swksOBy1bnOBCGOdSatGQXm9
6HXF38M5EUnGq8TyiBzRByujoFa8tn1PMeYuzBAqruKq888B5O9esbGxIs/BHt2tW7fEa+w9t0ww
44Qve8fs0cXFxf0mR/L7JPo+Re9fGYhCYiG1MgPJbWEgHSQG8nHGVvLSzoscBx7m4eN7ifTv1QoK
++RfxRKb+FliINdpQQWtysYPMgP54ccmhGwpxNa2DOSHcpmBVMoMpJ5cqCzakMkYNUFiE5w0t5qR
KXpcifCUXUJr2xIOXwkG4pcuWAhLKkUhoXPiUyXR2Va8ARlA2I737t0Tr6ekpAgvj9kaL1D2CnnE
aNu51P8m451ogbJRtgIwasY5iCFIQjlEDOWFGfOQJYq4RuD81AC8HhOFIh1jMeu72mAy3ihPwGsv
cfjvrLDdL3SYPfm6lhwFyUv+gA6xq9eJgTyUGMi/vmvCZWYgH0phFvasGTiYgfzwgxRi+OpriYEs
CcsQ885ZOZSQXCES5yzRZQ8xIipHxO19pieJ0ADHqXOLasSByKEYnmGx91DJU8l4GTxMTbkx5lFx
CLbE7Q8dOiQOQWZyfCjyIelJnvHvGUhbFZZnp364MWcB7sVva7VTlYE93j5NB99Uf2HbvC4GeCV2
NT5rTMDjnxqE3X7+oBhfXE3Gh/eLpbAK2eVnApAWBsL2vHevtpWBsJ1+/rGFgUiqq8ePJQZy926d
eMzf99a7EgP5+oH0PV8wA2mow5q1OcKOzNQYfE+nVAiJNNt7SWimYHesdOPnrDJKz1Fi/+Gny4GY
mJgIxstMg8POnFg/cuSICFfzPmehDE+A5FBWWwbyexXWIq1+aI7aDCWBRKbmaME4yqfORuOu/SIf
wh0T8gbZoH7TNrxzJYP+v+fo3ziL165XQFldgE8/qxS2/PxTAhBaT198LtnpXz9IDOTslXqyZbNg
atdfkhgIV4pzxbj39GSk59dixaocUcFvZn2SQKWMwKJcsBF+bWlYNjIJIPyDUsUaZJbBrUvWbSmQ
wtZ0BnC/LFZqceiKbRlAbOU5A/mbF7MJTqDzFD0ebcmLii9eaLyo2NtueZ+VWn/GPloAJE7uxvub
HEh3PTTqSK1MWnMg/Ufgm2uJIt7Mh9qTbwgIvi+Schmcv2AG8SVR4F8aRA7ko885B5KD7x+Ui+e8
wTcfLcGW+AKxAMX3PKqRvqc1B9LcJgci5TNMnJMkGW9LDsSScyDZmDSlJQdyDObeqXS35ECOSDmQ
pwAQHrjFAMvJ361bt7YuxpKSEgEmH5E3zEyPP9M2tPBHAMIDpfJ6TRBJ82IdE5HvEDmQxctwwTWg
NQfCyqzXVq9Gtvoo8bxAezzuFh3HD/+S7CZs+6DutzkQOrCu3ayhv6186P3SLJ5/8dmvUtN379dL
OZAnza2AzQDiNyNZxJE5XMA5kB17ilrzG5wkZ7bB4a0WeSqrrpauyBTSVCFP3fx0ORAGXA6pttiS
wzN88XRHFnZwSJXDqTwbncNc/1HGq05OjYs/7u6NRaaqvrBTYW9jvEmAUjPRiWw5WORAbpCX/NWV
FHl9ncePn5Tgh9vZRN/PSg7JEwKQ9wlAvv01B8K5orfeUrY+/+XnJglAfmpsteX7f5ADuXytFo9+
/tW2Dc11mLeIZbzxIna/Na6wTQ4kXoQFOb/ESV/J/scIYDgH8tcAUlNTg82bNwt7sS2Z9fGI5Zbp
ogwg/DoDCAPLf5LxLlB0RePSKFTNChX5DikH4omGTXHI6TZRPM/qOB610Rvxyet5wo68V++8VIaX
btbKtm3Gt9824uZVJYFVmxzIhVpcv/XrGnzj7UYcO10lHA8GA1vHBHHwz5qXJmwi5UCKsHN/Sw4k
HtNnpSKZw1OunAOJF3kOTqBzASFLfTlPEhEttTLh99jWnC95ngP5P1IH0laFxc0UOd9xjhjJxYH6
IpleoKWH+t56uEAA8pKHM378IB94VC4d/JwAZ+DgZDiHoZhNPCwEHiuxN7EE7ouz8Ohz2tA/VxPt
rYDtnBzEHcmi5yUiV8IgJMJeD/LpOW3qf5UIGe+GXRkYZ31aqjwX882zYeqeLBRW5rIKy3JaBrGR
UyKMxWEuzpMYOyWK1/g961nPtg4kwHoyLs+Yi7e2bcSNuYtQNtgCzZN98EbsOrwWFQnleEdUjZyM
V1eGC5Zy0T0QRUNN8ULECrzdkIyPXy/CT9/X4xe6H3/O4oJafE+g8uBbDkfViRDWh+/X44fvG/HO
e/U4e6ka79yrw3e0sT/7vF4wlOvXlXjvvToh432dvGgGkKOJZfANSBIyUg6zsJSXQyz+QcnCY+Yw
CyfWmX1s2l4gnielV4rZ0wuWpguAySksfWZ1IG/ev4+gUQZ4e88mvJu4B5eD5qJM3xo3li8TIaxX
Y6NQMcoOzW7+eCd5Fz7MP4iHd/Pw42cVeEDs47uXMojBEZASIDx5WCfCVz9/SF70owb862EDXnyp
BnfuVOPht/XkXDXihwe1+BcByCP6+j3Z9qsv6vH2a0oCQLL3J/X44qtGSYV1sRavvF4vBA0vvlyP
SmUd2a9c2JHtyXYqLGNvO1swuiMny8iW9YLBsYQ1an0uSliF9RQy3v9ZHUhpCVYYWODivsNo3LkX
JZa+KBztiLqoTSKEVRW0DPlDrVEZEILmvftwreA0Pnuf9ioxrkvKQpxvqsL7tNa+pfV093adYCBv
vF6Hb4jd3n6zASU1tSiqqsOb7zbivfcbxOzy7MI6rI0tgLtPEjbuKBKhp2MJlULVx2GstNwaUVnO
zIObKR46USFCWFt3FwtZb+SGfOSW1Avl1Yy5aZgZnC5AKKe4HqvW5sKDbMmFhc9DWP8HrojQMBxX
7YlrugQafUagVIMApN0InCf2cVl3BCo7jECR+gjUdx+BK32H4c2QIOBhtagDwUMCgn9J4SgR0vqe
gONb8pB+ZsrbhIzyangto/cfMktpwDfkUbuHFGLXMfZyasRn8GMx8EDKkYjnv9DP/ikbG+MyMcac
JblnYDFNakti4pRC7OM0TN2kVu3mvpxYP0NMJBGWM3JhGZgrHk8k4DH3zoTV7CKMmPAMu/GaWuPC
VH/c374J17xnoUxnEhoMnfDWhhjcCQtH9RArVPQ3wysLQ/AOAcg5Sw8U9Z2AyzPn4r2mVHz9XqXw
/Nh7BnnMeEgH4ONz+Jnue28348bNejz4WvK0P//yLC5fr8PH7zfhl8fn8f0PZ/Hy7XrcIm/wq6/P
4qefz+ODD5voMw2iuM3ZI4nYRiYxiXpk0uYNmJWOqV60eY9VoKK2kQ63QjhOTcLKyDxUKBvFhvfw
TaHDMQ1p2Urkl1YhIDDw2QAITyQcqIe3YtfiAwKQC07TUDbAGC8EzsFHaQfwctgKlA80RYOpC+6f
3I4vKo/h8aec46jHo9uZ+JkZyI9Nkif9mDzjj2mtfSF50r+QLV+/QwDxNjGSx1KVOYjVPXpQL75y
+OZHsuUH9xrw2u1GfPvdWfzw6Dxu32nApWuNuP8hs4/zeOvds6gltn/4eDncvJOFPTNylcK+88hp
4saAcftKUVnXhI1bi4Rtl4Rm0wHbjANHThLDXvtMbMmtTJYPGocrcQfRTIyjdKwzigZYoj4kCucJ
QCpdZqOgrwkqHWbiwp59eK0mFd+TQ/Lt1824ea4UVwg0v6b19DOvp/tNeJnW04fvNRMTPocPPjuH
qoZG1DQTQ/7mPL5+cA71ZxuQVdiIZSvziCUkITy6EPkVzdhzsAKunsnklGQgOasWqbn1CArOhDM5
hTv2laOo8iwBRxEc2E4rcglAGnE0oQZe09Lh5Z+GE4k14rWFITniMzGbi1GmvIzFy9cgPz//OYD8
U9fqiAhM7twbQToD4N29Hxw0esGjywBM66WLAB1deqwL98668Oqmixn0fNmsqYiInInw8ECEL/NE
+HJvhEfMkO4VfggP8aD3AhCxagaWhARgkrWXqGgNC5uOVatnwMbJB7ZO3li9OlD6njB/+h536Ss/
p5+7+v+xd9XhWR3Z+6O29a0rLVSoAMUJGgIBYiQhrnggAQKEQAyXAAkQNErc3d2Rerv17dZxabdb
2bbbltr7O+/c+4U0C5T+NqT9I/M857nfXPvmnjtz3iMz5y62x9ixNniglyV6P2SBR560QZ9Bduj9
COuWeOhRS2VZPPDwJPR8wBwPyf5Hn7JVxPNJDz9uLeAxFY88MRSnTnUBgPz8M6zGjMPUux6Cj9k4
2N72ACyuuQN2N/bEDJMR8Oo3EFNuuFeR2yP9MGvMaNj99QFVd7i9F2Y7WmHRQjcsXeaheBCwUPjB
eqAHlsm+BcLLadNd4Os7FYGB7ghYqtXnz3cTXmvnzJ3rhhkzXduuWbzYHZ7erhgwaAp6PmiBB3tb
YLKlE8wnOao6acgwW0x1dBVeT8B9PSfh0cesYDfVBSYj7HD/A5PVOePGO8DByQl2dvYXjKV1Zjki
ADLw9vvh2Xcg5kw2w+Sr74DVtXfB4U7hrdUEuDz0JKZcfw9sb7gP00aaYIHXFCyVvhW43AuL/Zyw
aKYdApa4Kz6wLy6Z54IAf42XgYpPrpg921l4N1XVl8q5/gtc2q4JFJo3xxVzfdwUH0m+fm7wmuYq
/dhd+rHwVrZuHm4YNtxW8eiBXhYYb+6o+Hv3PeMU78h38vbJftbqnF7SL21sXTBxsqWahtsVpaK6
CkNvuA3uI8bCZchITLziFthefzccH+4Pt/HmsL+9t/DxHtjf2guuY8fBb9ZULAvyVM84a7oTpk1z
aetP/v7umC79adEid1VnP3T3dIOHl5P0NScEyXWzfdxhaeOixiSfuY+Mwyn2rhg81LatD5JP5pOc
1O+eD07GwMG2sJ3qisf7anzitdbCp2EjbHHn3eMUb0eNnQqrKS7o/bClqj8h5zo4eWCYySiUl5d1
A8gfVTiNlbNejn/yCZoOHcRc/4U49a9/4tiZMzgqdOzjc8T64aPHcfijo6LBkY7p9N/1j+ScI0eO
4uMzp7Bg4SKUlpbj6NETYg4fU/TRf93j3H0+kt8nThzH6dM6nRI6eexcXeifn5xG1PYIJCXF45//
PC3nHNOowzUnT54QDf6nLuHlmY8/xtHTp3BC+LQrNgY7Yvbi9L8+VQvjjp46eY6Pcs6REyfk92lt
35nTOHLseDs+/jcdOXJM+HcMTk6uePPNtxW/WD98pP05R3H0yK+v4zknT57j23HhPclYP6l4dFKE
6mw899whnDlzQq0tOnni3Dkn5Pexo0fPuyL6chROBz5+ijzTeOm72B8NB1px4pOPBVxOKP5pvDyN
oydOan2Sz8s+deSYRu3516F+VM5/7rkX4OHhpfrkuX74a14e6cjbox15e1Txrz2fPvjgfXiKUD1x
4ogoLscVL7lt47/Ujx07quIZXVEYXD/Gvifv+LD8t+s0L3xw/KiM+VPCu+Oq7xn74FHpk+xnxvF9
5Kjexzr0p/Z19h1OJV65crX0q1OKT+37F5+dz/wrPp2nD5In7fnEcdvc3IiFC33xqYxv8rbjfXkN
6UITCLoBpIsL06MsX7680+/LwOrFVsv+f0tSUtIFp4L+0YXBTgaPO7vMmTNHTT3u7MJZaBdLefNH
Fi6I7biQ7n8tnByxYMGCywJ+s2fP/tOOcbbNuF6nswrTKXGmXWcXTrTgdO8/uHQDyO8ZVJcjIMUZ
I9TWOrtwmrJxps+frXB6NdfwdHYhKHXMfdYZhWtcOqbL+LMUKgnUdDuzcFoxFy52duGMR74jujT/
bIVtYtsuNivz/1MI7hebofj/LafEAv0TKIjdANJdukt36S7dpRtAukt36S7dpbt0A8ifo3BV60cf
faRcLudzEzBA9dprr6lVxIxjcJHibxX60nnu+VwtdJO99NJLF81qez7T+2Jt5P+0b2Nnm+iXWtgO
mvN8vvOln+CiRS72ZDvPl+68Y+GMJ96PdL7ZT0xfwef+Pc/LFc30LbMd52sjg7vGNl5ssd/lLsxB
xtXszPB7vj5nzKvFdl4s27SxMJcU+8b54jyMCfB/3n333d/dRvKfdL42sq8a28j2/lGFkx/YJ8/3
fBz/3E93K+lSgvvsx3wuLm7sWLhglP2nYx60S2kjr2Mc9nzjn1kO2D7y8rdSu3QDSBcWDigGKdet
W6eSsr3wwgu/On7gwAGYm5urJG9c9coOcrHClfAeHh4qARwDYO2FGwUh04EEBgbC19f3kmeicCAG
BASoDK/MTNoxtsBOZWpqqpLRMcnfZZ6VccHCVDJMrLhq1Sr4+PgoH277smvXLpU2he1kzOG3CpNk
MujJwHnHhJnMm0ReMBDMFck/XeJMs2eeeUbxkm1k8kgCevtC/rGNzG7AdDh/RCFY0lcfEhKi+Mkp
rwS+9oX85XMweMs++lvgwckhixcvhqen568SZvK/uHLez89PpQRh5oZLLZx9ZGwjk5Z2BHK+N6YS
4ntnvO6PKHx2Ph8nspBnTLXfEQyYbZpZK3bu3NmWyudiY3HGjBlqDLP/tQdGygbm7uJ7oQwgsF6q
gsixbWwj+3p7hYnKJmUQ8/4xiwGVyW4A+RNZIMaOz++HsCN1BBDm3GLA8VIC4fymhjGxHgdQe2HP
DmKcmURw+a3khe3baNTweD1TPLQvzJTLQcA2MnfVH1XYRmPwlADaMf07BQkHHwODv2WBffXVV3B0
dFRpKjjVmkLdGOTm/xhTfFN75rFLHVTt20iB2jG3F4HD2MYLfTyrq6w545Z86AjGc+fOVSBIHv9W
wJqaLZ/JCPIUcsZCvrm6uio+Usul4LtUMG5vYTs4OPyX1k3wp2J2KW3sCl6yv3h2yCZAK8La2lop
DrRSLkWpMWb3JuC0n33FzOGczcdCBYng+nuAzqjQsj+3nynGfsjxTfnUUcHtBpAuKtQO+BEfJrMz
EmdOGAUzj1Pgd9SUqGGwMzAVOgfyxdwaHHgcgEaXAhM+tp9FwYFr/HoaU6kbc3hdauH0VWooHVOu
U4smeLCNzs7OeOutty4rLynM2vOR1H7wURBRwHcUKHShcNWsEUguZs0RrDnYKXgI8NSOjckHCT60
5IwuhPZ8vdRC9xffVUeXILPoMjU7LU628XKvV6DLoiMv22vBnMFHMO5ogTCzMmcMUkgRSC4m9Jk5
2Lhwj4BBS9so0PnejIDC90Ew+b3AyYSHCxcu/JXQowbN8cX3TeuEWZx/uozrkXhvCteOvGw/s46W
CK3fji5q8pHtpEXKd3+xwucwjmkCRnuQ4Jg2Agpdgv+f6cyRkZEKmDoCIP+TbWSfNOYD6waQLiw0
VemCognIL51xy4SLfDnsRDTDO34AqGPhdRcT+hw0/A6EMbU0O1d7DZcaL11cxntxHcellkttIzsf
hd/lFnpsv5HIS+P0ZwoodvLf0uY4uM73CV1j+fjjj5UwI3iQyFeju4BASuHPc4yWnjEF+KUUtpHC
gn7sixWCNV1el7PQwjX2SSMvjWBIS5bPdrHpxQQWflvkYucQbIwfCiO4G60RFrpZ+B8s9K1T++34
7Y2LFWMbje/iQtYkLZTLCcYELyp6HXlptMg59lesWHHRGCanxDMV/8WyDdBDYfQiUKDTq2AsaWlp
KukoCz0PdFP/nkIA4neKLtZGjqsuXmfTDSC/5SrhC2FWX2q0RtcKtQvjF+KoTdDyoEA731f52hdq
ObwXXzQHI7VmZrYlAFD4G9OmU4O+VKHHNrGN9JOyTWwzC8GJdZq91JzZRgrWC6Vcv9yFmjPdAfSj
s10UbhwM1J64pbAiuNLKo1vwYoFVggYHM4GJrj4Kc1o0fDYOcMatOOBojfG9XKpw4vvgfxvXfbCN
1Lz5jthGvmu2keBmZ2fX1f7mXwl9S0tLZbWxnXxmWktctEbrgSBDK419itbexYQ+LWJaz3RlGbMB
cxIDn9FozVGxoUJDJeVSCzPmWlhYtAWU2S62id+Fp0CnRWBsIxWAjlZUVxUqVbRmyQcqkkZBzPHH
d08+sJ20LhhPu1ihF4MAzPHGMUkeUAlgv2IwnmOe96WLmi6n39NG8ohtNH7kjW3kmKFFyN+URWxj
Rxd2N4D8gYVCjy+O1gHJGJfgIGOnokCh0GfQjBrHb/ly+bI5SP39/ZVwo1CiWUoBx0FFE5qBX35E
51LzKlFwsmMa20iXBAstDXYqdlhqmBz8bONPXZS6pGMhuFIYsR10u1BIEQgIqEYznHyh8L8UlxPf
Dc/lYORz8n0YXQSMjVD747vp+O3xixW6VQiyxjby/fKd8R3xXfH9k8f8z8ttfVysGGMxbCeJCggt
P+5nv6EbkO1njOFSVtDTUiDv2TcJNqwb3TXkgXFiQcdJBRcrfBdsI6+l5kzhTPcp4wQcJ2zr72nj
5Sjkm3HSCvsK3zML3zNdXARQWiY8xuf5rUkyxsWIdPtxEgHr3BotbrrzOL75fn7PglfyydhGWk+8
L5UaKgyUHeQh+yXv+3tmcHYDSHfpLt2lu3SXP6p0A0h36S7dpbt0l24A6fRCt9KPP3yPn348e9np
7Pdnu+R/2tMPP5ztkhTkLHQBnT37vb69VPq+w2+h79uR1H8g/aBv253Ttr89Xeq+30vqHl2zQJPv
62wntVnj39lf87Hjc5292DN3OK+T2tXZCQ0v5nI6e7ZdP/p/0NlLpO+Fz9+378dq3zk628mk7ivj
4DJPke4GkIuV9Rs2YOhoa4w0cxRywMjxjhrx96/qxn2OFznH4dfn6NeMEBo21gEOjg4YNf5/uO/v
vsYRo8ZOxMdnTnfJQPX08IStjQPspjjB3tYJU+2EZMs6SdWF7PW68Rx7WwdMka2dgyumOrvBycUV
Ts4a2Tm6wcrODRZTNLK0dYOdkysc5RxrezdMtjl3rP1vC1u9buMKS71uPKfjNW31i5xjbukM72kz
ugSMmcrfdJw5rNh2axe1tZ7iCiv5repC1lNkK/v4fBY2Lh2eR/bJMZupbuo7EzbCa36TgvWOz2dp
p/G0bV8bD7R7tPFTyNpWO/e8vDsPL431X9/XDePMbdtmK13uwskIY0zNMUX+nzybYusqfY080XjI
75Oouq1en6LVeZ6q27nAXng4Vfqm/VQX2Nm7qK2Do7bPwcFF0VQHZ7jb28BpqgMcpzrDydEJLs7O
cHZykd/a1sXZRW0d5VwSf6u6o7bPSbbOzi5q+1/n6PX25/DTBuPHm6tAfjeA/EFl0eIA9DELxyiP
XIx0y4KJY7pQhvo90j0LI1wyYeKQjhGurGdjBM+Ruolzpqqra5wyMJznuOnnuOrXuGSpfaNkn9Pi
PFTXZmG0h35f547XZKm6iUumOn6uLem/asvwdm3hfnWN/H/bNXpb+HuEex4eesoaZ05d/jQSv/zy
M6ZYOyBqYwbiogoQvTUf4auzsWNTnqrHbS9A5PocbFmbg9jt+Wrf7i152LgqB3u3ZGBHjNQz6rFp
TwXi0qpQUFaHwoo6bI6rwaI1FVgW0YDgbY0IjazDqu1liM+uwcaEZiyNaILfymr4rapGYEQjQrY3
YtH6OswNrcSSTfUI3lqPkMh6qVdg4dpadU7glkYsWFMD37AqLN3coPYt3livrlm8sU7Vud93RTXm
r66R/5b/WFMuwsStS/rk4cMfYsToqVi9uR6rNlYhWJ5/0fIShK6rxKrwKqzYUImA4CIslf3BW+T5
tlTL89RiXrvnWbKpFkvWV2LT3mpE7ijAduFjcGQl/FZXqefnOQvX1Upd7rGtXtUDNjUID6pkfx2W
bSW/G+T5qzFvRRWChPcbohsRJLz0CalU/DrHpyosED613Xet1hbeT903XO4r1/C9LN/aChffaAQH
h3QJL0tKimBluwBb9zRh0/ZqrNxQjpA1pQjfVoXNUdVYH1GJoFUlWBdRoeo8J1SOr9xQho3ye2tM
DbburMCGiBLEJFQiPqlKbTdFlmBnbDkysquQkVWF4opKvFIUjcKUdOSmlSAtUcbArlzkZZWhpKAc
hbnliI4uwr64YuRllytKjC/Gnt1FyM4ok/PkXqll2L2zCKlJpciVOikmuhhxcp2xnpJYIucUIjO9
DMUFtZgzc/7vyh7QDSCdXAICluGRgWswzrtAfWt8yMg4RaOdstQ3xoeN24fBJrEwsUxR3yEfYZ2q
6kPHJmCsgM4Y52wMGRWv9o20T4epdx6Gmydi8PBY9T3zke652JxQju/OHsDX/2nB3DXFAh7Z6npe
w/vxviYWKarO/zOV/+X/DxkZr9oyyiETpl7SFrNErS2TkmEq14y0TdPaMiYBY9yyhXIwZLR235FT
0tRnb7vqm+gCIaI1O2Ka1z6k7C3B7JnpGCQ8mGyZiL1biwQo8sQaisewUXEIXZaN+J3ForUlYcCw
WLi7JWBvQikWrSjB4BGxmGCRiPiUaiRn1cLcOkndx31eEVbtasVUrxwMGhYDG+c0bIxvwezllRg+
Wu4r5BNcidDtTZhgk6qusRM+rtrZDK95hRgkPBk7MRmLNzRg4eo6jBQ+DxkRB68FJSIoW2HtnIWB
cl8L4XXQ1hZMX1ymeD/CdB/8wmqwJLwG9o5eXdInjx07jIcftYJfQDlWb6rBpCkp0rZYTHXLwDoB
0Ok++eodj5X+tVSE9dK1FWLZJql9nn7FCN7eAhu3LHXNFMdURAqvl4YVY9iYeAyXfjcvRMB2cxPM
rDQ+Oc7IR2hUK5xnFai66eRkLBXhv1BA1sQ0QfFh9tIyhMfKfUVxIp+spH8Gb2uBt3+p4uNIs31Y
sEpAa2MDTKV/8j6ucwrVfe2l7/Ka8dLXl21phffiBISFdc030SsrStHniRkCFA1Ysa4Co6WdQ6W9
vosKEbmrDlNdMjBgaKz6fHHEzjosCCjCUI65cQkIXl2OTTtrxGrSnoffM0/JqMPsedmqbmmbjH3J
VWhuacB33+/Hzz+24IVDZcgUAHBySVZ9e+bsdFSUVGP16jzFpwmT9yE+tgyJCWWYaMHxHIegoFwU
5Vdjto/WFgfnZORkVmLL5kKMkHc2QsbNtq0EmkrYOiSr9zrXNxPlJY3wm7e4+5vofzSA9H4sTMAg
T4R4MgZLRx88LBojRAiNFqHCQcl9Q+VFmnrlYah0LNYHDY/BaMdMTYjL+aThE5PkPjkYLB1Q3UcA
YLRrNuqeroX69rTQjvRKDLbOUB1w8NAYAYV9CqgUoPAaue8YuUYBld4Wghf3GdtCwBpLQBmf2HYN
wY80eKjWFh7jd9S7EkDGjHXAuPF7kSBalPnkBPQbHC2DKEYskTz4+2Wi76Botc/bKxW7IgplQMVK
PUaAJxoRu4rh6C3nDNyL/nLehi0lIvjK8JSc33/QXkwScF4uGu4YEZo8Tv6tiGqEgwg/7ZxouMwu
wGLRqocIn7iPQi1ULJJJAqasDxR+z15WgemLStU9eY2lvMOlmxphIvx/avBeEbDxWLSuHrbyHrVz
9gp4FYs2LQDi1DUAcvz4YfVJWBfpb8GrK1Vf6y/tH20mgnd9NazsU1V9gDyPT0Ap5gYU4qlBGp/4
PAHh9QIo+9TzDR0Zi/WbC+AxPRP99HMIxgRFKjnky5hJSQKazRgnSoyRT75ijU3zL1b3INl7ZmH1
jkalAJBPIwRYlmyoh41Yw7wn901bWAqfoCoFFqybC9/J27EyLlhnexeuboD3kq4DkKrKMtx1rzsC
xSIiOPQdGK344OAqYLy5SgEFeWki43ut1J08ND71k/Pm+hdi2eoyNe64j4CRkFKjFBzW+TyR20vx
xltN8k8H1Pg+/GE94sWq4DXs7+PME0Twl8N7ehqeHBCt/mv9+gIFDrzHk/I/Lm4pSE0uV+DC9rFv
J8aXwW9+pqo/IdcFLM1BjChmfGfcN35SAkoKG7oB5HIVY2ZYrhG42LxpAkifYevECihUgDFUBsZQ
ETwU2NT6qe0Pkc410jZdWQqjRJARTGhd0FIY456jQGCoCJ7RTpnKAhlhlSKWgGgOouGNEmBavKkE
7x9txukz9XBdWohRcg2v531G2mWo+xKI+D/DZTCPFcHB/x8qWjLbw3bxvgQ4njPCJk1ZIKMcMrS2
TEhUwEUicHAfj3WWBcIVylxrwgWQFw4k/4IJExyxyC9ZWSCBi7NgNiEe7u4piIsqwvbwAljbJGKS
xT5ljewTwJg1Q55jfALm+yQhWkzzFVsqYG6VBGfPdKTn1iK7sA5OXhkYMzERs5aKNr5btFe/IphO
3IfpfjnYlNiK+aL1mgnAmgnPF66uxYodzbATPowWPnj4FmGlWCBzA8sxWvhtIcKVbhZqyRPt0pRg
myMWTAi1bwGfUfIeHafnIWR7q2jpVUoTpxAkoCzeWP0/WyBck8AFaFzxfLGvKtICebzvFASEVmHN
llo4emQpzdl7dh7WiwXit1h4YL4PllPTERReh6CNVQKw5FMSZgdWIGRHC1zFShkt/cJrTja27S7G
yk3lMBdNerx1CvzXyjWRzZgifWyMnDNtUYmyFKYtKlPXWEk/DopsxFK5N625sTIGFqyswmax+Nzk
vgRm51ma1ULA4PGJdukKUJaJZcPrx4gVTisudEcrPMQqGiXvY4r0++Ct++G16H8HEK454SJL8vPi
aVxKMXDIbGyJasK6LVWwFvA1m5SIwNBSbNtTj2lzZAwL2HrNysHW3XVYvrIU4ydLX7FNwapNVYiM
roOr9MFx0ueCwgqVBRIYXKDqHtMzkJpejaqaenz8zxZ8869atNYVITe1FH5+6UrIL1+eg6rSamzf
VohJVvsUWKQlVyAjtQJunqlihexDuIyNkoJqLA/KgdnEBPjMy0B+ThX27imBtW0SbOyTEBtTijzZ
N3sO77tP+JeHitJG+M7tBpDLUrhgjAuwuEiIqRbOl3pZAcjS5ehnsVUBiOm0PCWo1bb9b7XN/1V9
nHG/98XO1baj3PMwUqi4VIRqx+svcP+LtyH//P/bYV9nWSBcGMZ8RlzkxJWw55v1wRiIk4MrYrfl
KnBIls7ffpu0R2i3TvJbHdvLbQlSdudhd3wxEvJbkJjfiILKRpQIlVY3ISa3GWv3NAkQtAo4tGDd
3hbszmxATmUzNiftR3DUfhH4LRqJQFu5s0UJLbpXKEhXiOBYs6tF6s1K4AXr5/K38RqeG9phSxAx
HufvRRv+dwBhXisu+CQvuRDtQorNkSMfwczcDRulzWsFQAgaHbfrI6uwdns9Vm5rwqrtddpz6O0N
kuvCBDg3xLVgT1oTtgvP9yQ3IiKpSfjVrJ5LPaOcG7qrGWuiW/6LB6Fy3gq5R0iUxq+VAt4EkLXR
rcrF18YnnY9Gfp6Pl8b3oe674yA8/eP/ZwDhoj+Obebg4uLIC01uKCsrgZNbAHbGtiqAIGgYt3Rh
bdurbbfr23PH68QqrsOOhAbEJ9cjLrlOgUdiau25bVYdcvJrkZVTi8z8ajyfvgslaZkoyCxHSW4Z
ivNKFXiUFVWhsqQaRYXVKBagKMyrUlScr/3mvoLc/97SrVWUx61G7Y8RcMqKG7oB5HKV9tPbmCHX
mIOqY1m+PARPTtiCcdMLNWEvWqrRkqAQpiVA1xDdTNzHLevKQtGFNuMVxjiFukY0LXWNbMfK8Qkz
87AsshStBwrbgGOMS7v7Uth7tLvvNON9M5WbrK0tbqJZO+SI5VMAsxnFyqVGS8NooahrnLPUPrq4
OgtAjCtqqenZ29urVeDnK/Z2bogKz1IAES0aV+iyHESuz1egQcBYvzIXq0NyEL+zSJ0TtakAIYE5
2L05G3v3FWNvRiNWbi7DjtjKNgBZv7Ma84LKERzZpGIgoRH1CFxXgt0pNYhIOSDCklpwpYp/ULCt
FLCghj0zoFwFcVeKRRK2tREzxYKZv7KmTcj5hdWK9VEjvw9gxa5Doj03YMaSMixeX68J4a3NmLOs
UlkijJF0BoC0T+XB9CPUoM9Xzpw5iVFjnbEuolFItOJVFZjnX4TQdVUKPFaFV2N+QCEWhZW3AQhd
UrPE+lge0aSEfsCmOviGlGOj8G+HWIQ799UjYF2F4pMRIBeIxTZ7eRlCtjWq+rItTZglfGMsI1TA
N0x4x+en24+AsiVe+LKlXlkWjCWRT8vFkpmzvFr+v05A65DQQcVnWoyBW5rUOUvDG9X78F8j53QS
gBhTt9CSY8qZCyWArKmpgpWdP3bECIAIIASvKsOS4BJsjqpVYEE3lv+yIqwRa4P1LTtqERBSgqCV
Zdiysw47BUDCI8WqW12MmIRqJKfXIjq+GmGri+R+FQpAcvJq0dBah3eaUlCamYXCrHIkxhZh08Zc
ZKWXqxhIUV4lIiKKsHtnsQINAsOe3dKOTYUqtkGwoGUSvlEUrvhKAYd6AYpqbI0U631rkbJIeE58
bCk2bixAulgw5SXdAHLZC1MrMA9O+2RzzDXDdCCkKVPs0WfgOhHG+cpNpeIMQkoIe+QodxDjDIxv
KDfS5GQVc6CLSgl0EfL05dM3qVxLIrjpAmOgly6okW65iMmpxE8/H8D3Z2UwRZRiuEOWup7n0C1F
kOH9VXxD/o//q+IZvK9JDEbapSugGTI2Dr0f8cE9vazR12y5io3wfxkTGS2ANNolSwU82T4Tq5RO
D6Kzo9Kqa+8yYA4gpijhbJd+/c3g6pqIRAEMD/cUPDU0Bqbj47FzSwFWBQsvdT4tWZiJ2KgiWIhJ
/9SQWAGlOOyKK4FPQIHyK9MvvUcGUVxyNcZMSMCAITFwnJGn3FPWThlSj4a5TRLWRTdjGoPdI+LU
O5sRUIagiAblmuJ9LORcXuM8XQvi0m+/UISYr4DHIJMo3P+gCwaYuMHbPxaT7bPUfVWgN6JZuV3o
i6bPf7YAiYqBdFIQnbmjmF24owVCQGGKjX374tDzwUmYvaAEKwS4xk1MVM9jZZ+mLBC36TkqTsHn
WbSiSqgUJmMS1D4Gwgl+k6amC2+jMdE6CVu2F2HB0gLpT3Gqr9LNRTce3VUDh0Zjilu2AhDGfQYO
i1YTDBZvEFAKrVQBZ/LBe0ExNgi/J9mmqvvStbdcQN19XgmeeGqN8NIOYybPFXARpWdCsrqvvXeu
AisG3AdInW6tgPDmTg2ip6enK0ukvVXMNUX0QHB8h4WF4JHHZgpA1ClQGD46TgWhZ87Lw2YBC0s7
7XkmT0lRoDJnfr56XgbSA0JLsW5rtXIXPiV9cNpsUY7S6uA+LUPV6caKia/Aoacb8ONP+/HLz/vx
6osVSI0vgdWURPQfHKNcVqWFVQgMzFbvcPS4eOwWqztaQH2MWYIaIwv8s5AvVoW7Zxp6PbIIjz5m
A/8FSxEcnCnt0CboEDTSUsox0VJri+e0NGWB+HUDyOUrzB3EXD3M9dO+UINm6nN2vkkTLfFo3zV6
ED1FD4jHqFlMtBL48hQYjI1XAMJZUoP0wDUtDwr3QcYg+qRkZUkMHhXXFuwe5ZqDyv3nguiRomUM
sclQ1/M+w8brQXQRBtp9Y7Uguk3auYC+ZSpMPQrx4MPe8mZuEbpd6K/o1WcWhpjs04LoAni0gozX
MC5i2olBdObkoSVnTPRmLEzgyCR8ycmJ6PP4GEy0iEOCWBuTpaP3VcHuGGxem4clC7QgOmmGdP7d
kYUYNpKBRhmI46MRKaDjPCMLfQdoQdtNW0uxfU+5GtwMNlrI8wWJRm46KUkFOAmuK3c0wkkEpjEg
7upTgCXra9Xg7z94L0aJwArb3iTgkK7OIX/ps58ZUIG/3jJS8dBguBXXXd9Tjq9VYDZibIKyQjhz
yBhE58ymzgIQJsdjn2RW3I6FudP4waNt2yJw970TBCjyEbKmSvVBBl/HyjtdsbEaNg5piicExXmB
ZfBdWtg22cBa+iSnzY6WZ2d9uPTFDREF8JqVpYKv5JOHb7GyEjjZgPVxosTQehtvlar4Rj75hVVh
+qISFZzvJ/dx8M7Bmp3aZAPelyATEN4Ea5cEXH1Nb71f3oLb7xok4LFL2hOj4iKc7cVYkpH//ms7
L4hOwcm8Ux2BmJYec81xfC9etBD3PTANy1dWY2FgUVuA3MkjA+sjqjFaxh/3caYT6y5eWeo4ad7i
QgStLVegS95Z2ydjn1i+k6wT24LdW6PK8NobDKIfVOP7w/fqkLCnSClLDJozMJ6TWYHpM9NUMLy/
CH/GPCLFGiHAcB9jIVli2Ywau0x4eJtOt+CRPvYCOvHqPoFizTMOwkkRDLxPtEzsDqJfzsJEflZW
ViohGeMfF8oEShfWYyM3YNy0AjUVlpaAAgL3HC0gLhopA9MqKD0tT7mUWKf2TzfRGNHahssAYVDc
6H4iqPAcWjSjBZhmhhah5YU6vP9hFewWyP8IyDDQru4r91PBebE4WOfsr7GiufH/2Y4Rk9MwzrsE
w6fuwbXXEzgsheKERuOWuwbK8Sy5V5oCIRJBkOCh3FqdBCDkIXlJ4UdeXihoaWHhjJClqUgW7Wp1
SK5YFsnw9clQs7J2RxTC0yMVLi7J2LohH4kCMkv8M2En5wQtSVFB9PW7quHomYF5/jnIKapDXmkD
Zi3Mg6VDuhJoq3fvh48IzCkuaVgcVojNSXQtNYgQy4K18H7xhnqs2MVAb5ESXnRbMYi+ULT0ycJf
lzmi0e96DvbT1uOKK/4iPFwsFC10HwaazISNSxG85pcqtwsD8pZiXdrKewgI5zqR/x1AOBGB2WuZ
dJJ8vFDa7k8+OS2C2w5Bq2uUxTHNJw8Wovn7+Bdiw9Y6LA4qVcFgp2k5CNnSgJDN1ZgqfZUg6xdW
jZAdrWKZlUhd+CaWx/Y9Yj1sq8JUz0w1vZfWBy0DzlqbJGA0L7hCC4gHV6rZbk4z8lXMaLlYc7bu
2WryAYGZMZBZct+J9pkCwjVYuetpsYqddIVmq9Aq9OhxPcystggvCzA3pErFP+i+mihjwc2nUCyd
zgmi85sYdF1xnDOgfqHV2PV11WKdzcPW3c3YuLUGbtOyYOeUhjABBrqs/AQkOKttnn+Bin2sWF8B
O+d0uAiv1gmgbIuth8986cvOqVgXXqLiH6s3FKu63+JcZGTVoLS8Dh8cbsK/DpehviwfeellCA3O
UlN5N0pfryqrRmx0Mdy8UuHrlylgUYFsAZX5C7Lg6Z2BuJhqZGcU45FH+ggPB+vj2wO33XY3vKel
YJZPNpITy1AoVgqBxMk1Rbm+OI2324V1mQqzYtJ1RZcLs1he6CNL/xVEn9YxgJ2v1/PPX/f+72vG
dQh2cy2IiWsuikqytBjItEu4r2wJaoOtN2DA5FDc2Wu0vJXrhd5Wb8dgOIgrr74H9z5miZGiBfLc
jvfprBgIM5gytTqzrjKI3tEK+VUQfbseRBcQYeyDM7JUEH23to9B9SQ9sM5jibtLkLrnXBA9qaAJ
hVVNegykEbF5LVi7p1mElRZEX7+3BXuyGpFbpQfRd+zXg76tSvCv0IPoKgiuB9HX7jmApZtr4Llg
K9x8N4uW3Ev495TOR9IG3HJHT4y3nS+Cs0lda7yfFhze3ykxEH4il5mfjRl2L/T5VAbRx090w8bt
WhCdoLEuQtsag+gbIquxNupcEF09s95eFUTf1azWyexJbxdET2ZQvLlt4gCBJmxPuyC6zrcwbndo
QfTQKC34bQyir489hAWrC+HutwVTPIJx1VUEYr92vLTA/b2fgvOcTSoe0v6+3IbuONApMRBmYubk
GOOnni80IYFBdGd3YxC9XgXLCRzGIDrrxv3GIDqJdS2IXo+EFKHU+l8F0ZPT65CafS6InpFXjefT
dqE4LVPFQEryylBaUIbqMj2IXlqN4qIasRq0wDnjGaVFtdi5PRrr1qyFk6Or8O5KoSKdjydx5ZU9
MXrUOOzaESvn1mnBc7meAXVuu4Pof4ISsHQZnhy3WQXRqcFzOi0tCGNAfJRjhrJCaJ2oYLdopLQS
lEVCgS3ncSouXV50XykrhSvQ5RpuOSXX2jcfUamVePHlUkycRWAowhinXIyylePuehDdLQcjbcRi
ceL/EAzy0WuAB666eoq8jTmi2d0rW7pd4oU+EVonNF1oN+7rY6nOV5MARNMeaZOmLCPTLlwHQgCx
sXbBljWZCiAYIJ8/LwOrQ3NVTCRuRxGWLclS8Y/o7UVIFK2Y60P85mYiYm2mskCiUhqwKKQQ6yNK
UFTegOKqRoSEl8PLrxCBmxpUEH3phhr4BORj895KRKQcFGF5CN4LKzDNnwHkZjmnRTTfarj6FKtg
+upd+xG4oQKPPWUpVsd04aMdDD0eEL6NFXpW6LTQVF2D9oGNe4gKqgdublSuq+mLypR7pzMA5FLL
0aMfYfhIR6zeVK+C6IuWl8JzVi6WrShX4MFg+nSfHMwNEItqa6NQrdLyub6D1hKBc+GaarGmCrFi
UwWiBKi3xdZh7rJieC0sVnyiQJ8TVCnXFAhv65SwXxreIvUyzFlWrQNHk5ra6+EnVtnWJkQmHsKc
wETced8Y4ZWv8HOIbB/X+XdM6C2hYUJZuP7GSZi9PFnue0AFz13mFGJucFWnAcilW8+lmGS1ANsF
JCN21io3FuMcG7dWK6AIXVuBGXNzEbJGs0jCt0n/WlCg1oxsiqpVs7BWrC3F/MV52Cl9jsARtbsS
C8T6WLOpBNl5tcgrqMWzLzbg8HNZqMzNQUlONfbsLMGy5XlqPQfBg26s4FD5341F+myqevjOC8Kt
t5gJv+YLWBiVmlB9fOcK8VgG+vYdL1ZLsVxTowLqgYE5SIgr7bZA/hQAErAMDz+xEqae+QoYtBhC
DEYJiBA0uChQi1Uk6qvMk7RYxYhYjBGAUMHu4do1yq3FeMYYLUA+ZGyCioFkVVYrH+lPPx/Eqt1l
eGjYQtGCzXD/A84YZh4Psxml6v79BmzCgGGRAkT56D2QGkkvvTPxjSwVeljoDn3QsnP9U2kqN940
RIAuRUApSwXdVdBfrVbv2oWEo8c6wMYmVgGG/dQkFe9g0HLbxnwEL81WAUP6gP3mZiB6WxHGmsWr
GIiFRQyiYkrg7ZerxTdMYmUwl6tAuopnyH24hiBUNGvzKanqHK7zCI4sx4gJs3Hr7abo9bCPCPsK
hGw7AJOxsXi83waYWcchKLIWjz5pInyy1fn4g9B4nZf3CNF/v1A/lovefSzUamkGoxl/YZxhxuIy
BGyq7TIA4ULCB3pZwFuEbpiABf3zjIGYWyarlekObpmqTt/8gpAKLAguUf54xkG4+p6pV8ZJXyTf
uMYhfFuhCM1c7XmECIoE1+HST3mOxdRMzAvLQJ9+9rj1NjP0HbgSARtb4BtaK/8ThSf6rYf73Hws
25iJm2+5W/gUqfOLgEG3y4M6H9lfU/VjPhg9MQDBWw+ogDvby4wBSzY0dflCwvse8BI+1qjZVXyf
bIvnzGwFFlzz0U8t+EuUejW8Z+eo+A3PWyiAu3JzpeI/+5yze7qyQOydUlUMxGRsHHbtLccLLzZC
W0h4EP94U8B42Ro88OAE3HqHNSxtdqn1Gv6LctCnb4T89ybsiCrFsqVhYr1xLL+g8ytJ6CEh8vcx
oX5Cb6pjPa4YgaCgaCQnVmI0x4z8t71jslgl3TGQPwWAPPT4ChVE58I/I4DQElGrv2WQDhqqzahS
QXTj6m8RcmM4ZdY+ve0aNaOKs6VGxatrONNqlNyjqKFGD6K/hCVhYcJdB6E6oUW49c4heGTYXNx+
j4loIbfh6mv64s5eY3DFlY/K8WuFGDh/XShE71S0SFYLOQpVCM3FfT3tBDyyVXxGA7NobaHjHwAg
kwUM6J6ynqKt1qWQ41ReLizkqnOuRJ8zKx17IwsxUgZgX9lnPjEG20VLdp+Tjb4DtBXLW6LKsCOm
QgsgD9oLK+E1tWAuGuQAN52YjkEmTjpfaoWs8fiAKRhvs1iEXB/h332yHSzgMU4XcLcKrRf6QEis
EMMTQv5Cs4SWC5UImQvABWDppha1oFCt9haB672wtFNnYV0KgPR80EKsjgJlbXAmGNtiNikJq8Jr
YOucoQQ/eeO3vFyoWK3452pvzqhi3jBONlDBbtN4bBIAmTkvW11DkGH6FubOGjqKylE8xlnE494H
xutCLBfX/GUITMymY5jpdFxzzZ3Cy4fRs/co3N+LQHyXrsBQQ35RyETvl+HqHRgMCeo+V101FBNt
94q106JSprBt7AuL1jV2OYDc09MTIaurxZIrVjOY2C9dvbOUFWJqrvVTAi3dgh4zshWvCbbzlxYh
dGOF4r8S2s6p2JdSCyv7ZKUcMaC9Y1cZXn7FCCAvor52D268wVx4UCW0CbffMQjTvHwxcJCF8PFW
sdoew5AhprjlFvLsJj2m+YxQotBAFds0GDYrV6DBUCa0AjfcbIqQ0BzsE2vGZIzWFivbpG4A+bMA
yONjNqkYCKfPmlimKveTqb4+g/mtOHWX02QZVyCosE6AMbqwOGNKWR964J2zodQ1sh3jmQenRYXI
qapFYck23Hn/E8rnzs5lMAQL0TV1ta693aIPyCd0zW6jHuRlZ/PSBV24rrEsx/U334+HB86EiU2y
5sLyytPaYpGiu9y6EkB+hpWlM9atyFBxji3r8mTgpGL5kiwVMI/ZXqQsj9kz01RAnTERTu318kzF
+rB05cKKjK/DzPk5CFpZiILSBhRVNGJxWBEcpuVg8bo65cJaLILAaVoqbBz9cePN/XWBtVZomh7M
vUbXhqndjdG1umG662+Vfmy9DsAcuL8IiQXTZ6ho7WGYs6xK+fwDNjbAQUDE1adQTetdtLFrXVhD
hjtgxYY65cKat6gIU8XqoCuLLqygVZVw9szENN8ChEU2YoVYWe6+xZjqnSsCug4rdjVjflglnKbn
YPmaUuyOKUZkdA28fPPgPDtfrRbnosMZSyoxySFWgIK8mKQLsQ2KHwbDzXp/vE/nmYneR2nJZer8
5v5YXdidFXoXV171gCgFlrBwilIzrshL37BqNRmBllxo1AF4LupaF5bZxPmioLSoabqz/fLhLiDB
tCVcRMgV6eQlrRO1LmRLlbJOOM03fHstouLrERBUCO9ZmYiMKlfxj4jt5Zgm9aCVBSr+UVhchzfe
bsFzDXtgYT5Yn5yxQ2iN0CNC1wn11JWYATr11hWYVJ3fBI5tSiHUxncqbrvtTkya5IaF/vuQmc61
I9VYL8oYc2btkTFV0e3C+jPEQJajn+W5IPq46fmK2gLiev1XgXHjOd7nzjFtd42psa6uy8NoryI8
PGKxbj2MELpC+ZC1gddDyEU3Zakt71VxDYNhlNAJvTOFoEePgbjhtpG49qbRosnMxXU3mWKwTTjG
zyqT/y84T1vyuzQXFmMgzg6uiNOD6AyQp0YLxZwLoqfFaHVjEF0djy5F6t5zQfTUkmYU1zS3BdHj
C1qxIaZFBdFX7pDf0S0wn+Ih/Jiha8ME4CChvnoQcpdQiu6XT1IanGZxGIO8pmLljUPPh4bj+pts
5fdsPPyEJZZtqcSqPc8gbOf+tlXTK+Q3qbOC6JdajEH0cD2IvnFbvaL2QXRmjV2/o6EtiM52su1a
8L8Ja4VPW1P2IzarGTv3FiM6tRFRaS0I292iTxI4gMCICvR6zEIXWgYdJNhP79Snku5X/nlN0JGn
brpSQz4eUZbdDTdNwv29h+Ev13qL5eKCkebTsXL3QaFDbSvQw3ZobdPa17UxkF8H0evEqm1QZAyi
R0U3tJExiG48h0H0qIR6JKY1ICmjAamZWhCd27SseqTl1Ksgel5BI9aER+GWm8bpPDLoWw994stw
3R1loVsX+/R45kGdl1kw9OiF++4bi95i6V17rQ9uvXUyQoNXoLqiGeUltW0r0cuKGTyvQWl3EP3P
YoEsFwskXAEIA8/U3jnF1rjynAF15sPimg9jgJz1Ecx2661NnaXrS9P6c5QlwLgIYxCjHXMwxisf
bkvzxCSeLFyNELLRNWF7XXu7UReAqfqgXaQP6Nu1jmU4JYAxBY+aeMJkSgIGjtmCJ0cuxEjnGIx1
0xY20mJisF5ZQ/Kb+9SU4i7OxstpvGtC0hV4MEDOabsB/pkKLLgyfe7sdMyYnqYWFjJOwqy87u6p
WB2chhixQLbE1mLa3GwsDclHfkkDCsobsSC4EFM9aYHIIN1zALOXJOHa68x1TXmq7sJy1wcmASRf
B+dHdfCYolsh/xB6CbfcYQIXn41wnpWL0eZrYe+9ViyMGvgEVavEgDOXlCshzLUg1OgZC+Fahs6Y
xnuphbmwBg2dirD1tcoC8VlYCHuXDCwMLMF6AZHAFeVwdMuA19x8ZYGERdQqS4k5wLhQklOZuQrd
wSsbASuLsSuuFBF7a+Dhk6PWzSyL0ABkksMK3UW6QMUstH4XqO+7X6hVt97MdLfpAJ2fnysh+Gi/
MfD2jxPrIh2jJgTDc2GUWsTIRZic/su1JgQRrma3EYvYe2GJgFvXB9HHjvdVFsgmsSgYMOdU3tXh
lQoslgQVCy8zlXuLda5Id5+ehelzcrFhW41YIA3wD9SSUW7eVqYskPDIMnhOz8AysY6zc+tRKYqO
u4en3t+m6p4FJ90KMU4yqNRjbuTtMv33Fp2X8+DiPBVr1yTB1X0vHJ2WIHp3LDLTquG3IEstNExP
LVcgsnpVHmbMysCOqG4L5E8VAzH1yFfAYcys2z4GorLmmiZoMRCzfW0xEJU2xD7jXNbcyXoMZPQ+
DBm+D08OXIXbHxiCu+69B3fcfqPuDqjXtY5ndK35Cd2cHam7qTTu9+hhLYKyD66/YQR69/NWMRqm
dx88LA7DxmkuK8Y5BuuLD1UKFuNCwqF6DKSLAYQxkEmTtRiIlU2i8hOTfxHr8rHUP0vFP7iPqd73
bGWq6jg8OSgGE8xjZPCWwG12Np5si4GUYkc0YyAJKuYxeOQSPPhIX1x3w63Cmxt0f/HHOr+26QP1
UZ2ndG3F6Mf+KQDcG9ddPxg33Dgctp6bBCzq1Or2AUPiYO8pAnVLs0r2p2IG8n65TkLFQPQssyoG
srm2y2MgHjPyEbK2Svna1YK/iYlYubEatk4Zym+vUowzBrKsSD1P/4F7BQS1GMg4BocHMmtuPCJ3
FmGOH4PDzDy7E4NGeuPOe3uJxXCT8PIm3R1ltNBc2vXJETo/X9ePVYrFdrvwcgTuuNsUc4Iy4Tij
SM+OnIDZgVXwDa1ui1txXcqyLY0qbsU69y9a17XZeCsZA7nfA8F6DITxDcYQuGCQMQ+uMicvmemY
dffp2VrWYjlvfkARQjdoMRAu5rNzSsU+sUCs7OR5hJdPDQnHWNPJ6NWrJ+6862bh5c26BwH65Jeh
Qk/qMbgxuqvq5zYX9F+u7YVrrx+JgYOmIlkUKBv7FJEZMdKWJKQlV2HJkhzVVi4cDA7JRUKctpKe
iw8tZXx1x0D+LADSV5+FJVaFCkJzZTezm/L7GqM6zMKaqM/CGqmtGFerv42zsJg+RAT7wFFRuPve
ybjyylv0WMfT0rkm4MEHr5Qtzdf3dD/yMN1N4K7O0ayTNUq77nGFGR7ru0Q6aRRG2GZhtHsuBo2K
x0ARFENM96nYyjCxclgfyO9/OGYpGihChfuGyrEx3kXoM7jrAGSsAIitXaxa2+HopAUaR46Nx/ZN
BcraGKDPwlrgq83CMjNPkAESA2vrWOyILcGMhflqwAwbGYeoveVildTINWvw11sH6BpxoQp2X3/9
/bjnnrt1F8C7Qkt0zS5HiJMU0vQpzmHK5ULg6DtgowDwXixY3aByZzGdBYXE1Gn5CkCYypwCl5ll
mYKc005VanM5b4ZYJV35PRACyIO9LTF9bpFKZTJqnCbkJlqnYM3mGjh5aCnUGQRfGFopVKLSlDwl
+7igMIgp7G1T1YQEs0n7sGNvkWjR+XiozwIB4J66MDukgPeOO67CTTdN1PskrbQJuhuQll2x7r4K
0aeXLsbd902U+27FBGnLWrF0PHzyFYBwVfv80AosWVujZluxfXZihXAdzuSp6TqYJWD55kbMWhrf
pQDyQG9vrFgvlltYqZbCXqUlycVmsUgmWiWrtk2wSBILpUYslDx1fJC8dy7YXL1FS/nOWVhu3hlI
Tq+Hg2sS7u3phKuuvlW3djm+vXHffQZcfXWozssDusVWqbuzXtG9Dht0a24qHn5stgBTFPzmZyMv
qxJTZcw8MYApUhIEQMoQEpKj2sIxs2ZNnoAMrakEBTJcpFhaWC8AsqgbQP5oF9aTZvo6EK9cNatK
fRjKS1vwp9KVMK0JA+T6OhBVd8rB+Jmlcl2RtvaCQXUvLfZwxwOjdBcUfZ/f6hpHAfr2NeCKKwgq
E/WA2jbdnTVaua5uv/0aBAcbRPMw4K9/vRL9RwbDUiwaK59cWEvHthDTe6JLGixnZsN6Xh6sZueo
+mTPDFjN5Tm56vdE1zR1zGpeIfoO77oYyBRrZ7Wmg/GOHZsLsHhBBtavyEHiriLE7yhESGAWli3O
ROz2QuXCYoqTRX5ijofnYF96NfZktGDpymIZyGWoqN2PpIwC3HnPgzp4zGnTkq+5ZhaefNKgT8U1
0wPmpXqA110N1H79DNi82QAnJwNuuf1eOM9OxPxVlVixuwGhO+sxN6QYMwIKELStFiv2NGDxxkp4
++fBf10FVu5tQLAIl5lLCwRsihG2qx4BEWUywLsuiG4y0lHAokG5sAJCytRHpJZL+xn/4DdBZvnm
wTewRMVAVm6rU/m6vBaUIijyANbGPoOwyHrMW1aMyD2VyMqrw5KgzaLQ3KRrw5k6L3+SPveYKDbG
+MdTep+t1SduBKqtpaUBEREGDB1iEGt9HOaIxROytQbh8U1YLbyZFVgIv9BSrI1uxKq9TfBdUQ7v
RUXSljqsiW5GoFhvXv6FWLCmEmti9mPmstiuc2GVlcLMwhfhu+qwblsF5i3NxXQR2EzauXFHBQJX
FcFrbqb0uyJsiKrAqi1lmCnH5wXkYcPOWmxPaEDQaukHYkFv2VGCfWkNmGTppU8yoKV2WOfly3jo
oStx881Xqdl8WmzOV493PKaUmeuuuw1z5xoEDAy4914DzCfMwIrQTCREZyAnNQt7dqQjYEkitm5O
RVZKFlITMhEanCTniEWyL1Pti9iUKjIrETG70lGQWYA5M+agpKQbQP7YILrFbwfR26dQN5tZBBPH
PXhs1FwMmBSmzc7yLlSfq31omI9YD8N0kLDRXSmvqN9XXXW1PhvoG+Wr79HjOgGUq6TTXYFbbjFg
6lQDXnrJgFdfNWDkSA7Yx3H63UR8fSobX53IxNcndZLfX+lk3He++tef5MB/ni2OHO0aAHFycEHM
1jQBixwBkVwVHE/Zk6vqCTtzkcL6Xn4LRNuXLMdSowuwOnA1PKf7Yk1UPFLLWlBS34KkrEJY2Trr
4GqnTxGl+69J+PawCEPjHPpvlAXSo8c1+MtfrhTgNeC227RB+sYbBjQ1GURI9sAUZ1cU1LUiu6JB
iCvZm5Bb3YTsyka1L0e2eVLP0evcz+M8L6eyCUn55XDz8OyyILrZRDesF3BYLcKXcY8NAhLrZMv6
2shahIu2vG5HPcK2NmGFHAvbdUBArwkuczfCzjsIYQLSu7P3I720Ges37UKfx8boYOuku0r/pvri
FVdcJ7zjsU+FzihXao8eV+LGG69SffKBBwzIzzfgzTcN2LNHNOxrrkHQuvUobDyItIpmpJU1IaOi
CamlTUgsakRiYSOSipuQXNIsv5tUnVtVL2pCSkkLVkR0LYDYOvphs4DD+ogiUU6KFW2ILMK6LYXY
uE2rh8uWde7fHFWGletT4eLlLxbJcmzflY09ccXYuScfc31DhTdD9fHN6fgrhV5TYHHllQYddL9W
fbNHjzuEvwSVK1WfNDEx4NlnDXj9dQNmzDDgrjvuQsLunSjNyUVRZjaKs7JRlqNtWS/KzJJj2Yq0
ejZK2p1TkV+I+XN8UFxS0g0gf6QL67ERG7Qgulu2clWpDzQZc2FZpmKo6T5lZXAm1mixPPrL+dfd
NEJpFVdcaY/5AX547rVG9B8+DuPHU2Ddo3euYdKJegpw3IJbbzWgV68bdNMWuvvlajVIH3/cgHvu
MSgLJSXFgJgYA0aNMmDECANaG7YB3xYBn2XIthz4qRH4pkSrf1UA/NgAfF8FfJ6l0ffV2j4e+zoH
Sxd0DYBwGu/ESY4IDkxGenwhVoVmwdJ6H2bPTkXS3gLs3ZYHZ5ck2E1NwrZNAhwxhVjsn43hJr64
/vpJaiD+9RZTlFftwvMvF8j+hxQvr7pqkBybrHIEXXnlXTIgbxA+EiSo1X2h8zJc+GzA/fcb8Oij
5L9Bac3FxQaEhGh8HD/+Lrz2ZiUOPN8gVI+TZ1rw2ReteP7VBjQfqsff32vCv79qxTsfNKFJ6s/+
rQGfftaK05+04NCLDahuLIOXd9cACIPo/QfYInR9GcJFmHnNyYLZ5CTM9c/Bll3lCAgtUFl2HcTa
XLWtUqgcdp7Z6P2YnfDHSwVpn+hvhrfeK0d0YgSGDb8RgwYZ9DUHo1Vc4+qrKdyuxhNPkMfGGMgv
SjBedZXGR/L5jjsM8Pc3iJZrgJub1i+nTx+Hkx/vxzMvN+JF6fefft6i+Nn6dANaDjbgyPEW2deK
v73WhIaWBrz+VhM++7IVHxxuxsFnmhG3L0Zl0O2Kwg9KDTWZjfCttVgTXgZ75xRMtk5UAfAt2ysx
2zdbffhp5txsbJZ68MoSTLLajbvvoRchAFf0mAFXt6k4fqIBM2e4w2zclejZ8ybdHTVcWcHXXHOb
9GGD4qU2FRo6GN/Rtr9nT4127DAgM9MAMzMDhg83YGfUUrzzci1aigvx9ssV+OKzRnz49yrsLyvE
8w0l+Ofpenx8sh7P1RfjQGkRDv+jWp3z1gvleLa6AiH+fijqdmH9sQCiPmnrbszGqwWhuZ7CmI1X
fdJ2bIJyaw0fn4J777PSp9pqOWue6j8eL7wYC9sp16O01IA+fTgob1RT+CjYbrrJgAkTDBg71iDa
yzAlLG+77RHlXnnsMYMIWQPCww2iqRgUoHDg+i+SwTr6Wvz9nRzghxr88nmuaPn78QsO4ZefW/DL
Z1n45WytVsdB/PJVEX75d6FeF/qhDvh3DgLmdxWAaEH0iRP3IjuuEBaW+9oyxu7clIPlizNUfIMr
z31mCKjszMfQEdG4QWlzr+i8LMf8+S5ISg7BwoUG7N2rCTDN3Xe10vB69zZg3DhNm7vqKhe1Qr9P
n5vh6KjxjW6rOXMMYo1olsjgwQa5pwF29v3xww+tOHOyCZ+cMn6C9AC+EdA4+n4Dfvppv6r/9PN+
HPuwEV9+0dJ2zr8+acZbr5aLAPHEBb5b1OkxkPsfsID7zBys2lR6LhuveYJYIWWY4qStMidv5wcV
Y2FwIR7vt0b4Y6qvx4CaCZSTEwJfXxvs26f1MVq6Gi97CIBovBkzhgrMDQImgUIuGD36CkyerCkz
cXEGqRtw7bXae5gyRQORlSsJpM/inXebcOafrW18+vt7zXj1rXO8JWgceqERX/9nf9u+V99qRXxy
1wGI+qTtfR4IWV2GxcvzpU9qCwmdPdKxaVuZCp6Tl9qCyzK4T89Bz14z9enLmiS8805bHDi4A1ZW
vVBXZ8CwYQZcd921uhtLG9/kE8f33Xf3Vm7p664bovhFHltba0ohAYTnUln08aFMuAK19dvxzZf7
8WJDEf7zDfvcIfws4/xvLcU4+eG5LN5H36nGqwdKpP9pn8799j8teKW5HCuW+HYDyOUsF/t0qBFA
Hu6/SvseiF26lgpkRLvvgYzV0qyr74FMo0WSjgd7u+ipRX5Us6lMx5mjrn6XdKKbsH69QTQSg/LB
m5pqg4+dJjBQ60iaQDQgNNSAl182IC3NIELXgJoaA/r3N4ilcjVGDL8Hkyf2FmskFCpN9NclGmD8
2KiBxdk6/PKvTPzynwqtTkD5Ik8oX363yr4D+OXbCgGQ7E4DEGY75SdZLwYg/Ca6h3scchPzMX1a
sgr+mZnHI2FXLjatyVSziRjkD1mWjvS4fFjb7MPNt47Sp97+qIK3wSHTsGPnMjg4GJS/mKDBwTlg
gEEJPWrGK1ZoVgV5S8rI0HjJ+JGvr1a/804ZqHf/FaZj7peBPwjPPR8vz/A0jn3UiBNHmhRg/KKD
w0fvNEg/0QTht/9pxUfvNuCfZ5rVYCWgnDrehDdf6TwAYRbeC2WHNgJIr4es4L+0ABHb+YlV7dsS
dgIc2/eUYYZPppqQwBlWKzaWCpVgyMhIXHn1cD2A+x2u+css5OWvhpeXFZYv1ywH9kP2NVpqBFhz
cwMWLzZqzgYVV2pp0dwsdnYagAQFibAULfrRh+/GhPH3YebMyTh9ugzffn8A777XiKPHmxXf+D2M
t//RhDfebML3ZzXenv64BS+JlUJLTvH2u/146++tyMiK7TQA4YelLvZJ28qKMjz0qBeithZh4/ps
mKjvgcRg4YJ0xO/NF4s4UfVTG7tExEk9YEk2Hn3CX19oSlfUcelzk2V8R2HsmIcQGalZuIwbTZpE
hVDjK5UWd3fN5UdeengY8OKLBrGAtP5bX29QwHz99Veg/xP3wXTUfVi/bjZ++LEV/zpajbdb8vDv
T+rVeP/u6ya8eyAfJ/9eLmByQPrtARx/oxTvHSzAd/9pVud8+XEdPnq6BJuWz0NhN4BcHuBYtWqV
+vIbPyF6ISBhDORJc/2LhFzJ7ZCpZjO1feGPK8/tM7REiWrleT6G2STgzt6TcfV1k3D3vSNhbvak
DMY78MgjVyghR024stKgOtsjjxgwZIgGHNwSVAYO1ATdCy9qWjYHsIuLdK4bpOM5D8Ppd2Lx+eFE
AQ6xKr4s0MCC9HmOZmV8lq3vE1D5d4EGHsZz+JvXCODgq86xQI4ePaq+BcJMsrGxsef9fCgBxsnB
GZn7slCRW4SC9ALs2JKN1Lg8lOcWoiynEHE7c7B3ew5KswrVvpzkIqwMisTAJ0fjjtst0H/ACLG6
nhTN7GbcdZcGHhx0Bw8aRHBprj4SBSB5yWO09uib52D19dNiR+MnaAN792ZfHHunDG++WSkg0ILj
Ah4fCliQjh9uxMmjjQosWD8sVsip44048r5W534e53n83VkWyKFDh9THpNgv+Y2V85XDhz/CZEtH
pGRVIzmzArvjirEmPA8xiaWyrxwJaWVYvzkPEXtKkJBdjX05ldgaXwPPWctwf8+xuOseK/R7arAA
em+xMK5TAo5uqWXLDGhs1KwOasbkI/k3dKjGy6ee0vrt/gOaNk0Qp4V8373XorVsG05+VIpPTzXg
35+24OixBrzzXhP+9kYT3v+wGW/8vREvvtKEF/8mYPt3EYDvNysXFve98rpWpyvrlddbkZUT9z8D
CPsgv51CPvr4+Jz3+yospWWl8HT2RV5KJTISirF9Ux7C1+YiNbZY+mox4ncWYt2KHMTKlvVU4fXm
9TmwMHfB7beNx4MPjMfQAX0x3uxeUWKuFsvCoNzRdDVTUSF/6Iri+Cb/2P9ItrYaEDN+9KjweIb0
39sEeIYP6o2DBXF4qSIFx14uxcnXy/DBwXy815qHD58uxInXS/HRc4VSz8f7AiLHXinBsb+V4P39
+Wrf4eeLcOK1Unx4qADHnitFRLAvCou6AaTTS15enmj9gfjqq68QEhKiPi5zvhK4LAh9J0dimEsh
hrvmwcavAFbzCqSeh6HOeRg/Ix9T/QsxykOr89vmU/2LMHFWLoY5RKPfuABYWlytNIxduzTNhB2K
PmP6OQkQhw5ps4GmT9eC5DzvzjuvgpXljTAdfRe8XEbBxX4kNq/1xJl3YkTw56p4hrI6SEZwILWB
xwXqBBW1L6PTACQsLAzJycn44osvFIjwuyDnK97urmguzsLBykI8XVWIl5uK8VxtkaqTXqgvxkuN
xTjEekURnq0uwqut5WgpTEZe1l7MmOeNWTLQnn5asz5o8js7G5CdrWnQ5eWagKPw46wgBiOnTSNg
XydWxk0wN30M3q6T4OE0USycYHz/cS3+IxbGBwIK7/+jvg0sjABx+L0GfPCPc/sOv3/uN/fzuHZN
Y6cACC0PDw8P9UVCpnJ3cXHB559/fp4g+lF4ujjhYG0lmitL0VpTimeahU9VpareUlmCQ41laK6r
QF1VBRqry9DaWodDTzeiqCgTSZmJMDUbjC1bDDhwQOuHdP1xYgGJPOX+2FjN6i0s1PrloEE9MHjg
DZhkfjNsJg8VPppj3kxbtFRsB75owndfNuGz00345ESDKBX10k4BVgGOd4Rfb7zWgDdfF3pD9r3Z
gLdlP38rel2rvyW///F2M4oK/ncXFr+E6eTkpL4Fwi9iLlmy5LyKTXlFOeZM90NeeiXSBSAKMkpQ
nF2KjMRipAtlpxSjNK9MbVnn/uKcMhRmlmF3VALWrtmEkSa3KiAgn+jao8JHzwHH9KpVWn9lnIhu
aio7dGPffvuVwvcbMWbk7bA0NREahQUznNCcuwdHni7GhwcLBTgKBDQKFHgQIN4XgCCIGH+/T1CR
c3ieApT9GvEc1o93A8jlK+vWrZMXXqh1ovJyJQSNhe6DI0eO4NixY6K1zkNabizKqvJQUSsv72gT
3v6oCeXVBSgtz8Zzr9bi+JkWNBwoR0lZFupayqTeipffaoClgw9uufMBpanRhUKthABCjY6djJYI
gYSzqujTp+bHTmhvb8Dq1TPx4vOpOPVBqhL0OFuluat+rNNAgJYEXVY/NolFka+Bw3fV+OWnZvzy
n3IFEL/8u0ir06X1WY5GP9Rp+74q7hQXFgcltbz3339f1Tdu3Ki+a2Es/A7D4cOH5fgH8J7miA/e
LMFb+wtx7N0q5Q769OMG/F0GyzsvluDLL5vx9Vct+ECE8VsHCnHmeJ28i0N45/U8sbwscV/PW9WA
5OwpulYefljT6mh1UCPmQH3mGe03Lbi0dPL0WuTmbBRepuCbU9VitbWKOcSvwz0DfNuCz0XYffxx
o/xPK775ukWBxNEPG/Gfb1pxVvadPt6kwOKzT5vxw9n9+OKzZlU/dUy7hs9Ay6UzXFj8Eqabm5sC
EvJ15syZ6quZxsLPLrNftrYegP8CV7z7SjWebSCf6vHdt6049n4NDkm/fOfVCnwrz8I2P3uwGs8/
XSFA1CrtfwaVFfGYYD5a+uE1yMkx4JVXBEDGa3yki4ouFgo77qegowa9c6dBgc2ECQ/jQGscXvtb
mvQlTtZg7OJpjf7dhK//VY9vv2nBTz8Kn/7djCOHBWAPNyk+fcUJCP9oxNtvNcp7bpF9+2V8NeH1
1+px6pTm1vpMePvuOy0oyP/fAaSpqUkpiJrL77hSbH744Yc2a/jkyZNqf1xcPCIjlmJ/TSUaK4px
5kyj8Er4tr8cFTkF+MdbNdL2Frz7dg0q80TxkfHN459/dgCrVwSjf7/HMWy4BgxUEgnEHN/kJa0O
xpc4vhl7GyA8Js/nzuMsKys883QyXj6Ugfeb8/HJPyplnB7E98K3j54txEfPFAo/G3D2Py049fdy
vNeSj08/qsIP0me/OFWrWR9ieXz3VZOioy8Vq31fnqnDWTnnkw+qcPxZAsi8bgDpagDhIGU9KChI
zE0T6ejZgioiFH+uagta4YcyEUD5evCP+5pE0GfKtlENqO3b5ouJ20MFczk46f8cZ6b53ulnppnL
WUR0WdH90r//bTKQB8Fqcj+sDnXF1980yH1ekP9s0iyGn5rOBcS/yNVAwhgQ/7ZSC6IztvGrIHp9
uyB6sQYoxmvkWFcAyNNPP60+jrRkSQCsbMbi+6/qceLZfBkITTrfDuLj14vxxeGKNt5+c6YWp14s
UMe++LJeNPEJuPUWzfTnbCEGfCnYCMIcrBR6BA26BQi+Tw14EOMnDIC9zTBkpIRpYIFnge8YC2rU
+STv7WcRdKca8O135wK9jGd83C6ITkCjpfFjuyD60Q5B9E/FinmjCwAkNzcXy5Ytk/2zELDUBd98
JmD7t1LtWYRvZ8+24j0B4q8+b2zj7cnDdTj1IT8X8BzefDNNBFtv9O6lBXrJs1mzpE/epSkvFH7k
L+NH06exb14JkxFPwNz8Kbjaj5Z3GaP1SfJSAOMXAQvVt0gE4M/r8bP6dCv5dAAnTjTis89bNMVH
6ITw9qOPjJ93PYCvBKTf/nuDAhNjuvPDh1uQn3d5AYSxuu3bt6vxbWNji+ycVfjgpWq880JpWx/8
5Ggtnq+Ufvq9Frj+6cdWVT9zuEbxMj9/PW679XrFL45v9j1O1ODEDI5vxkHIX/KS/XXQoBtl/A/A
BLN+mOFmJaBZonj5848HxGrIw1ef1LW9s9MCGCffKIPxM7hff9agAIXAADV+D+DI80X47HhNW3s/
PVyFoy8Xt8mjH6Svn3i+G0Auuwvr66+/VjGQC7mwwsJC8PbrscCXuVp8gcKZGjy1fgrpH+q12U/f
VuCXTzPEQhBNpWqrdJ4rkJWlBccp7G6//WrkJi/HbK8RygdP10BtrQFJSZpLa+PGefhGQOPrk3KP
r0V4/tyoBby/KdOsCYIE/4f/R0BhHOOnFq09bBctEFoaqi1V2jVfl2r3oKVCgCHw0GJR9y3ttCD6
pbqw5vl64pP3i3Hs6Tx8eawKP/2wH9992SgdXQamgMiP0ul/EiH4z3+IFScg850I+1ViiTHgSBcB
18HQJ9/3id6oKdyGSeYPqgAkQWP/fk1Lfuyxa9HcvAdf/7sB352WAfY9gUIAQwT/LxR6Mhh/Odui
+ERA+fwkPx/bhB9Fa/5OgOTIBw3KojgrQo2a9Menm/ChWBz/FsBgYP2rf7coFxZna/Gas6I5nzza
OUF0owvrpZdeuqgL6+jR41ga4Iav3srFqeYEfPtJpfCyFV8fK8GJ+lh8/nYefhLB9/1XdfjkpXT8
69UMsfSqhE+DsXKlAan/x957gGVxbH/AaIzG2GuMNTbQ2BW7YsOO9G5FKYLYwY6KotIEKwKKlSa9
9yIdBKzYsWtMuclNctON9/edM7svINeWfxTzfR/zPOd5d2ZnZ+c9O3N+p8zsHpVWqbEFrD1tLHy3
mGPUyAYEvEpw2KwkVhLZ2rIrsCse3AvFd+Wn8dO5U3j2dSwJvHQ8/YksnmvB+K08hO6Timd/pOP3
BxH495Vg/Ez8fUZ8+eGbRJSfJUvzWgye0jP95adU3Dgbjiv5YfiJngOXPSqPxfnM0/jqfjyeUv9/
oGtZiAf77CIAWfe3xiTzT09PT3wd85UurKgY7PVYgUvpsShNCae+0X+hcXCjOBo5oafx5F6isDy/
IisvNyyEADsOxcXHaH63gNchaczxXG7Tti5WWyyAjakOxqiRctNbGrNBQUoEUuyenknzI5n+fzBu
5kTgh6+TxPj/7oskXEnyx5NrUcQTGoM/keVWGCZiGWxZ/Mn3vhkj3Fj/fpQgrmHLhN1Wjy5GCIBj
sHhwLhy3suk5fZcs6nx7Pw73ay2Q9x9Et7dfjSt5OwhAAiShzIKYg9UinnBCEuYsmOUYA/4ThE12
eli1WgrcslbCQfEuXeriyF5z/PDFMbhsMUWPrm1EYNzOnrS/Ec1xuWA3qUYhUmxDEbuo0q4UAA98
PubB/fhO7pcivlE1YF5xjf/zMRG53bcZRLe0tBS8fFkQ/c8/n2GBqT5uZRzHg9wg3Cd6XBoqwIMB
henR2dN4XBwizj3IC8LdnEBMJq2NgZjjG2yBcHC8l3ILnM/xRTkJLGszbXTt0gg2S6SVLrqag/Er
a3M/pBEvCThpsv2Xf2liiWMmBhECJ9Dv92SB3LiRhNs3n49xMJDwiqzyq5UxEc4r4iS3rkmuLq73
tmIgVYPoc+bMeWkQ/dbtO1isPxVfxR/Aw6g9eEy/X2UfxqPY/SL/MHovvsz0wZP0g3ic5IWv071Q
EOyKsWOaisAtu6RY6A0g7XnCqF54lOyJJK81UB/RH/361MP6TZJGvdZSG38Q4P903h8/lpzA98Un
BGj9dDmYKJQoBD9fD8cvNyPxc1kw/lUWTopAFL64HINyDuwWReBCThRulETjXF4USjMjBF2k47Kz
MTh3RsqfOxOJK5TnuhezoxHo6/a3LRB2UymC6Pxp25cF0cMjIrDO2hzFsREEEMEojj+Nc0khyA0P
Ql54MAqignE+NVT85lK+JDYc21avgIGB5OaztpYsEA6EmxvOwo3Yo/Cws0KvLp2EJbKJAHk0gfPx
HTakZCSgLOM0rqZxmwG4TiBxPSsMV5MDRDzjbmGosDQ4fsHEx1ymiG3cOhOMe0VhAiikGIgUNL+T
X3kNB8+5DtevjYH8A5bxSgDiRADiX01oKwTyqecB5MdApEdvxuhR9YXbipfmsn+UYxvjxnyCx1cO
kFYcgq9u+WK30xysXaaBopRtdF1wNUF/SgKrNwKQKgHy6td89wIA+e7tAsibLONlAJkvA8h9BYCU
hOBBVQApIq2KtdYc6fwXZ0OxYdlcaMxSwkSajMuXK6GwUAlOO5RgqjcOf35JFgZZMBdyfQi058Bp
w0I8Kgui/5VWCRYCQGQQeQ5Akp8HkBtSUFwACIHGXRELqQSU8moAUn5NOi+tykp5q/tAXreMlwHE
UmsyvorzJrA4iLtBnri2Zyvuh+3DI8o/jDqI6/scccffFV8kHcKT5IO45e+O6YN6wsyKLAsC4UOk
PRcUEB9nK8F5qQl+Lz6KH86fROgBe9gaToabtQGepB3ETwQQP1w4XUE/MnhcCcXPV6Pw85VI/HIj
Gr/ciqZ8KL4lLfrJxWgBILfIIrtZTICQH4PrJTEozY1GyRmJzufGoKwoVspnRaOUqOwsWSM50fQs
4xBwePdbXcb79OnTl55nAFlvuQClkUHIDz6B4ih/lMYGIP/0SZEvDD2J8wkB4reA8kWh/ojy3YMR
w9qIvRrsouIl9rx6bczo+oh03ohv0k7hdrIfXFYugpX+TBzfuhKPUvahiMDiYvxJXIk/gQsp/rie
TwBypgqAEBhw0FwBDnzMZTerBMjvMoBkVQEQjpcQVVxD5xSgUwsg/4Bkv8ZOcmH9EChtxnsmu43E
UlgSxn8kP+fCErGJZ5mIityJ8WP7iRUtbInEJyhh7OgWuF26h6RpkuzfTCUECwZ+pWv+myG5xtiC
4GD3U7ldRUD816ourFPS/Z9VcWGJmIfswvo1VurLTxFSnuMnwnIKlI657KfIt7oP5HXp6dNnMLcw
JuAMJ3AIxvcP4oSr49cfU/CQgOPJxXA8JXOcXTFfX4ukwX8av5Dg/+XnFHi4LYFy10+Fe+X8eSXs
3ceul+H4+R7x/I90KYj7NJuAIwMg8124q9hNxaDxY6qUV7iwuIzuoXBh/ftxCr75V5pwT/36aybu
lvPS3FThmuKyr56kEXik4Ifv0/FM4cKi/JPH0jV/KFxY56JrbCPh7YcPoN2qC8rsluHeMWckDJiE
wEa9kaGuhYdBu1G4wAzBjfsgsstI3Dy4DTf2OyCmyygc+LAH9Dt0hXKPRggIlIK7FpZKWG8yAz+f
P4ZnxBf8Nwv/KT6Of8V44o9veVHGGfz6OAbf5Z/ALw+jBA/+/DkV/7lyGj/fCMOz3zNE2a/3I/H1
JemZPaNrfvgmCddJsN29FidcgbyxrSwvHBcyQ/Efeg5/Pj2DBzdicTYxGE/uJYj8D/RsLmVF4NS+
nX/bhfWmKTQsAgc8l6MsNRLnyfLgxQf8TG+djUR+SICIhTz94wy+eZCI/NBAshoi8OfvWcjNOYSp
E8cIq5jdp7x4Y/y4uji1ZQ3+c4fm6tMsESP6msb6tyWhePqLNKbuloYTYAThO1J++D//+4skyvvj
y2vRYuz/9lOqcGExcLA7i3lX1YXFc+anbxUurEjhCvzjtww8kJfu/kyWNdf57kG8vIy31oX1/gHk
ylHx6g8hmBVBaI5N8MY8ReCahT9r+PyaEBHYKsB/ngRAd1Z/aGh8gHHjG2LrBkM8+yG4yo7xDMmC
+C2usl3eFMh7N0RwMrsy5vG0ahA9SN4k+LogemK1neih720n+tOnf8LCyhQ/fh2De0mH8dt/kuUV
PFl4nHcC314NqVjR88P9KDxI9xM7bqUA+BnE+W3GqJHtoGdQB6PV2iDk4Br8cT9S5nUOnv6YSFrw
SRJeGRWBxt8f0wT7IbGCl0+/T8DvT6LkoLO0wfLrWxH46T+pFYHeB6RRPy6vXCzBfvmbpREi3iG+
W/80A+UXIvFdRdAzG1/SZC3N9Me8OcY1AiB3Hj3EzHptkDN+Fq5vXwN/pR44qdQVYS0G4pbrBiT0
nYATSp/hlFJ3lNpYEVmIvD/VyRk9HbuXGhEPm0BHtw7UJ/dCoe86/HL3tMzrXHxbfASPYz0F30RA
9j8p+DLFF7//kFQR6P3xGgmru+EVPPj9m3h8VRpAlmimyD8lYL9JwvOrR5W7pW+fjyStO6wiOPwD
WYPnEoNIaKdVtHs9Jxwn3bfXHICEhuPoMXvS7KNxsyCsYjx9fS8OJVEB+F0OonOMpiSaBP3tOLlO
Ie6QlaU1dTymTm9AVB/zZ6vjWrg3fq8Y29l4kueP766FV+S/JcWJrYNnimA3AcDNjEA5iC7Nhy8u
R+LRhYiKvnDM43ZOMH7/Ja0yiE4K1nf34yrq8Aqte0WhlQsqOIieH45ddua1APK+AeTaVS/g91Ci
CHmVA02S3+ih/Bwsr7qih/gnCZ2fAklSxsgPlR72H2E0ME4gNnYHsvMO0PWKlVsK4UO/PwVJK7rE
pKLB+ivd55fTknUi2o2R2n2mGCwp0n35/pBXr/wWLrUDeYI/i5fyT6Mq2/0lRCLIq2KeRtN9Q7Bi
iWbNAMifz7BooREeph3C7cM78FXuURJMyfjxdhjunHDB/bA9+OWrWPz2XQIexR3E7aO78O+yIKHt
fn/uBB4EOaHYfxuCjqxDScoefBO/G48jnfHLgxABHl+nuuOu9yp8V+QttL2fH0XimywffH/hFP74
MUkQH39X4Idfv4zBn79SnTtheJR1FI8vheB30vZ+eJKAa8kncCPtJP5DGvSvJDjvkXVUFnsUX92I
wh80gb8pjxb5O/lB+PWHFNIGk3DrjD+KQw9inokBagA/hAWi3747rtosxu2d65E6fBpCmvRF9hRd
3HF3QPGc+QhtOQDxKmNxc6sdbm5ZKY4j2gzCxcXz8cXpXUg94oDTp7biZt5hPAl3wRfRbvjt2wT8
RgD78Ohm3N23Dj9eDyReppEGfQoPQzzxr6ITePpTCn75IgZfpx3Gv7L9xPPi5/hd0TE8SvbFv8sj
BZ++vhqGy2G+uJ4ZKBZK/Ei8vRB5HKWhR0k7jiMFIhXlBDCFpw7jfnEofv+ZeHsrGufDj+Pk9o1Y
v65mACSMLBC37TYoCWWX1VF8+0UCfvo+mawRf2Qc9sad8+HCKrh3MQKZR3xwLv4Ufvp3Es3rJBSG
nsCZU4cQetgBsWE7cD/vFG4SgHxJQMoLDX4kgL0fcQCPk3zw6zexot1rWaeID8Rzst5+J+v6q2sR
In+vMAC//Ujz4cs43Eg+jutJx/HDF7Gi7MHZIJRFHcGTK2H4g675150oXI3zw21q65d/k+L0XSJu
ZZ7E1Vg/fEtW+R8/J+PxxRDcTjoJp6XzEBJW+zLF9wcgq1Yia6MxvvRdhS+8l+OJz0pBX3ivEPTE
h8iXyuT8V0SP6HzOgSW46bUU39C5y36rcMtvNb6h8q/pPP9+SeVf+Uj1+VrRhmh3uXyf59utrLOi
yr2r9cX7Ta6prPPV4ZWwnDYS9x4+fud8/JMk69yZ03B+6XxcWW2JK3aWuL7JBlfXLpbyRNfWW+Pa
BhtxXEZ0Y81iFNubI8rSGGV2iyi/CNmr5+HqOnPcWUNE5+5ttsDDvatx18EKt6jNO46L8dBvCx4c
3or73ptx/4gjHp3cKeiB33bKb8fD40545L+LBKUTPZdduOqzE9eOu+LqEReUHdol6KqfC64dc0WZ
t5S/4uuM68fdxK+oQ+V8nutxvthzM+bpa9cIgNy6ew+LxtJzc7DHzQ2rBF1fsxw3N67GzfWrxO+N
NStwY/1Kca7cYQXuEZBkr7BExpqFeOBph6t71qBwjz3xZAseem/Co/0b8PDwdjw4uA73tiwhPtI1
nmvxKGQPHgTuxf1Tnnjg74HH4Z74IpaEYjRRzAE8SSKBmeJD+f14GO2FWyTorsf4oSzYG5f8fVBC
AHE+2A8lAUdQfNQbxX7eKPU/QmVHUXyMzlNZyXFfkS89SXVPHIa/w9oaA5BwXsI/fSrObtmMnI3r
kb91Ewq3O9DxBpHPddiIQicH5G3eKPJ5VF7kuAlBK20RuXolijesRtpaK2TSuL28eSXOb1yOK5uW
46rjSumX8pc3LMO1HbbI2u+M3J0bULBtHQqcN6BkzxaUuDqgaMc6lO5ajwueDjjvvkkcM/Exl5VS
XVHmsoHym3HOdWNFnQsedA2RIn/ObaOow3XL3Ddjs/ZUhEZE1ALI+0qrly6H3wctkNe6G7Jad0VK
k65IbfqZOM5u0xXpzbsiqdFnyGzZFXltuiG2RWdMVaqPGcQiNaW6mKTUAMPoWJVoS8NWCGnRCaea
dkBGo66IbdYFYS07I6dVN6Q0/oza7Sq1S5TWrCuSqd0zraT7cPt8H74f15H68hmSm1T2JaNFZV84
z9cmV2mXifvOZXwuv+VnMG7bEfe//PLdAwiR6aTJKNSfjUsLLXFu9kLkquvhrM4cXDSzxMUFFiiY
aYz8aQa4MM8c1xZZw3+GFsa1aAXNBg0xuX0HTGnXHiPpeGKrtgiapYsoXSOk6Oji8px5OGM2FzkL
CWSWmqN04UJc22iPu3u34+4BJ1xavRyX7Fbg7sEduOezC9e30+S0tUH57i246Uug4L4dZ62X4Py6
Nbixbxdu7N2Jc/arcXbJUlzbvR03DhBokFApsrLBJceNIn/NwwklS5fh3OpV4poLzg6Yr6dTIwBS
fv8e5g8cgpu2triybCkuEO8KtYmvFla4SvnL1jYo0p2D0tlmIl9Owm7nVHVMaN4UM5s0wsx+ypjY
rg1GNvoYswf0QtY6SyQsnYNCszm4ZD4XmRZGuGxnjetLF+K8tTnK9xIYH96F23u34MJyAn7ndXgY
sBsPTrnh6jZ7EpArcP/4LrISPXHZ0wn5xJdSl224dHgPiva7I2vZKmStWU/HHjh70BO5GzbhzJKV
KHR3wVmvPShw2YlM6xXI27oFpYf24aTd8poDkOgo2KuqoXjZBuTarEG6viVSZ5khx3I1cpesRda8
ZUiZSeNr3lLk267DGSo36TMI0xo2gnrzllDvpoyRTZpiaKMmWDFKDdHm1ggynIvsWXNxxtgcsQut
UGSzEgWmsxGzcCWyHRyQu3EzMpeuRqqJJXLtCLQcNqNo/UZkzbWi+y5D8ZYtgnKtluHMHEtxrnjr
VhTarUWmqQXyl62m/BacpbayFlgje+ESccxl+UtXiTqFa9bhkpMTHGbMqAWQ95lWEYDsVmqLvE4q
SGqpDH8lZQTUUUZqG2Vkd1TG6XrKCFRSQWKjXijq0guGH7eCg/yazmyiVkSfE3Ulalm3LnrXqwdl
pXoELk0woW5DjPuwPkwatMQJpZ4IonbTP1FBZnsVnP5AuldsE2XkdlZB5MfKOKUk3S+7owpSWlM/
lKQ6Sa2UkdNJGSEfSnUiGvI1yohrJp0PqquMjHYS8TGXxTVVRlGnnjBp37lGAOQZkd6Q0YjqOpKE
1GIkKI+jvnZDSOP+KDVegLypBgj8QAXBxIfCsdrIn2NGE7MV4mVe7iRqTDSAqA1Rp0aNoNKwIfoQ
WI9XaoxJjZth/CdtYd+2Jz2P7ohoNxTlzptRstAcAfyfP+iJ0sVWKPfYKs5xzCBZdQpuHXFD2mR9
kT/dZAAublovQCHoo94ihpClaYrre3YittcEqtMF0d3HEqg4IddogYg9BH7YGyU2S3Fpt2ONAQjH
QLQat0f+uFm4YLYQ4S0GUt9IeekyApesLJA6ZDL1jXjQsC8ukzA7ramJEXXr4RHx7U8iDaJ2RP35
TbH8ksSWzdC9fn0MJmVnQp0mUG/aFFM6dYRrYx5j3ZEyYjru7nNE2lgNwafQFoNw02UjLpHVE1i/
l+BTgelclHvvQDQ9V+ZTlPJ4nPPYiUSdBeI5Bzbog4wlBCRrN+J0s0FU9hnixukh380FUYOmi3xI
m6HI3+yI40uX1BiARMTFwLJ+O+TNtiXwMBfPk3mXMFoXOdb2CO80mnjwGWI6jCYlYw1WDRsPI+LZ
70R3iT4j6sE8ZF7WqYM+zZujG/F6pFJDjK/fFBNbtIBWx244/AHLiZ5I1JyNnDUbEdJuGP3nrojs
OZ6smk1Inqgv+BRMzyzHcimB2XIEN+or6iSpaROgbEZ0r0nE288Q+skwFK1bj3TdeSSLeiKA2s40
XiRAI7SVqrgmpu9kApDtcJhZCyDvHUB2EYDkkFBnYc4CmimhuSSQT5PQ30UTZknddpjWqKl4FXYg
secbIh95gvLbN+sSfUw0mmi8nI8h+oHfzEm0VKkDggiIklqpII1AxF++T3gDCTAU4MDlmZ8qI75Z
ZV9iCQzOtJcAhfPBH0iAwkCiuIYBJ6VN5TV8rqYBRHfQSAQ16SssjnASQiz0/BkwtEyROYKFU3ds
JD7Ytu6BIR06oiHx5TbRDaKVMh+Z6sggok40UAbpJ0Q3iUaR1edBkyyI/uP1LeuQNVVPBJBP0DPK
0TLGNce1NOlURFl468G46e2CaJXxYmKy4DhrY4uCBZaiPlPi4Gm46uIowIXrnG7UD5cdNyFVTUuc
Z2GZoz8Plzy31SiAaNT/BOl9J6HEaJ547szL0Cb9hWUX32U0DpMQWaXUHpade6E9CbWhxJtfiXKI
plXhJY/D7kRTidoTjZOFY6Tg5cc4Ru1EEeDediEB1mmEHJzvgctrV6JonlkFn9LGzMQNT0cEf9RH
8OR004Eo3OaI6BGaVL8zURckG1ki3XKl4DPnw3tOQM5WJ4R8MlzkuTx71QYcW7as5gAkPhaLlJqR
orAQyVNMhfBlMIvqpY4ss2XE04HYQ31bVr8T9JX7o0H9BrAj3vxMFCoDiIKXHxINkcflR0SsSP5G
tIHIQKk1KUck2IdrIGuFNAb5PgymOSvtEdNHXfCNQSTD0AxnZluIY6G0qExAof1ahLQaIq7h552/
fDWBnJbIM6Wo6yPXenlFuyEtB+MS8b8WQP4BLqyDH7ZFQRcVIbhZ8LI1kEWAUkSTc0PDTwkYPhDC
riNRC3lQdSaaRzRJHlws8FrKA2y4PNj2y9r1dtYK67VCcuNeyOqgQsJfBTEEVuEfSZZOHt07mQAg
7CPJcmCLhAGD+xHxkQQoXBbfXKrDlhJfk95WaiO6sWQtMRBFN5LK0j9hAFGuUQAxHDUO6WqzcNnC
WrivItsPRXJ/dQIUK5wjjV6ryac08eqKydeNiHnaS9bwlsjHSrL23FYG4z4yzy/LvJxGWuDmDn1R
ONNIuLCub1uHpIHqSBo0Gdd3bMA9n53I1jBEjMoYlFhYoNxvN87SM45RViNQ0BauqSvOW5E8YiZZ
HaRF263GzYMuyKH+RfUcg2ydObjp5YLz6+wR12ciElWnoWzHZlx021pjAHL74X0YdOiB83pzcXGh
FdKGTEXkp6rIIlC7YrUEqZN10LtuIxqXddBItn7ZelMhYiCxImoug8cn8ngdS/Sp7Gpl4fgtUd96
H+FU1xE4P98Sd3dvRyndK6bHKJxR18E9753CmksZOV2s+rq6xR53jrkjy3ghIohPafpmKPXyROaq
9YjoNRFRqhrI3kKW2w5nxIzRRViPcUgzX458D0+kmFpTfizi1I1R6OKOY7ZLaw5AYqKxtGMfFJF1
kbVoBaJ7qyO88xikG1ji7IqN2DtoIvHqA8HH1vLYY+pCpEWkT/QBUQP5fD95XH4sj1kek3FEIxu3
RsTnU8gKWy5cWPGT9BHWdRSSteaiYOsWZC+0QWQ34gEpLGxdFK3fgLihM6iMxtz8xShxckS69lxE
8DUT9YRFkrd0lQCX6N4TUbBitShLGqeLcKqTYWCGyzucagHkfSe7ZctxqvknKCCwYKGsIAaUOJrE
HT+sDxdixxwijnvYEp2TtY9tRF8RKcsDjCdyKlGuPJlZSK7mwUU06MMGiOnYndrtJcCg6r1emH+T
OtXy1csKO9YcgHAMZO606SiZtxCXSBAxiFwiumxpg+tEh2dqod2H9Uh7UsJkopkywJbIFlqazLvW
Mvgyr88THZcnKwvAZexKqKME02GDcWe/E+7t2477vhwsd8UDovuHnYXge3iM8n4uovymD9EhN9w6
5Ipb3m64sd9ZxDj4+BaVM1hwjEPkveQ6lGdQ4fOinOpfIA29xmIg9+7BbOhwXLOwEQDCPFTwksuW
DBuOoQSkh4gfE2VeJhJlyHz7F9EmmW/1ZQ35gjwWP5LH8my2TOp9gF3a0/HYwxHlThtwx2UT7jiv
wwMvR9w76IT7Xk54cHgXHvjuxAPvbbjttQNXD7njoscunPN0RqnrDhR4uCLXww05u92R6+KCXGcX
5NFxnruboNxdzvRLeTc3UV7g6gY/a5sajYGsmzAVxQQWubZrkbdiA/KWr0f+svXIWbIGw7r1gDnx
wl7mnSlRKZE3kZnsEpwi85EVxCB5/k+SvQ8r5fHcu2lj7LdZiXyn7cjd4IBcsg7yt29DIQn5/E2b
ULJtK0q2O6J0xzYRy2DiYwYOLmdwUByLOpzna5zkOo5bRZm4hupwWa0L658SRP9YskCyO0nafXIr
ZRETMWzSAh3kCblGnpCZstZxX9ZOsmX3AGt5sxSfMJO1E/ZBW8iul11Elk3aCquGBX0aWQ8JLcjS
6SBZE2xxsNssjSyH3C6SlcL94P7wsbA4PpHqsEXCebY4EltIrisFgLAri8vYIqlJC4QBxGT8JORr
mxB4kEZlNB/pw2agYIYR8ucuxKA2bcVEZN6MkDW8X+S8vyzwTsruAbZMvORzv8rgwa4sV6IviHTr
1kGA2Vw8OrgTd/ZtE66WswsW4s4BBhRnXLJfgTw9U9xwWo9bR9xRtnMrsnXn4OziJRKA7N2JwoWL
kWMwD1dcHAVYXFi/FllapjhvbyfyV922Idd4AQpIO+f6F1y21GAQ/T5m9+qPsnkWIp5UMMsEaUOn
47zBfARr66ElKTU7iA+PiZoS6VQZd4tl1+laojGyYnNdPlcsx+tGyHWuEU1o3hxFy21Rvm0jylYt
R/YULZy3IotkrxPueGzDWVIICvRno9x5AwHpTpxdbY+UqUbIsV2FEuddKNq0BSmz5iLF0AIFjgQo
23cifa4NkqaZItd+EwlQZ+SsWIfEKcbIXLQMxZQ/bm5VcwBCFsjqAaNQTICRa0N9nzYbieMMUGBl
BzsCFuZfIdFpGVwPybz6TY4lMfCayEpi7yp83iMriLNkvoYwACn3Q66DA/KIJ2mLbJAw2RBZS1ah
gAQ/u6hSZpgg02ihAAKmMyaLkDKdrDK7NQIs8mxXInmyAbLp2hLHLSjauBFpmnOQrjMXZ+mYQSTb
zBrJUwyFi6vWAvmHxEBcldoil4QxC2cRlCYKa9ED4+o3EBbHOqL58oAylrU9G9mnPEDWQOrJ7oJj
RIHygGPXS5484NhaMa7TFmfa9CIAUBHBbo5VRH0sAQS7qjgf9IEyznRQEYFzRRA9UQYajn1wnbAG
EmCwG4zPB9aRXFYcoOcFAFzGbq2izjXrwtIdPAphn6ri4qLFiOk0UgRfwz7qh8PjpmF6gwaCh55E
02ViIZck++V7yiAxTnZjsdUWK7v/2siuLHa9PJOfg1NTFdzeQQLKaK4IdvO9GEhuujggtNkA4euO
U1HDTV9XJI7QEPmg+p8LgCheshT+dZSFDzptoq4Imkd2HCliIBHthomYyBkS2nw+oG5PAhvLGg+i
z2r4KbKHzUTp7IUI+biv6EtC+xFYPWyksCBMZF5OlkHXp4rPnsfkMNndwrxcRJQgWx5N5bHMY7Jc
gEk9hPZUQ7njJiT2mSgFej/qgyvrVqPEwor41FPwNnu6Aa4TqIbLweGw9iNRtHU7kiYYEP+JTx+Q
gjPPlgTmGgQ1kILDMYNnIt9xFyJ6TJD436g/8u0ccGKxbQ0G0WNhUbc1co0WI1VzgbTggvobrzoL
mj17CXefpTwWtWRrjseds+xGHSzHNNvIlrG7DL48PpsRHZV5GSCeQxMkqRsie/V6BDcbKPGp4yjk
rtuA+JGzpMUG9Xohaz4pL+ZLRECfy+JUZ+Dspo2I6DJG5E83HSBAJWWasRjbTGnac1Gwyh7BjfuL
OuwOu0QWTi2A/AMAxJkBhIQ2xx8UQWm2DgwaN8NG2dxvIA+cKLF8l91VH0G1/sdoXacOWtMkNFVq
A9ePOsOoSXMMqfMxCcJmMKrTCuof1IORUh0RsNxPEzGtNU20dioVAXGOuTCAhNWX8lwurJEWlQFx
Xm3FABJYp3KlFgfRoz6uvCaVLBq2ahTBeY6fvI8g+ukWA3CRtPvIttJKqKA6BMxTdTGldWsx+YbK
Qu4K0V45/jG0QQuotGgpJml7pQ/I2msPpz4joP1ZN7LiPibAaAbNhm2h81EDOq5Dk7wJAmgi3txG
WqWmEU7QfTj4m0eaMi/hZaDgwG9Uh2HChRXbf7IIVgYo9UTJshUoNLcWfeM6ySM1hLUR2nKwyIfQ
xC9z2oz0SXriGgaVPFMzXPKo4SB6g0+QOXAKSo3NEPhBL9Hf6JZD4DttFjTqfSDcqswvXaJbRCvk
/MQmn6B940biuK9SA7h81AP2g4Zjcqt2BCwNaSy2wuRGLWFCbYxVqkvCsxXiO43Cza0bEdN1jOAj
j6dLK1agyHS+zKfPkDFOC9crFhsQn1oMRuGmrSQYtUSAnIVlmvFisQxWGttdENlLHXkO20mIjhb5
gLpkSa/YiBPWNQsgi5SaI0fXnLT9OUL4chA6od90LFGbJCy2VXK8aI+s8OmKcVgPY1t1QOv69YVb
dSqNOc/2g7Bg6AiM+rglAW9DmNRpg0k0301JBgxT+hBOSp8iYYw2slatQ2D93lKwu7UqcuzWInbg
VJHnhQS8DDdrvpWs+HwmVlRxXCTsk2FivDGwFKyyI3DWqwyiE5jkLV2JoHq9RZ0wAvJL22oB5N0I
s2fP8MUXX4g3dPIHj17pwlq2HL4ftRWxCQ5w84onEcgmi4RjFiaNW2B6/UaY06QlJnzwoRhsk+rW
g2vzTsgiIX7ok8443IwGZBOaHO174exnZGGQlZHQWIV+CSjad4VHm8408XogqTm7ySRXU2JLyUrg
lV4K9xTn2W3F59k9xf3g/mR1lGIiHGjnOmltJZcWLweOaSy5tRiEmPiYyxiECt+CC4u/scBv4+XX
Z/NLAF/lwjJWm4DsaXrCX88rrxJ6j0fmGE1cWWSNQE1daHXqCr0OXWDSuy+0PvwQK+vWxcRmJMCm
6CJ7zgIcnjwTwX3UhOZ9xWwxriy0Rv5YDcpPJU18LgKMCCxmzUDKyGkombcId/dtxy23zciari+I
932wC6vYzBxpahooW7MCt/x24/zG9UgZN0u4rNgdxXs/zmiaInWCNi6R4GSXVbGNLZJHz0QR9f2W
lwsub3dAOlknZ2Ya4xoBzAXXv+/C4hd78pf0mJ+vdGE9eADjbp/jkslCXCJrLnuCDhJ6jUP+dCOU
Uf+cx6tjRtv2mN1dBRoEsos++ABmRAYduqJEfx7iDE3gO24KonqpoXCiHq5ZLsFF00XI7KeOHNUp
yDE0xeFZWvAfMxHplD9vaYNb9H8vkGBPGToFBXpzcMdjB27t2oTsmUbInKiDG47rUE58ybO0Rdzw
mcicvwQlrq7IX7MRcaO1kTDFFPmbnVCwzRnJsxYgdrgmsmzXonCXGzItViFmmAZS9S1w1skVxy3/
fgyEX4PP8/vJkyevdWGtUB6Cs7brkGO1mgBPBzEDpiNr3lKkW6+GxdAxmNqaeDlgKCa0bYcVNCZn
1m+AVf1HIs98JQ7rmeCQ2jTEDZiC/DmLUWq/DgXGBEb9JiNH3QhxZJ3u1zHA6ZHqiBqjjzNkOeRu
2oxkfTNED5mOjHnWIojOwj+e+JYyxYisjU0odtiE1OnGoixvyQoR12DLJHbINGQYLBAxEt4XkkiA
lDhWRyzhLXbcIpb2xqpOQ86iJbi8ozYG8k4Sf6Rn6dKl4uM8/KpnFn5/NYjOcQguY2DJIeF9ln6D
2neDAw02fwKFQsrny+W8P+RlwW2ux3UKXhHsfl3+fQbRk5OTYW1tXcFP/ibImwbRL8uBXw4EX5Hz
l0j7ZyF4nADFZco0nCHguEp1ykhQXrdaQvVspKAx5dmSub7KGne22+OG/RJct1mK+5uX4u6erbh3
cJdYhfVGQXQ5YH7LRwqi33wuiO764iA6CUtRJoLoLn87iM5Kjbe3t/huhbm5Ofbs2SPKXhpEH/bi
IDrnr/Ev8aeMfkvMLLB32kzsnzFLrKLisivE4+tWtoLPimuY75ctLHB1CdUxt8A1yt9aboFbW9ei
fMdmYYGUk+VVThbc/T3bcMeT+LvHEfe9XQVxUP3W/l0oO0CA7OaKEjc3FO/cJUCkyNUN+S7uKNzh
ggInFxTxMQEHU8F2ZxQ6y3kqL97phuMWfw9A+DPVmzdvFuORX40fFxf3ZkH0pWtFAF3QsnXIZ4Bb
vgHZ9MsrsqIX2mLzDB14k9WXz3WofqH1ShTbr8FZEuZFRBx7KFlpj9IV9ji3yh7nl9vh4so1uLxh
KZKddyNn29ZqQfQdrw6ib68Mopc6bfufIDqXifLaIHrNpV9//bXiNe7Ozs7iGxYvmtCSC2sZfBvK
Fghr/c2kPRhsAbBAZouAYw0Z7VREHbYy4ppImw75vELrF3s1OkjXsDspuom8RJfyCstGYSlwHb6e
21UExNPbSddUtUC4H2yFKPrCAXKuw7GOPLHUlyyQplKMRGGB8DG3y+fehgXCH+RSWB78Bb3CwsLn
zvO3QZiXf/z3GYzIAskhS4CFXZH2bCT1mYAzY7UEoJwniyGNtKuUAZNRamKGqyREzk4zFHXy6Jev
KTaYj6R+k5AxYiYuzLfAxQWWyBqvgfSRU+n6+SiztSVLxBRpY6ajeIE5WSBOKHffQlqyIXI0DMWy
UwYUXr6bPlETZetWiSD6BYcNwtrgzYHCAvFwEst109R1cVm2QEpslyFFbZbYjc5AUuZEFshk0ijJ
krrmvv2tWCDff/+94Bd/mVBLS0vkq/OS6ea9uzDuThaIqWSB5EzSReLn45FP1pDgE1kZyX0nImOU
Bi6ZWeEq1xmliWTiXTFZWVyHrRW+hpdTcxulZM2kDFBHBlkY5+fMJwCyQs7EmUgl6+4CATdbIBfJ
CksbMQ2F1MYdj5245bwJuZomODNZFze2rcct4lP+4mXCn3/GzFayQNZuQryaLhKmz0H+FrJAtu9C
svZCxI3SRjYLYGc3nCHNP3aEJlINLVH8FiwQHm8K3vH3VVhJrJ4U36wJi4rEShXVCgskYbQeYgfP
xJn5tsglEOG4SEz/qUjVmC9WZhUsWolE1VnCUsm2XEXXLEcSjYO4wVORPdcKBQQeOcaLED9wCjIm
G6F06SoUEU9SaExGqBngjP1aYYGkGC0kq2sGMhYsERZI/rJViB81S7iiKiyQGaaClxw8Z1DgAHk8
XZNpuFCyQNasRdI4HSSN10XhWskCydCbT1bLDOSY29ZaIH83sXDjr7sVFBRU0IULFyrAgc/z4OLy
qun27dtCo7a2scbAPn3hqdRJioFU2bzHLqbM9pVxB0XgOvyjyrgDC30W6oq4AwtuFvaKYDfHKhiU
qm5QTKkWA4l8SQwksUoMJL5aDIQ3Hb7tGMiXVKcqH5kUn7HlxO4C/nhPdZdBRkYGLEhgm1taYHDL
9ohoqyrFQD6RYiCBdVRQRMKaXVmS/7mb2BvCG+I4ViF2PjcbiHNzFiFBZZzYMMcb2XJp0ubPMBYb
ETnGEd9jLC6aWyKijarwyQd92Bs3tm9ArpZxRQwk33AOrjutR3ADOQbScbiwQOIItE6IGIgySpav
EG4qvo+IgYziGMh2hLUaIsVAmg8S+z7SJytiIF2RR339KzEQHl/VeVmVb/yJ5eXLl//PdyyOHTsG
KysrGJmaYkrdFsgaNE2ArSIGEt5yEAGpOeK7j63YpJk33RC5Uw1EoJvLEnqqCV6GiY2cXQUvSk3N
kEIC76TYuNYdmaNmokh3dmVspdNIKQbSTY6B0DO7RNr9WbIOFbGizPFSDCSkqRwDaakqYiAJoxQx
kG5IM7EWYKGIgUT1noy8zU4I6zimMgay8s1jIH/++ScuXbr0P7zkea1ITk5O8PLy+h9XIX96mS1n
9alTYc0bhXUtkDJ9bkUMJKYvAcKiFTjdVNo1H9yov8jHDpguxyponE4xQbruAtFv5gMHufk1I2Gf
DpPGNpXnz7ZEmrzLnK+LHUvAyTEQ4jv/Z959n8sxEHqWUrs9xCbC7AWLK2Mg/eQYSLvhgreBH34u
AuZJE/XkjY9dxWqtfI6BiDnzGfVheG0M5O+mhw8figHk4OAgaBMh+969e4Xfnj9+xN/qPnny5As1
GP4QDWvWy6yXwFXpk+dWYSleH8KCXLFaildJVX3lCAtzjl/wElrFNbGytcDAoRD0iliG4hUpKW1U
hDUTVOclq7DqStYD39+/SkC/6iqs0PryKqzG1VdhKf+fV2ExEDP/qvLy9OnTFQKRv6BXVFT0P9ex
EGRe/vTrL9AeOIImwRABINEdpVVYLOhZY84mC6BiRQlZIizkQuQVJeGth5BgtCCtepK4hicmWyWF
s0zEqhWuk/j5BFyytEJ0hxFi8oY06Y+bThtRYDhHXCNWYc01ww3Smvkc14nrOVZahTV8ppiEHJw8
x6uwSNNm4SsCvxN0REwkQrRLE5OAj1dhZZK2L4R0nZ4oJEvoksebr8JigKjOS4USw4BrZmb2Qt89
j0e2nq+W38Kshu2QPXQGCf+FON1QWoXFCxP4vViJvSZIvCXe5GuQYJlhJFYXcVnS5xMFLyPbqFa+
SoYAME11mgBmpuxxs4SlEtygj/iPcQQ6Nx03IqH3BHENC6kra+xRYrZIvqYbsqfqiVVYYdSHU7IA
K9qyDYnj9QUf+f7pc21xxsYeQdQu14keOAP5jjsR0X28yAd93Bf5q3kV1pu9yoR5weBQlZdM/A10
TocOHRJfG63+cS62PriM+RkcHgaLOq2Qa7gYqbMWiFeDMDiwFcIWRmjroaL/IS2GINtiJeKGzhKB
bh4fKTPmIMNwkeAH8yCq53jhwoqUV0vx/yyYvxgZU4zksd1dbCAUq7CaSisBwzqMRC6BQ/xwaSVg
YD0VZM2zEjGMwA97SasFh0wXS3YjOo8WeV6oIFZhTTWW+9IdaVpzyPqxI6DrJ70i5bMxtauw3lVi
85Y1OXd3d6GNvCr4yzEQ3gdSKPZVSJZH1b0XrNXzDnAGE7Ffo4OUT5X3XuTIbi7F3gtFQDy+eWWA
XLFfQ+GeEm6uNtXabS9ZGnw/hWuM+8H9ya6yDyS+yj4Qtm4YXNgKqroPhIHwbe0D4aCvjo6O8DMz
KLNW+LJVWLwPJI8sgsvm1ig2nC+EFr8Di10oLPjOqGkhc8RMnJ9rTtaEtL8hlcCE3V3so2dBl07m
OQeN2W/PlD9DFzlTtHDJYiHKltjSdfORPV0PF2xtcW+/k9gHUjh7PoHHAtzZL8VELq5aJiyT69vX
CRfW5R1bxB4Ptjxu7HPG9b07UUD94b0hvCudXVjn19rjDAnjc6tXi/jHVVdHEXTPJ6C7sWfHW3Fh
paSkQFtbG1euXBG8/O9LPi5y+8F9zFbph7K58j4QAjMG3bO6cyQ+kVXCe2zYtaXgU85EHcE7Bhyu
U6QzW1xTQP+J22DLJXMk8Xa8Bi7MM6NnYkUArYMzE7VwmawydmGVkdWRpa6Nc4sscddzJ267bcbZ
uYuQrzcH5c4OIohetIoE2xRj5CyxQ4mLCwodtiJZYy5SDCxRsG2XiIGkz16CxKmzkWO/GYU7XZG9
YgMS1E2QsXD5W4mBcNq3bx8WLVqEf/3rX0KBeekqrJhorOo/omIfCL/OJHGsnrA2OA6SYWRJwl0L
6QYWyFu6ToBI4lh9JFN/c6ztkGu1HKlas5E0Rhu55kuECyufQCN5lCayteehlCySszYrkDFNB5Ea
85G1nqxi3gfC7iiyTLL4RYtbNqNAAIKRFCCX94GwqypliiEKVsv7QKidJLqGXVkc8yjasBFpGqZi
L4i0D2SLCLTze7Xylq2q3QfyrtK5c+cwefJkLF68WBAHgv9KED2/ixRjeFXgOr/KjvH8z+RrXhHs
zq9yDZMi/8p2q7WT/5q+VG/3bQTRg4KCMH36dNiSwGZQZmvkVUH0UkUQ3VIK4F62UgRxF4tjJj4W
wWErKWBeEei1qLxGCqJb4QYH0XesEUH0y4ttUO5gK178d9+rShD9mJsgEUT3kYLogqoE0cu93VHu
414RROfjW0xVg+hcz6cyiM51RL23FERnTVpPTw9LliwRAWDWsN8oiP5KPlkJXlXwls4pAu/PXcNB
dEtLXLOl44Xm4n1l15ebo5xXV1UNojttwP29lUH0B8SPBz5Vg+geuODuViWI7oKzbu4ocNldJYi+
uyKQzkH0Imd3uWz3WwEQVhDZnTpv3jzY2Nhg9+7dbxZEt12LfAIzJgaP3CVr5J3pG8SvyHNwXVHH
do2IgRTY2+Os/brngugcQD9HYFqydBVKqOzixqVIdvGoCKLnbXckXmxHUZUgOgfARRC8ShBdERRX
BNEFVQ2iK+pwEH3r5oo816sNov9D9oH41muLUg6Qf6qCuIYqiG+ojPz2KjjLu8GbqCCmAVkKrVVQ
wlp/GymfROVFdL6gA1kBHysjll1c7VRQzLvMeSkt1UlrLuVz2/US57leYUfpuqTGdA3V4faKeUlu
KxVEUz6lqbK4L9+f+xFHxP06y1ZLM+neGS2la3I+ofxH/KZgarOjimg7sZHUbnZbFZwnC2R2Tb4L
a+Q45Khp4qaVLc5ONkBC++HI7D8F11jAkWac0m0sEjuPwgW9ebhOQiRn2EzEfToMeWO0cIOuOadp
igQy+dNUxuPKPAtcXWCJzH4Tkdx9NM7rm+LW8uUonaWHpJ6jxbuwvjiwk8BlIzIGTUbGkCm4S1ry
kyOuKNI0RnIvNeHyenhyLy6uWIkkajNrvA7u7NmFctftyBipgeTeE1G2Zg3u++zGWZNFSFQei0L9
+ZR3x9WN65DSTx0ZpOnf2uWI657bsaAG34Vl1KEnrugvwHVzG2SrzkB8+2HIH6ct+FSiYSI2FaZR
/68Qj67Ms0RarwnEuxEoJY31xmJb5I/VErxlNxjz+gL9L+Z9avcxuGxE/OflwUMmIbHrKJw3XYSH
zo64SBZPYrfRyCU+PfLYibtOG5FJ/z+1z0TcWm9HQLIb+foLEdt9LFl0ZrhMgrto2RrEqUxE4mAN
FG9yIqHnghQOVHcfjxyzFTjn5oksY2vEdFdD2kRjXNjpjgDrmnsXVnhsNFZ07IPzS9ah0GI1Ej6f
gtguY5FjuFiAStp4I8R0pDGnZoBiApJcExvEfqaGBBV1FCxciULLFUgeMh2xxLtc3fk4Z0+WzKw5
iOs0CumqGri0zA6l5gQevdUQ2WsycsgyOLt5G1InGyK66xic0V6A0u3bUWhui/ju45BMz/L8hk24
sMkBKcM0ENdNDYVmBPS7nJCjuwCxXUcjY5KBiG+ULLdHYm91JPRRRwmB1cVtjkgfr4/YbmOQa0SW
sYszHGdp1ALI+0xLl9hiUt0mWNC8DYwatsYspVbQqtsGpo1aY16z1tD+oDXlW0O/fmssaNEGBg2k
PJfPbdoasxtLeSa+fj61o1tPyvMv5w0/agXNOnQNtTu7cRvMadqmol1uj+vof1jZ7rxmbWDSqLJd
44+prHlr6MjX6NVT9IXbbSXandOE+tKk8hpDanchXaPath0ePH73H5R69t//YuKQYdBr9CksB6tC
v0kH4mVz6ltrLOozAPM+6wUtpRaCZn/aA+b9B0O3fltoUl6v4aewGDgEJm26irw2/acFPT6HmUpf
caxJ7Ri3/gyWqqrQ+/hT0a7Oh21hM2EsFvTuJ84zmfUbAJtJatCp14bqNINhi06wmakO4/Y96Hwz
0Zb5yJFYqDq04prZBMTWkydAV7TbVLS/eNJ4zKH78zXcnwUDBsNy8njMnKxeMwBy/x76fNwSc9v3
JD4NEs+T+6FPfbMYNETwQuITjYOefYn6EF9biTI+x7zkupzXrf8JzPsNIkWiB9VpSWXULv3nhZ8P
gJbMW8MWnWEzbiyMWn0m8swnq9GjsHDAoAo+ze3WG9bq4wV/mC96jdpj4bgJMO7SW+IttTunnyrm
qo4U99Bi/n/SA2bjJ0G/WWeR1/6gDRaMHAvNIUNhb2dXI/M7giyQQXUaYn6fIZitPECMCy36P0bt
emL+kJH03NuLvO5H7Sg/AkbtlSvGqWmPfpjTZ5AYw1zHsGUXmI0YSf+nkzjP5WYDVTG72+fSWGf+
d+2NeSPHQIfGNl+j17gDFowZKxQCBZ/m9h+CeYNU5bHdjPrSAwvV1KDftKO4hse22cjRMBHtNpPm
jEp/KhslxjbX4T5YThiPsco9ERZe+0XC95YePXqES9ev4fKtm4hMiMdc80W4eqccF29cF3Tppkyc
vy79KspeW4d+r94uh7ntEgSGh+JK+a03bvfSi+rcrNrubTiQCeu+fx+u3bn90nbLrl0TiwpqIt0q
Lxe8vHLzJna4u2G7mwv1jXh59SouXrta+f/o+OLVK6KPl0Vfr+HClSvi2oo6fA1RBR+uS3W0DPVR
eL5UXHehrEyqU3HNFVFW0S5fc5nyinszT8qu4CLfq0pfmEcm8+chLjUFZTdv/G+7VP/C5cvi/9VE
+v2336lPVyt4Od/SHOFxMSijMfocn25U4dPNSj6J/0c8vVxR58pz/Oc6yZkZMJhjKsak4BPzrUq7
ggfV+CTx9lrFM7tYVoW3THSf4vPnxDO6IPf/YrV2L16hdomXvNG3puKh3K9LxKPzZZdF30ouX3qO
T5cU/4fzVcfp1cpx+hxvq/yfKzduYL+PN+w3bcC1u7fF9fwfK2VANT7dkMaTdG+5Dl9TjU+XaUzy
Jsh5FubS/Oa+XHm+L+IZES+rLwevBZD3lHipqt070Ix401Npaelbb/fIkSOIeLfm69+KnZw6deqt
t8ub8F4VNP2/Jl5We/fu3X8kL9esWYOrJEDeZuJl2xw/eOuW6LNnL9yX8U9J3LeXbeD8v6akpCQR
1H/biTdE29vbv2+W1QLImyZeFvyiZb9/N/Fy2PJ3oL2mpaX9z8a+f0rKyclBVlbWW2+Xd3O/LPj8
dxLvwXjdazHeV/L398f9+/ffapvffvutUEDedmJrl5fXvm0h/bbAjfv2ti1yXrQTHx//1vvLy5Xf
hRJWCyDvML1saeU/rU1Fu++q7X9q394lL///NCZrefn/jnn4D+BlLYDUptpUm2pTbaoFkHeC8OwP
5vgHv+GzeuJNiOwbZx80v5Sx+usnXpS+/vpr4bJ6UV1+GSG/IuSvuGFe10c2ye/cuSP6yG2/bLPf
u078f9ns5j68KE7BL8FjHnI/39Qlw+29rC4HYvl//xUt7XV95I2nf7WP7yJx33jPDf+/F7mDeAMd
jwfuJ4+3N/nfPCZfVJf5x2P88V9crfe6PrKbTNHHb7755r3xkoPM/Lxf9P+431x+/fp1EXOo+pqU
lyUeI/y/XlSX5QXf60Xz9E36yIt6XvR8eKxz/960j7UAUkOJJw6/8mT16tXiZYEXL1587jz78idM
mCDerePi4iKE4KsSv+7D2NhYBOu2bt36nDBXvBKE3x3FQdvXtaVIPMA54MkBfn77aPU+8j3HjBmD
7du3i5dH1vAAq0j8Yjt+/xDzkzceVhdW+/fvh6ampujn0aNHX9se+/6ZX0x8XDWlpqbCxMQECxYs
gIeHxxv73PPy8sTmUu4j/1YXbD4+PqKP/IqcN+nju1JqOBan2Ly5c+fO//HbczmPI0dHx1dulFUI
tS1btoid28yz4uLi/3kuvCnP1NQUCQkJb9xP5o+ij/xMqysuXM7EfeTn9T4SK2o7duzAypUrxfxW
vJ6nKshNmzZNvBKFecQC+nXKIfOdiec4vxiz6r1YjvBCD97oyKD0ps+bZYWijwEBAc+d509STJky
BRs3bhSvcmHwqgWQf0jiyaUQuBxg48FWNWVmZoo3p/LEqjpYXpZYgHJdnkw8KatOVp5Ivr6+YsDw
a71jY2PfqI8sPBTfNeFgL7dTNeXm5opJwPf9sgY2Db5KM1NYVgx4/OqOqokFvaWlJdLT019rgfEz
0dXVFVYAa1/6+vpisiv4wbwtKSkRrwTh3d1vuoKK6yssD+5j9eAnv0tN0cd3sdrrTRM/bwZF5gO/
/qT6slcGg127dr3RIorz588LgcZjksGGd8IrEn+bhHnLfGHFhEHkTcGYtWZuk4nnCC9CqZpYGLq5
ub3XhR481xTLXJkP/P+qJlYg+E0LHKx+k5Vufn5+Amg4Mf+rvumbV2Px/Gf+nThxAhs2bHjjfio+
k8BWCD+Pqt4LPsdv1mDw49fg1Lqw3pNLgAVO1bd68tJaxYNiIGGNtLqmxOY5a6W8TI8F1atWU/HA
YetD4fpgbaHqMltuPz8/vwKsWPP7q2DHQq+6xskuGX7pHPfR0NDwnWsoPOmqvyG16uRjQcITtbpQ
Z+2fAZStORbSrwIR5iHzUrwqngCDLS8F71m4GhkZVVgPzNfqb1x+XeI+chvV+8iAz7xkjZq1zDe1
Ev+viQV4dV5WFcQMZC/iVWRkpFhFxRYAWyivEvoxMTFYv379c1awoj6/RJOtBAVoGxgY/OV9BWfO
nBFad9V3zrHg5vvy8+Y3X7+uj383cdssXKvzsur3a1g5YC9CdaWHlbLDhw+LMRsdHf3K+/CcDgsL
E8esALLloki8QtDT01Mc81vB+aWZfzWxTKiuxLLsOn78uOgjW5D87GsBpIYTWw+sMSje7Mm/rq6u
QvNiAcUTrPproasnrv+ib4tUnTQ8CBWCbt26dc9ZGTzZFUtb+YNCDEx/xXfPfXzV/TmxxvdXgemv
Jn7FdtW3ozIvWePixJoyu5VY8L0qcR0FmL4ocTsMhvy/mViDVgAzCzoGF4VFyNo4Kwdvmrhtntyv
6yO7KF7Vx7eRWGut/uZetnoVwp2B81WxGB6/rP2/Kg6SmJhYsb+JNVxuU5F4CSoLf4VFwdqv4ls6
b5IUfXyVBchCnK2ovxoX+CuJ5zBbB9V5qfgkAVsYbPW/yr3LrmB+5q+KqbHyo3AxhYeHC7dSVeuE
ZYSCL6yA/JXEbloG21fxn0GxhvfZ1ALI6ywT9j2yW4gfnOLV0CzoecBz/IG1NtbyWYixVvWqxJsG
2VXDVgBPRvaDsobGGiRrY6yxsFXDQPOmpj0LCX75HpvOPAEUfWTXFfeRA2+syXIf2bXzvjYXsubM
Qj84OFjwkgU/T2zer8K/ik+QMgDNmDHjpS9mVFhbzG+2tljQ8//i/8kxKdY2WRjwhGO3BLu63jRI
y31k8OGNjoq3C/MvC+2qfbx8+TI0NDRq2t9ckRi4OBbDVjL3T6EEsRXH/5/7x4F0Ho9sNbxK6DCf
+Y3K/F9YC2friscga8nsFmTLmoGEnxu7YN40cV+4jywsFe4+Bmce18xXtgi4j6zVcx/fl0uQYzU8
lrhvij6UlZWJeAfzVsFLjh++zu3Eb6VmwGXAZMuXrQFWXnhcsQuQxz8rkAxgf2VzIfeRLUOWN1X7
yPKD5zz3lcc493FdDb1HrBZA3iDxpGIfKLsJeEAozFMGFJ547NLgczyx2GXwulVYrAnyA2Ytgf3r
LOx5MPEAVQT0WPtljf1NTXoGB3V19Yo+KgCC3QI8WHkCs1+bz3EfX/X6+neZ2NqaOnWq6Au7RXgC
cF8YNPm/BwYGCq2MLbHXBX4Vlg677JjYRcbPQ2HeM1gy8HN7DNBvmlgb5z5ym9xHBiDWkFlb5WfF
QpT5zP+B676vdfisybLWzrzivrCgY36yAOE+8bPnfnLQlstfFwdgoOExyWOTXYBs+bDrRqGIKBZ2
MLC8aeI+cB+5f2zh8BhnIGIFigGErWHuI597XR/fVWK+sYXKAMLPnBdHcOLnzMKfn71iQQVbF/wf
XmfpHDhwQFjQ7EVgecBeAeYhJx7jfI7b+ivuT1aQFH1kNxvLBu4jf1uG+8RzSLEg4U1W3dUCSG2q
TbWpNtWm951qAaQ21abaVJtqUy2A/GPTf2sHWm2qTbXp/3uSpxZAXpVcXVygPWosZo+bgNnjJ8B4
7AQYjpbIVG0C5lCZiVplmclYqcy0SpnxGCqbMBHGhiaYqK6PSep6mDRZH5OnG2LyDENxLMqI1OUy
9SkGlWVTDaSyaVXKpshlVF9RJtqcUb1N/SptVrnPNC4zwtTpmvjqqxr4oNSzZ1iwYBGmTtGFsa4+
DHX0MWWKHiZO0hO/htr6onzGNKlMnfqop6kHEyrTnCmVMWlp6MFUTw+6WtJ/4bIZMw1haGQKPX0T
TKb/yGVTiVcGxG8DIxNxLNoknmjpGhOZ0v8mHk2SeDFjllQ2Q8Ooos1pxBsu09AyETwU/aR2NHVM
MUvHRPBS0SbnNbSNYWm1uEZiIo8fP6I+zcAsDQMY6xtCR8ugot/Tp+vDSM8Q+jqGxFe53/RroGMA
QyqfNk3Rb+KhtiGMDIygoSHxh/mhpW0EA2P6j1rGlW3S2NHRM4Wmton4v6JNGpOaxB/mx2Qeqwpe
UJ3q/J2pKfF3+kwjUSbanCnxl88p7iP4S2XT6Blz/KAmEi+OGKs2DbqaBjDSNcCsmfoVY02TjrlM
R7OSvzNn0NjVNYSeNs2/yVLZ1KnMX0MYUDkfK8aFjg7x0sAYM2ZU4a8Wl5lglqZhRZvMfz19I+jQ
81Dwd+p0A+jqmxJVjmn+1dEzgZ6BqTg/Ueavlo4x9A2JlxqGFX3X0DSistk09jVeu5qwFkDeYVpm
bYPNSk2R3KIz0tp2RkCdTjis1AlHiKIad0Z6u84IbSCVMYV82EmURTeW6nCZP1F2p64I8gtH9/4e
6NXPDZ8P9sAQrSNQ1fVDn6Ge6NXXDb0HuGPwdB8MNTiGfmP2ozeX9XXHgAleomzAJC+61l2U9xu9
D0P1j2HwDF/07u8utanqCVUdPwzR9hPt96ay3gN3Y7DGYVG37/C9oozbGDjFG6r6J9H58yn44vGD
GtGEVIfNwNiRO3B6mwd81+3G8OHu6NGH/rOqO7zXeiCYymdMckd3Kvuc/tN2692I3uUBMz0q+1yq
u9hoN+Jd3OFg7Q7l/rvRo7cbNHS9cSQgFjt2h2KAqgd6fu6GkeP2Yq9PJA74RWH0+H2irP+Q3bDZ
HIwVu+IxbrovlPu4QYVId4E/Vu5KwCzTE6JMmeqq6xzB8h0JmG0bgl79qayPK0ZMOAibLbGw2hCF
fsRrvnYA/ZqvjYTFhjBMI4FTE+n+/dto1XYc5hp6IcjDDxtsD4mx04P6PW3yHhx3OQKPjT4YPHQ3
elIfh47Yjf0O3jjsfAQTJuwRZX0HumPzKl8EePnD0PCguJZ5tHj5cfgEJ2CezSmo9JXKpmr5wmF3
PKzXhKIPjSfm0bBxB4iXMbDeFIOBNK64rB+NObPV4YJvoycfkvhLbRhYBAr+Tjc8Rrx1pTZdMc3g
KFbsTICJzWnBW6ZR6oewdFsCdBZ5YvXqmvmgVFRUOJq11MYma28E7DyEOXp7iBfSWFtktAeBuw7B
btE+MWe4XHOGJ47sOIwddt7oP9hd8HLkKA/s2eQDbydfjFaT+Ntv0G5s3HAK3gdDSZh7CT5yubW1
H3y8QmG28IjgD49fY+OD2O15HOvtj4j7cN2x6gfhtDcaW90jMYDkA9cdSL8bdobD9VAs1NQPiHo8
Bm3XBGG3bxx0TY9Qe66CTBYdg8fhZMwysEZo6OlaAHlfiT9p61mnLfI6Sd8RT2iuggAlZYTUU0bm
p9L3ztPaqCCwrjIC6ygjtY2yKDvTXkXU4boJzZRR0vNzxIQkob/aEQxUPYChk45grGkQxs4JwvCp
fjQ4DkJ1rA/GGAVCbW4wRmqewKDhBzF45CGM0j0lykbpnRL5QcMOYuSsE6JsjHEgVNV8qc2DGDbF
j9oLFu0OUz+CQVSmOt4XY0wDRfnwGcfEtYNHHcJowwAqC4XyYE08+eJhjQDIWDVtWBl7Im73IUS6
0GTV9UKfwQdhrH0Q4c6HEE/ldmZe6E/9nkIT6OTWQ0jyPASXFV5QHXEQI0YdhKedF1L3HMSRnd5Q
m3hI8G3V+lAERqbjsH8yNBkoBx3AXHN/nAhNxUkiM6sAEm4HMIPAdduhBKzzyICJVbjgxQg1Hyze
wGWZMF8Ti2FjvDF4mBfmLY0SZcsck6E25QgGDDkAnXnBWOOegdXO6Ziqc4oA6QAma52AHeWXbosX
2niNAMiDO+jecxq22Z1C+MEgeO84RZqoN4HZQSy3OIrQ/YE4tTuAtGJf4u8BmBgcRuDukwg+EITF
Zkep3wdJM/WBr0sQwkmpcVgfiMHDvTBSzRsue2NwPCID653jMWq8j+CR+Ypw7DyUiU1uKZg446j4
3zpzA7GWeGHnko4Zhv6ibNLMY1i1MxXrdmfC0DxUPJuRNP5sHBIFLxeuisHQUd4YMsILC1ZGizLb
LUkYPZH4S3NC3+w01ntkwdTWG+vWra8RXkbHRKK3igl8HE8hzOM4tq0gpY76N2yUF3at9hNlBzb5
YTwpccxfe2vipWcADu86BU0NHxpXBzHH6DBOuPnDf68/5i84gX7Ei+kaR7B/bxSOHYnDihVBgo+j
xnlj545wHPeLwzbHUOL3IcF3h43+OOgdAs/dIZg43U/wco5FEPYeTYOHbyq0jU+K8auhfxzuPinY
dzwdZjbBoj9q6r7Y7pmIAyfSsWJjJFRpbg8lWuMYjUMBOTCYtwrh4WG1APK+kt2y5TjR5BMUdO6F
3M4qyCHK/FRZAATnFcRlTFXLsjpI5TkEPsU9CEBCkzDUMAij9E9hjAkJ9dlBEpGAH2VAZcYBlWVE
ow38SdD7P1c2hgQ/l1eUEQAxiHCb3E5FPROpjM9V3ofuzW0aSdePmRNSYwDCn7TVm6VD1scexLod
Qqz7IYSSdue7yQshO6U8lzOwHHHwQsD2Q4ijshg3iY5t9sLxLV7iON79AKIP+cBrfzA8fRJw4nSK
AIpTYanwPZkED684+AUmizzT0aAUuByIxb5j8XA5ngQ7tzTYk+Cz2ZSApVuTYO+WDnvXdPFruyUR
SzYnSnmiNVS2fFsyrDcmEHCkVdRbSYLSmoBn5Y5UqpMBW8e4GgOQ23fukKU2i4DiNIL3BuD0vgAc
cT6FA44nhXA7LZexUNu/9SROuvtT2UkEMbDsCcK+bf444hpI+WAE+4Qh6FgkvA6Gw+dIFPwjUnD4
dBp2H0vHZvckbHBOhNOBNGzfn44dB9JhR5bE4o1xWLcnhYBC4sWqXamCPyt3pAh+MY/sXNLIOkkg
AK7CXyJb4q1tNf4ySHNdO+Lv2t1nYLLkUI0BSERkBOZrzkME8S3I9ZggLwc/HNriV5EPdjsGX8ej
AkiCPI4ROPsL8t15Ch4OJ+BHvOd8AAGI98EoOO8Kx/49UTjiE4PD3jHwPRQDV+dwAogIHJbL+Jyb
WwQ8PEMRcDwMe+lZ+PpEYNfBJGx2jRNA4emXij1EboeSsdklDq5eySLveSSVLI4UbHGNx859iaIe
lzE5kqW4zSNBHB84mV0LIO8q8SYm3rnNa9t5x+jL9lwwgJxsVgkgbIUwIFQFileRoq4CQIaZBD8n
6BUg8OKyoOfLqgCBOP+qsjdo820BCO8Z4I2MvOeAd+u+DEAMtXQQsWNPBSgwQES4PA8UCutEATKK
elGuhxDtKh0rAOTU8VAcD0mFf3haBYAwHQtOqShj4mOfgGQcDk6CyzEJQFjo28mAoBB6okwWfnxc
cY6IwUNRpiiXyjj/dgCENwXyPgzed8B7hF4WT2EA0Z6qiYiDlQDCoBFAQjBkf4AoYwrZJ5fRb/Ae
Apd9gWSFBAsQYfBQAEjIiUgE+UcjKDQWARGpMoBkwNk7nQRaGnZ6pVcAyAbPFKxyTsUmKl/rXsm3
Sl7IZe4ZFYD7HH9d0gU9x19XmZd0zVr3twMgvD+C9wHxF/t4L8+rAMRSdz4i9kgAcprAItBFIj5W
AAj/BjgfQ+ieSgBhOuZKloeHvwBp/z3+OOobDW+vaAEQCgDx842Fj1clcCh+uczPLxLBJysBZM8x
AgcCD7Y+FKCwh44ZUPZUKePzDCLivF9lmcfhVEF7/NJqAeRdJt5dyruWeQMa77R92SdlVxOAHPiw
LfI7SQCS2kYFofWVEdVIWVgYDCjsygr/SFlQRjupLLujiqjDdVNaK6O45+eIJgAZOOUYhozxxggy
9xWCfKTmcVE2bPKRCncTu6tU1XygOsFXWAxqVDbaKABDJx7GECofpXtS1OP67LoSbc46XtEmt89l
w6f5YYwAj2CM1D4J1bHeGDrpsGTtvCUA4Y16vMuWdx7zjmbFix2rp0mTdLDVylOAAAPEWnMv4aqy
W+glgQOBh+tKL8yYchCLDL0QSpZJvMchHCYrRXvmQejPOohjWw4h2eMggjx9YPT/sPfeYVGdT/v4
Gk1M1FSjiYnGmFhj72LFroiiYgEs2EvsCiJ2pfeybKFsYZelL71XEUuK6b3YNRpNNcUkGu/vzHPO
Ahrzvu/v9zHk84d7XXPtOcOCMjznuWfmnpnHLQFTZujgG5orQMJIkcjqDSmYMDUe23Zm1AGK175M
jHeIx5K1SfBPKMZ28pxXeObDnmwzeWYiNlKEwekYTqdwSmrsVD1WexcKHUca010tGE1/m0UbsmiT
kzZATtGMnBAv0i68CW44+J8DCDfZ8SgKXps8fuTvutzPnj2Nfn0coDxoQUZMMhJp81rsEo8pU7Tw
3W4UIJJC3vCGlTpMmKjF1jV6ASCpFIHs3ZqISZO0WLpQB1NECjISyDMOSoOjE/0urnqoKUrTZ1bi
oLIE0+eaMGGaHlv25sNPVYX9kRWYvThZ/N7umzIpWpA2f5fVmaRLECk+tg3bbdm2PIyerMMUWseb
fcuEbt2eYkygNTqO1iZHLKzbTFHLNIqKOU3ovjlHpLBc1//nAMLTDbg5kQlknvjwd13uObnZGDlo
AcyBSUgPMyB6lw5O0zSYNV0DFUUirNP76LHAORZTJmkQ5JUACwGGMcSM1e4JmDBBQ/bVwRwqpbA8
tiVj/OQ4LFlqIoDIhT4+Hwf3Z2DytHjMnqtHVES20IWHZmGWsx7TZsQjPDgFSnUaVMpMuCy1YOyU
eGzcYSVAkIBh5cZ0jJ0cL9JWkTJQbN2TjfFTEzBnoZkikxKKriuwh6KUqTMNmDbbICIRlfl+CqtR
XtzlyQ/vnVVD/NqyfiP8FW1xuJ0USWQ90hVmRVckkZS2ljiQgsckHUv+oxIHwqCRJOuszSUAybEU
oucQDfoPUgouYyQBAkcJvNGzTuRJZ5kEtyFxGKQbFINhDgaMpoeTQYH5E9YNmaTHmMX04M5NwYBh
WsF3DBypEakrFsGV0OcGDFNhxJwk8TOZDxE/c3CM4FhGLbq3HAiPUuCHtSGAsBfNtrx16ybsRs7E
ePtwEVWYD6oxcpQK3furMGyExHfkEYgwUHTvpxI8SCiBSVmkBmsXSLoe9NktS9SoilbBb1sMeg0g
XR8lnN2M5DlXiNTVYDs1XiHdmImxiDOXiFTWOHqgX+mrxCD6mkdALrwjqzCJ7Nyrn1Lkmxetz8Ue
5RG4rMpG34Fq9Ca9o0uyxIt45Av+g3UMOOwpb/IpE7nm3v2VGDJCK9JgG3zuHQfCXdo8TsU2p6mh
LVnOnPkS7dpPworFBuRokuHjaSR7xaBHvxg4TY8VEYnG14yhZFfWjRytRkKAkTa4ZAKZWNJJay1w
lxlZeisWLzKgO9mHbbl5RxpMuVVYtS2Tfr8Y9CT9jPlmikIITPcViO9jW4yaSCAdUC5SeMwjsS0G
j4glEC7HrqhaTJqZhD4DyJYDlAS82dgZeUgATO9+0ehJMovWo3cE8yK54nv5ZzKwbA+pvqccCM8J
46GYtnEvDW0pOJBcK9q0c4EfAWtWhBErF8SKdcayzj0O2ZFG7Fkfj94D2ZYqzJ2lFRFHxJ5EwZW8
QvYdM1aDWD8zjGFmjCPA5rU2YKgKvj6ZSNQVwHmeXuh60u+4eUsyzIYCvLouCa/0l2y+ZIkeKm0a
Du6VuCT+3GRyKiN1VRR5VMBuTALZSIUh9Hz7RBRCaazARMcE8bfhv5HH3hwCiyq4LrPQ2o8W63/Z
ulSok+4DyD9L69Ii4pEQPHLhznM5eGgZjyfp17MXVA92wNH2UmRR+IRElqc1o2ijnaRj4pxJ9JQH
pGhDikqkz1joswwwIgJJK0bv0fHiIeRIwpZiGkLeF+sGUnTAoMLRBkcTAwSJrhbRhkSiJ2HgcAKL
oTHoZ++PQTPC0H+KDy3EXeg3OEqAii0C4SiDf+agMbES38IkOnnW/DMHjtBIPMo95EB4Hg+PWbhz
zlZVVZV8PsIKdHihH9a6KetSV26zVOhH/8f5TipkBkjpKQaIgUMlEt1I0UZxhAYBm9QYOlwFO9oQ
w7YxqKgQ76vBmPESIbvZK10ACPMf08mr49/bbakZiellSMwog/vKJFGQMNUpAQdUFFkQMDCJPnh4
LG160Zi7XIVV3kbMWBhCD+U+0mkJVLLJw67GegKHURR9sN2cFqZIqauACtogE8W/M5EedAaV9Qfv
DQfCoy/47AeeSXVnCotHi/C4ClfX+WjfYSwOeCTBqkqG2scsPGH+P25crhMRiCksCbNnxgr7usyJ
Q1JYoohAVi3Ric9NpmglNjAZmTordnlRZDuc1pm9BoGROTBmVWJHQD5GUPTLm+SyDZnwIwDZFUxg
7KATv7fTwiQ5GquCA62lgXZaDB8XgcWb4rHSS4ex03xpI/TDiPE6wW8wGC/dnCuKFBh83TdJRQoc
lYygtcpk8mz3tHsWgfCL53jxmBJOsTZ88VwwHiXCz/ekSRPRp5c7tPuZRDdg/8Z4sdaGjVATqCQI
HUclY8dJ63LbmjgkR0j8x3RHqcjAbW4cjMFSCmvxYqNYa1Mo4oiOzIYhIR8bNyUL52WkPUWIvhkw
km7/vnRBqrPdd3knCQCJCE3HeIr4BpHz5zA7HDv9dPDcryYA2UtOTChmUEQYqi0V0cbi1ew4qiky
jsPB8EJBom/yzhIgM5TEY1/OfQD5J18MGDzM7M7RyLbog0NentO0+dV1SHzsGRzv2L2O16h8pttf
SHQGE05fNdTxZ/izdSR6ZqlEohMgSJt6AxJ9tlmKSBrwGJzG4o1+9KI0OV0l3bd7aRqaPtgLTZo+
T38JB5KX8WTbfhg2J16AjyDWmUTnf8fljp9J/46NmL9XHAhHHMyBZGRk3HVDZFv+/MvPmDXN6XYS
3V8D5XY10v3qSfQcAhbVDjXMB+q5EdbH7SIverdafI45kDxNHJRRKQhWFhBQSFyH2VoBbWIJ/CPy
ZBK9oo5E9wnLJY+uAKHmCngEl8EzqJxAwox2HUagWbMeaEpgz7Zs2qwt+g6dJ+fyq0SunkneldsL
6vL8rGPPe+X2fGzxLbtnJDqvSZ5lxbOi7vbi9cgzwz76+GM4jJuOjJh6DsRG6CZHWup0xpAkhOxK
FCmuhiR6yB6zAI9UmQNJNWQjKjITMbFZBMT1JPquoGJs9ymAXx2JXoVt/kWiWs07soyiihqySakE
IvMD8ETr/nigaSeSIWRLezzcog2mzNmNHWE1dRwIp67W7CxswCVVYcO+EgKdAsE97bhHHAjPh+I5
YXee52JzHHmuGdszJTUVS2a430aiR+3UIXq3ro77YC5Eu0+PMALG1AYkOkcd/l7Gv5DoXGHFqSpd
nMR3sPhRNBISlHUbB8Jke1BwOlISrVCq06HVpCFAVYYxE1bg0cf60lpsjyZNJpIt++KpNi9j294E
ij6qRVorPI7s75cH38iiOg6E3zmNxSQ8X9/nQP7BFw8i69Spk/D2+KHlY0r/jkQ3P3E7iW6ThmDx
P+mONiTR3dKkDZ03+obk9t/oRi9Kx1BnDdp1nY4n2tnjmZfH0gP6FP0FOpCMI7lG8i5JG7w8eCns
l2SL1BYLf+9fiPWF9WT7vQIQLkQYMGCAGPLGoHy38yLYl54/cxay/etJdC7bLQqXeI47dSwNSXSb
riGJnmLORHJO5W2EOUciydkV4r2hzsDkOn1u/Z4IdOvrgK69p6FLrxHCbgpFWxJvkj9J4vBQ88fh
vllLG+Qx8pIPk1dcK6qDOGdv2/i8BOFLElZ1z0h0Ht/fuXNnMQ2XI+O/G9N+8vRpzLqDRM+MoWgi
5nYSPUPWZcTUk+hpMalIV7GkISW6nkS3pucjI7vgNgAJia9CSFxVHYnuS7IrqlxwSHspInF080an
rhPRe/BMPEsRukLxvGzLXJIbJG54tkMXbPYlwIk4ImzJwpHd9gaVb2xDlntJovNAUjs7OzGwkc/W
+btpxIJEd76dRM8Ik6QhiW7TZURJAMKkOXMhHI1YGpDoBgIN5jhYbODBJLrQUeTREEASSG825yIx
3oKpDvPRvfs4ivpmoNWjbMOOJK+QnCH5hqQL7Cc5UaRRA2XiIUkITKKNFQ0ApELc23T3AeQffPHJ
fMx78GhpJi7/7iwC7gNRkVd6TAaEirb1JPrh9reT6JnNOa3VVSbRuyJXJtE5xcUprDwbiT6Cwkwb
ib6wIYmuk9JaC6VSXybLB49LQNtOE8jiU0kmkyhIRpNskR9WJckVseBe7O2GES6J6DJsKV7qNx+9
hwZg2FQm1qWfaTfLJNJkgkQXEdC9ARCe+MtFCGxHHl1tGyd/J4RMGDcTB9fKJDrJjpVqTByvgudy
FXJloAjdqsaUiSosd5HSWgwoXNY7y0Ei0bmUtyRchdSIWLi4xWPydB38w3MFSHBF1upNKRg/NQ4e
u+tJdO/9VkyYpsN8dzWe69CfbOVC0ke25WKx0Um2fJ+kgLy+JzF3RRRWe1sw3mkFho5Zi5ETOO2S
Wwci81dmYCTZce6ytHsWgfCobhuRzuvy74oRzp49hX59pkLFJDpFFZyuWuxKtpisER6xABHaEDet
1GE8/b891uqRFin1gez3SMTESVosWySR6OnxmYgMtpHoBmiMRdBT5OYbU4rp80wY76DH1n0SiX4g
sgLOi5MxerIRE2ftx0MP9yV7LZRB+GGSrfLaZBtfJ9mIR594AWt3Z8Ht1QiMnroIQ0Z7YpyjAa/u
LpaKFCiSm0YRMRcpLBW9ITX3BEC4AMG2Jtmmdx7525BEHzV4AZKYRA81QEmRx4xpGsx01ECzVy90
Bl89FszRChI9xDsBFgINLpFesyRB2NeT7CsikOgkbPdMxrhJcViyzIRYjQQePgckEt1ZkOg5Aky4
pHeWsw4z5xgxaSKvx5Ekc+Q1ydHwdpFZUCjWk9wkGYBe/SciRFuCJWu9MXnGIgIbHwIIC4I1UlqL
y3qnztQLEp1LeVXm+wDyr78YQAL+jkR/WibRH/8/kujJRYJEZyLcRqJzFRVv6oIcFyS61DQ4WJDo
pBusRPPmL5DFm8mygyRSXmTu8kY4hja9h/Byz9V4sl0/ul9EEoCWrQajz6Bg0TT4FxLd6d6T6P8L
44ThI2digo1EP6DGqNESWcncRuJ+KdqYNU0i1vsOvp1EZwLzlQYkuv/WGPQaqBKE4Ry3xHoSfbhG
EJb29BAzJyJI9Clx6N1fgy6v7Ca7PELShORZEpUMxLwRziQZTtKdIpC2GDbWE4892Znu95GsQeun
xwkSnZsGmUQfPEIjE8caQaJv9Gm8RsJz506hXYfJWGkj0T2Mwl6v3EGi241U15Po/kyik6c7JVZ8
zkaiZxusWLxYjx5kM7Ybk+jm3GqsZhJ9gBI9+0ZjhotEom/dVyj4k36D4/B8Bwbd5vKGN4wkkWQa
yST5nt+fxlNPDyJbrkazZj3pPkY4Qu1fWITZ7hmCRF8qk+i9+kdj3DQ9gfGhRm0kzMvLRtt2LvDd
migIcxuJzmtt3ZLYOhK9j0yiz5utFREHpwsH2/HnYmAvSHSTTKKzfZWCm7OR6HPm6QUx3pN+zy0N
SPRe/bmIQ4tWjw0kuzwor0t+pvUkvWXH5hXZls3RpYcLhozklDWntaLIpkPQ9ZVd8NyfR2BRCbdl
yeLvxUQ6k+j3Gwn/SwAkjADkiBxtMFhwd3lq0/qS3bI2ErHOhHlpaykCqZJJdAaR/IYk+qg4sYFz
eW4diU7eF+s4Chk5TyrZHebIXeNqUUXV/BEGkJbyQoIsnHJJkb3pvgQgY/HgQ+3lzziSmEiWolv/
jfTvZEgk+hS9+HcYvLgyq7EBZMSomVg2R4pAuPOcyfOe9GA6O9aT6BsXS53o48aqRPMgk+h+G8gO
XHhAtgjZInWix/rQ72CvERvnBo+0OhJ9qpNOVKa4LDaJsl5OYS1cZqZNT0ub3wF502MQ2d3Alq4k
ZST8IA/FAw8MxYMPcgphtgwshaQbjWnzY7E9tFpUH02gqLHPgBiMdzQKUr0xO9EZQDq9NAV7t5gF
ia7yMcN+nEZUYq1bpqOoxCJSKjMJTHrR/5E70i1hzIGkYDlFHtwpPWGCFtqAZNGJ7u1pEYDC5Kt/
eI7oRPfyz8dQdmzIvkvWZwgAYRJ9zOQE2hzj0bnHYnnDe4ykVLbj5yRLSFIFELNj06xZNzRt2ku2
5SqSdDz+xCgs2ZwnJgIwiW5nHys60WctThERSKN2olME0rWzKzT7TKLrfO+GeEGWc/GAz5Z4oWNO
ZNRoaV1uWRUnAIQ5J4epWnJiYjDfmUl0M8yRSXBbYJDsS04L8yBMoq/fYBF2HMZVVAczYNTlY9/e
dAzhTMTIODzz7CAZiLuQXJVtaSQJJtlJ0kOkqx9q3l6OVPj5DiE5gC7d58InsgzKxApR+ssAz4T9
tr1Mot+PQP71F3Mgxkfb1pHoTIhXPsOd6F3vINEZULrehUTvitr2XW/vRJ99Rye6jfCef3vX+Qju
Lp+fgjYdx5DFHyJ5ieQNOS86S45E+ssPa1c5HfM7yVmx4Jo264cBDoEYszijvhPd+d6T6P+Xl+hE
d5yFlAMSic5gkeangdJLTe/qut6QLJlEN+1X13EgeTKJzv0g9Z3ocVBGSiQ6AwWnqpJItInFCIjI
Q4KlvhOdoxC/yAIK65PR5pkXZVtOle10nGQKSYScwx8ovyfIqYNioWvXwR6bfQtFmSmnsLjrmkn0
zfeQRP+/vvhQJ4dxjkjnxsAosyDIY/0SEbZbT5ubiXQm0pmhD0pEyC49bW6JSCNPOjk6CaYIC0L2
GBEbYBakempsGpL1VkQyia7JRpJV4kBC9ZXYGVSE7RRZ+SjLJQ4kphJb/YqwdncpFm4IJpBtJYMx
b3Jfk2jllJYHSTsSO5mre0/mRA6S9CNHaWEDYr1SVLqt8pKKFP6VTvTpi2G9k0TfdXsnOnemh3sl
3NaJrqUoL2CHEQkBEonOHIgmRiLRI8Oz6/gObhj082US3YoEbT2xziR6ZGQuZjnNI7s8ICI2hSKL
5BLJajn6dZRtOEQGj59JfpEcxyZ9sWTtfiiNh+oaDLljfV9I4f1O9P8mALmTRBfvd5Dld7uu091G
oqfevWt8wV91HIkMn29E+57TKMJQyN7eVNkrflleVJzCoghFfH217L38QOAxBJ0HL5QquO727yxs
fAC5G4nOHeb83lBnayqsI9HD6jvTG5LolsQMijD+Spgb08v+okugTdEvKhGv9O0re3scYTjJ4NFR
RB4MFE2aPC7bOl225VE80boL3NZFCO+4IYnOVUMSJ9L4o0xmT3FEjtqM9CgDMqINyFQaCTSMsMYY
63R8nRop6TKi9EiLTkRGjBnJBC7p9J6qpPdYikJMqchIz0V6dgFScglwMysQaapEcEKl1I2ulcDD
T1WJXZHlolt/6dYwPNXmaTkKYSfGmWSE7EVzGnWQbMfWJKclWzYJRscuffHqngwCkEN1ACK60oNs
hQmNDyCr7yDRbaCRFtrgmjvU6TrzDhKduZDbSPR4aXRJwwos5kEk4ryeRNfxO93HxlqxbPEyPPSQ
QgbjsbIte8l27CWe8Qce4K9PqIuamzWbBftJMwgoSgV5butE50ZDW7PhfQD5L0lhqR9sSKJ3RebD
XZHbqiGJ3lVwI1kPS/Ow6kj0VtJnmUQ/YSPRJxsEOX5bJ7qTUei4o9zWszF8ThIG2WvRup2dHMKu
kxfQdblaiFNYBpLlJJ1FukqhaC/fT0erJ7phwGiVTKJLFV7cpDhwTKzgV+4lif5/S2DdwoTxM+Hz
aj2JvmuVCo5TVPBaoaoDCu7zcHJQYbVr/YBF3R415jmp4DqTuRKZRI+MxcJFCZjubKCIw9aJXo5X
N6eKNNb2vZmkKxelvLt8cjDJMQJPtX5B9ugYgL1kO3LExh5gkezhDZIfYK4q2iRA5aWuDpjolCx6
F2wkusuqTIyZosPc5emNHoGcOXsKA/pMQcJ+PfIidEgLTsBKNw3ZTY1QzzjkRiQgKzwBniu1ZF81
dq7RIic8DlYCEb9tZLOpaqxZHIsU2iBztGZoAw2YOycOC9wNFLkVIzm3EqHxpaLL2WGWAV5+BQhJ
4GqsCsxfloH+dp548KEnyTavysCbT/IHySdyOpDBt6cMznaipJfXb5MHXkD/YZsxxTlFzCGzkejc
6T/WwSD4EO+Iw40KIDk52Rg9ZAEsQRKJzvOunGdoMXemFlqKOgSJ7qeH+/xYzHDQIHSnRKJzifS6
pQmYOkULz1f1SJLLeL22p2CKYwJWrJQ60Rk8fA9mwtEpAfNcDaI3RCLRszHfzYxefWbLfNx2Ofo9
J0e+iXLEtldei67ycz5fRHktW3XEBIcIuC1LFSR6FJPoFHlMn2OE07xEQaKr73ei/xeR6M/9DyT6
Y//fSHTRIT5cI/VoUDTCJHr/O0j0IRP16NU3gDyPJ2Rycr78sAbJOebB8gP8jJxfTpMJ4SqSavq+
SaIpbuAwrdw0yCR67L9Kots1INGTDmokEr2fRKKbZBJ9ttyJLkj0rRKJ/mqDTvStdSS6SpDoPRqS
6BqpE511gkQ3l0KfXEYPmhEdXuTo7FHZjs7yxpYi55LtZABuQRJGsktOYRWJlEKLFiPQZ0B0XSc6
p62YPGcSlBu3RCd6I3Mgz3aYjNUEoIUxBvhvixf5ebbRLEcNsiL0SDiowzBBoqsEiZ7om4DUCKPY
8FjHay3E24A8XTKWLooXnehMonvsTENGEQGiV6b4/ZiQnelqRqiOogPfAgyyS0DrpxloX5T5t5ky
KGfLzoujXC34tGy/BTK/xDxJINo860C21Ai+Q3Sib8uTSHTuRHc0/GskOneiZ/+lEz32L53oNhI9
Yo9JcHJcpGAvd6InMok+SVtHovvZSPT59Z3oW7amyCS6BT37x6B582dkx8VFLsvfSJIjRyIrZPDg
TEOJTLAfJqkRINKp8xr0HagVTYOCRF+eTP+OTKKvT7tPov/XkOhN6kn0wsclYBCd6M92qwMLSwMS
/ZhMojPRfjcSXYxzHyuPWZdJdNYxiW6rmBruxIthD5o+0FLmPmbKZaYr5BRMUyl1JVIIzH+Ey0By
keQYHn5kMD2oQRg0Jq6+E72ORFdLJHojRiAMICNHz8QS5wgRfWRSdDFXJtFnO6qkibwUbaxfpEZv
mURP2KNBUYQGPuvVghzkqpegLVInutZGopPd1sskOvMfHH3wOPf5ixLFUEVuMlyyxoqOLy2UAeJF
OWf/pvxg2lKDz8rXznLksUcmNNVo84w9bbgazKC/13YxfbZCzHTqM1AavyGR6AWNCiAvvTwZBzbq
kR9tQOx+PudDInnXL4lFTqSePGodZjpqxbiXeeRNpwXrkBFlxIqF8TKJrkG8rxE58cnYvU3q3h9C
gBMUlYOMwirsD82D3RiJRF+5OQMR+ir4RJVjgqMJT7YeJJfudpVBOFt2ZBSyHR+Xr/fIaUL++mUB
MB1fdsNAuzgs3pgtOtG5nNdGos+kdb/jHnai/59IdAKQrl3coN5rhjWcwGIDFwlIBRs82p1J9Ehv
HUaNIfuSLTavkjrRGTAEiU72lUj0JJhJ77ZQItEnChI9R5Do65hEl4sUfCga4XHu+/dnwW5UNJo/
/Iy8JofJfJyPXG2pkJ9v5uuekPlOjug+IzmJZs3sCSi8MXJcgph7pUysJNC3CuASJPqe7Pud6P8N
Lx6maGz1zG0kOveCVLe7neeofFbqOr99xLv02dr2tk70EgyemyyGGjYc3c4bPOsEuS24j3QMnBaI
x1p3kaOK03JFhrfsGfMC85PBwl8u+ZshFtwDTbvh8bYj0HvcToyYbbm9u5073meZ6sbBNyYHwt2/
sx1nIdUnAoUREjCk+6sRvV0i0fme9TkUhcR4kcd8QNaFS8Ci3aUWo98LwvmMkBjkJ3AnejKClTkw
k11TckqRmluKOFMhAnhgXUqRuE/OoejAYzdatGIiMonkS7nM2SpXDD0pej8kQn2O3McwQfSFNH94
AHr0nYrFm8gz3V4ozrrYLuftN/uUYTl5zzzqvdFJ9NOnMNXeAVmRibTB6WAlwNAeSECoVzxSQ3TI
jCAdicFPhyDPeCQG6CgqSUBGtBFJ4SYE7dQj1t+IjBgTMmItyNRbEBWeArU6A+n5ZYIHiUuvxIGI
Auz0z0NoQhkBCPMhRRgzdSGaNOkpA/AJeRLCW3IhB6dgPpUbWwfL0chQYctWj9vBbvwiLPfIxuod
hbd1+nMlFs8cYyD2CqtpXA4kJxsLpixARogRFv94JPnFIXirFiEeWiT5x5HEIzkgHpFesfDfTLpA
smeQUYhyrx77N8VDc0CPxEAjzGFGqMLTsdvbgtCANMSrrIiLyYQ2OhP7dlngfzCF7q2IV2cj2I9A
s89Q2en7UgZiXpeVck/NUjmdlSw/37NFKrtp04547vkRcF3qCW+ffBwILUAk/33iJeHu9N0BeeKa
mw7nLroPIP91JPr/1nX+d53oueklGDg/VYowXBuMF3GVCPMRrKNNfdD0UDz4yGCZ+6iQibMzsqfy
glyVkUdSK2+Ey+XPVKB1+5EYs5h+3uJ0qbP9L93t9brGJtFdZs5CYUgUKqJj6+SQuv66QhmL8mit
0FWKa1kXFYtqVSyqYiTdoRgCEj1tilnZyK2qgrW0Alkk4r2sAnlVleI6v7oG23bsxAMP9Je5je9l
O1lkGz4t9368Lnt/B+XGTP7Mftg7LYe38ii2R9XAI6IaniTbeEw5d5/Tdb2OPGnuA5ndiCT6pGnI
izYhm8CDU1YcdeQr9cgm4MiO0Muiq9PlkOQpDcgl0CjUmpCnMonrgngLihItqKSNtLwwB/klZcgq
rkBiZiX0BCIJqVVQmSqgSarGiPG2BsyFDUqgl5F0kqO7NTKovCOnrk5IhO+DM7BgYwi8o2qxPZwA
OKwCHiHl2BZcJt75nsUztJykEi7rVI1Iomdj5ewFyCZwTQ+LR1poHIFvPIGwdG3TZTCHFBmPDJLk
SAKbCIOQNCWBMl9zlVuMEYbYdJh1mTDEZdB1hnjX07uJdMZ4FitUkQZ0fGGEHMFpGthygFwc00JE
vgrFEZFNkCoufxOA0r7jUARp0qC2VEFpKhMSZShFpL4E0cbSeh1dq+hvNtd9830A+VcjkA2boHlI
ItEZFCooymBiPO/RehKdy3WzW3RFVov6g6Y4UuHP8GeZeGcAyckoR6AhH+9+Ugb/2BwMoWhkkHMy
PIKz8NZHZTBmF2DCijy8NGgVWrR4An36tELz5lMEWDzwwBIMHqzAU089IHskfeS6+r5yDjULiiaz
0G3EajHGhIcxDhytFacQ2sCDS4WZBxFj43lqbyMCyM2bf2LJonmoMsVS5BEj5J3iJHx7oRjvlVmQ
ERBDkYgStckGXD1biC/eyER2qEroSrWx+OrzPFz8JBdFBCLWgChkGxPx/qdlOHOpGpYS8o5NlQi1
VOLwO1W4eLUaxceqobQeR6/B49C27VPo1u0R8py3ifzy448Pw6BBCjz00KNyjnmc7PG1k21qwZNP
j8aB6ARoMw/DfX0aJjoZ4B2Uj7jsQ9Baq7FxdxbGT9djnTd5mVmHEGkuxJz5jQMgX3x5EivcnVGV
mioqrrI1ifj87Vx8fbYYNdYUMW4jk8Di3UNWXL1YghMVmciM1sMaY8DRggxcuVCCz07kIjsuCVkE
IDV5abjyVRkuXihHUVUpUgrKkZxXgc9OVeHsxWpkldPvZyjCk61fQOfOT+G5556US3bj8eKLz6Bn
T4VsOxvJO1vu7Oe0Syi69hyH/co87AwtgcOcREyZbYRXYBE9AxXYF10KZ/dkMURw/e5cBMYfwqrt
jQcg1qws7Ni6GoZIEyIPxMGkMuL0ZwU4+Uk+jNEGoYsN1uHDt3Jw/lQhss1JCPU1IIIiuCNVWfiK
bFmalyHpKCrJKcjFhYtlOHq8EEFRVviFEWhYcnDmbBk+/KgYWkMh1mzwQ7NmrdC796N47LG+copv
Jz3vzci2Cjll3V12DEfJjmS6AOi5c1yQnp6PgKB0TJuZgGWrjDAmZiM1NRcxFPE4u+gxb4EOmlgr
/W4lWLFiHTIz7wPIv0+i36UTvexuneiP/ZVEZxA59kIXnMsPwc83j9FPrcG1X2uQWvsmTNUncOn7
w6RjeR1bfYLQ6qnn0b69AhMmKPD00wo8+qgCzz6rwObNCmzdqqAwtrk8bwiiAqb5w8/jmWdH4eWe
K0RqbCRFMkzSi473YWopZbWonkTv9w+Nc/+fXjdu3MSqNW64eiEHJxLVeDctFr/9UkFfqcXvv1Xi
vcw4vGlU4fuLBUJ3i2z0abkJr8dH48IHVqFjOfdWOt7QhuNMrUHWHcKV76vx+nvVeO+zatz48xDp
juD6H4ex7NWVaPnoo+jVS4FRoxR45BEFWrdWoFMnBSIiJPtKUd1Z2ZaeaPVoB7R9dhwcnH0Qk1Ij
ptKyHbnDd9IMHcIMFQjQlmLYaI0gfvlYUl9VCQL4TOq5jQMgn3/+JTx3LMCFLwtQlBCLE5XJZK9D
Yg1d+aoIpcZ4HLYm4rffqoTu118rcShNh4qkeHz3TanQ/XnrEN6sTEVZaiIunC6Q118NPj9dhpLD
xXjn03JhW+A43vkgCyPGjkPLls0wYoSCNj4FOTYKPPOMAsOGKRAfr8Dzzytknu6WqMhq0sSeAKcH
2rV3wMJ1cQhIqMb8FcmCmGcyed6yFPhoK7DWO0c0ZLItGaT3xVRimUfjAUhGhhU6vSdOFKUhxTca
n7yRKduiFh8cSSddFI7nJwnbsP7Cl/mwhGhRYDTgjz8k+/74XTkyVQnIIufm++/Khe7mn+TE5GXD
nJCGU6dK5bX6BvT6SHTs1IUcQWn9sd1atJBs6eKiQHCwQi7ZDZTX5KcUwXVA6zZD0K2HG5TR6chM
L8J0pwRBzPNRt37+6bBmFGHVapOYzMBFJJu2WJBtLcfK5RuQeT8C+XcBJJRJ9OclALlbJ3ppAxK9
xNaJ/qz0GYtcmXWkfWf8lreJfmKl2BzxRzHwIy3MH8zArRJcu1ZCC2EN7Ec/ijlzpEU1erSCPD5p
s8vMVMDeXoFJk/jhbSpXakBEJ63bjMKgYXEUWRjruA4m6UV3O0Uh4ljbhakYMkXXoBPd3Kgk+o0b
f2LlKld8+5EF51MjcCEjCr9eyqff/TCuf12AC9ZonE+JwLVP03HrVg1u/FKGS0UanEsKwzevJeIW
PZB/3qzGVQKOs8ZAfFsRjj9vVImN889fK3Dj2xLc/KFUgMfnX6Rg6VJHzJiuwJDBEvgOH67AwIEK
8t4UUKkUYiPkiE6heE5OD94SpZQvvuyCwcN1WOuRjQhxrGshRo6LE2eCzF1M3mdCOQI0ZZgy0yDO
bpg0Qy/ufcjDnj3HtZEA5CQ5Eq746dNsnMnX4avaJNy4XiHs9uNJ8nYL9ThfZsRvZBOQ7vqVIpwv
1uNciQ4/X8iX7VuOr48n46saM66dzibdISG/f1+On74qpXcG96Mor4jCuHF9scRdgXbtFCLa6NtX
gVmzFCgslBya8eMV6NBBIVcL3hTplqYPTKUNbgfsxhiwZlexGKG/aGO2IHl53PmC9Vmkq8Ka3UXi
PBEG6RkLkklXA5dGJNEzM7OgjtqEN1IMyPWPwNuFiWKd3bxRjRM5rAtHrSkO18nZufVnDT47noqs
YCWK1Fp8d7lY2PLiF3nIjVAjLzIK5wjUWfcD2a8knT6rT8In7xYQ2FQT0Hpj8KBnsWSJ9HzzGuzS
RUG/q2TLmTMVmDZNAmeJ4+Tn+2Nyagah76BITHVKRJQmB7H6XLgtMYoz0bnQwTc4A/HGXGzYZpGO
gCAbe+xMgc5cDNdF6+6nsP5tEt3Q6vZOdO7rqLrj/HNOU7HceU46f/ZwBwaQLvg1dzPwUxpu/ZiB
W98l4dY3JgIQC069H4MlC0dRCKtA//7SZte1qwJubgq88ooCJpMCH3ygEAtPqs6YLZOXi9G81WD0
Hb8Pw2dZbjv/nK/tnEyiqqtO5yaT9QI8GpcDufHnLSyZPwtfJoXgbEokziZH4Hx2DK7UGHAhRyXu
WX8uPRpfH6JNsVBTp2O5XBGPS+XxdB2FM6ZgXM72w/WTqcA1erDZq/62jGxZicNF0Zgw/iVhP97Y
+AFle/LDOXSoAjU1CrzxhgL9+tmqrxbJG58LXuo2Bmu2W7Bxdz4ORFfgoJKEPGJP7r7ekYO94WV0
XyFkZ0gpfTYH3kEl8FFVwjs4HzOdGyuFdQqvujriu4pEXC7S4VKhDlcPm/HtGym4XKIXusuk+7rS
iO9OpOLrCiMuF8Tj69IEXDlkwvfvpuGbo4n45lAivjuWhO/fTML1szm4cTGP7Ei2JBC5caUUetUO
ijAeFRGbo6NCpFf4fexYBVxdFXjnHQVychRo1UrRoFdhNnnQUzBwpAuWe+Rhzc6iuuZLPq2Qu/f5
NEi+thHpPOKdBylykUJjk+jW7GzsXLQAr2spalOqUBujwvtZRoqIDeKepSZahbdTdPgw14SjsVpU
quNQoYrDUZMB7xUlo1avE/fVaiWO5Kfjg+O5eL3MimprOo7kWVFoMWH5olkYMECBHj0UBMgS4HLE
weswIECBDz+U3vn5lka4O4lZWC1bjoCziyc2e9H6889DQCQXiRTCJ7QAG7dnwnt/jtD5k84/vBBb
d2Zh264s8ZkQWqdOczci6z6A/DOv8+fPi8Nmzp07d89I9LsS66y3AciPFty6Sh71N4m0+SWjItsb
gwa0Ed5dt24K0b3bpo0Cs2dLDyp7fLzgdu0iT/oZhZxbvirLbjzXfQrsl2T9/Tj4u42NX3TvSXQ+
hrWsrAzff//93TkQAhB3Zyd8rgvEORkUziSF14kNKM5YIiSdmXTJku6sTZck6QSAZPnh148pgvu2
HGAA+bESkX6r0aVzK7z0kkLOJUsAbLNlx44KLF+uwOpVCjz4oEKuEoKocmvSxBGuq3fDP+4IDhIg
7CPw2BNVjr0MJOpKoTtAYCJ0URU4oJJ1JHujaCMMvDcAwmfRHDt2DIcPH/7bCbJfnDyFtc4OhJlG
itJ0Qr7KT5CkIOF2XYGkv1QYj8tlCbhcbpCkNA5Xa0z4lgHkjST88kkGfv+SNpofKvDL+XwsXziW
1mQzsf44hcppFY6IHRwkW77wgrQmJ0+2OTUhsi2Po9Xj/bFhvwW7lTXYGVVFUQWPbK/AjohKcb8z
skpcs45F0hEIs0RUY8FG9T0BkGvXromjbd99993/EUA857jgTQKQIzFq1BJYHI6MEVIbrRa6I0p1
vY7uqzXxQiqVcaiMkYTvazQxOGRNJUknycCxgiykaJQYOuBlkYpmW/K6Y8CdMUN6ru3sJBA5cEAC
F6kC64Q8rkSPHr2GIkRZjODoEhIe01MkJCiqWNw31AU20AVGFiOU1uvMuZvuA8g/Usly8iR5Ua7i
PBA+PvTvzgPZtnGz6EQ/butEf0Y6+5wJco5GJBK9K3JadBVEOl+zrraDlLqyyiT60Q4ygPxOXt6t
CnLJ84Ff0uA6ZxB8/aTF9fDD0sbHC+v4cSm3zDqWRx5ugsfa9MFjT/aXB619JUi27sPXwM7RJE4e
FM2BtjPRpxuFrp5ET5VJ9DjR8T7qHnaiM3CwLXft2oU1a9b85fhQaWMEli+Zh/MlaimyIPnmdRN+
vVSAb8kDtoHH5coE/PpVPn74OB3n0qKF7mK+Gr+cy8HPZ7JxIVeNM4lB+Do/EH98my9SVvitBt+f
zIX96NYIDZNSAJxjZiDeuFHylDdtUohxEfy1Fi2boVtvezzyyHC5HPUjPPbEeGzdp8GshcmY6myk
aKMAUaYKUcLqujIFE2bosZW8PdZFGMuxyiMT4xz1WLElA5GJFfDX5N0TDkSpVAobbty4UZyUaTta
ueHry5OnsXGVM348liyij8ulBvx0Kge/XS3Ct69JOgaQHz7MIF0Jvn8/A5coArlMEQhHH5za+ul0
lhS1HDXjxw9ScfNniuBuHqJ1eQTl1jA4TFPAy0sCB04Btm2rQGysAq+9JgEJp2B4M2z99BOY5+pA
tpwnpwLz0a3XWGzel46psxIxx90CH3UJQnQEvLTJzZhvguNcE3aHFQqdn7oU85clY7KTAVv25yLM
WIV1O/9zDoQPMeNTRb29vcWR1Tk5OX8LIIFeK/G2QS/A401TAq5+kYcrn+XhDWO80B2nqOPie1n4
9kwB3rUaUcXRBgHOF8cy8N25YnxUnooqdTwOUQTy4fFs/PhNJS6dKsdbZYVYPNcFHp4S8DII8/PN
z3p5uQK5ufUcCNvy+edfQoeOw0QFoPR8H8QkB1es3WzFpGk6LF+bSsBQJMBhi7cVU2boMH+xGT4h
hQJQdh3Mw3Rau05zE7HXLw9h6vsA8o+9+EENDQ0V1zExMeLgmfp8/Q1xohl702tXrEKg4hlBojMw
/K/j3G0kepvbO9GZA/m1wEPkld9+Rw+PbfNwcMc8TLTvBl9fKb3CBFpxsZR64XBWo5F4D1OiAl27
t0D3IfvQs78vnmxth5aPD0DHfvNgN8uA/kPV6D8wRnS0M//B6Ssm0fv/hUT/Z8a5r1q1Shxdy691
69YJr8/24hP0+Kz0S5cuY+nyebj2VbYAC05bcR6eycWbv1XgQp5a6AUvIpPonMo6nRiGHz9JryPR
v38/Fad1AfjuqFqAR3auP7ZsnIuD3ssxeuTT8A+QPDrmOhITJZ4jK0uBtWsVWLFCsnGP3p0xbU4c
Xuq6Hi0fHYAOLw7Fq9v2Yt12q+iK7tknGotWWZCQTtFFcK6wI5PofNaCylSGyIQS2I3WCjKYjyUN
jS1GpC4PzvP+MwDhQ49mz56Nr7/+WpypwufLX7hwoe7rfGwwr8vXXnsDWz3d8MeFPFzMUuHbN8wS
r4bDBBiF+CpPg68rdbj5e6XQMT9yuUJPEYgOv/8okejMHf1AYPJtrQm/E/D88ls5opVbyGGaiy1r
XDBrZlMBvrzxlZUpsHevAhMnKlBZKTk4YQTU7u4KTJ/phN9v1NIztAEjRozE0OHjcIDH8ruaxZnd
TJp7HciCKbsCKzemCJv1IPsuX58Mo5WivIAcYXPunp4+x4CEVIpS/P5zAOEzQBYtWiSu33nnHSxZ
sqQOjLkniZ9tFp3OAL3BE6cq03AoTInzb9UXbJx5LV3oPim1kei1uHoqH1UUcbyemkj7RJXQ/fJD
OWoZgGJj8NvPlTh/IRO7di/GUtc5GDNsNDw8mgg7chFMRYWUunr1VWldchFCUpICI0cqMHXyBgwc
FoXWbcag1aP9MWKME3bsSxEcEduNGxH3+OaJCGOiQ4LQMYm+ycuKMFUJgUmS0DG57r4yGRGaqvsA
8k+9du/eDavVKq7z8/Oxffv226KTzZs3Cw9mQK8+iH6ggyDRxTh3eWwJn39u60QXJLoMKiVPSQAi
SPQH6sebMID8UUwL9VQKRox8Hlu2KLCcNrSXXnyCvLcH8PLLCpSUKCjcVmD9eind0r27AlFRCgIc
BcbYP4yuQ/di0AjuWo/G4Mkq0esxcj6BxQgN+g1UioOibFwHg0U/Agtxzro41jYVQybr6kGFeZB7
ACD8MLq5uYlDpfjl6+sLi8VS9/VDhw6Js6f5LO9Jk0fgh88zRBqKuY7rlyWwuE6b3jmrUkQlP36a
IXQ3fi3HV0VanDaH45vXTGLDY5L3yhEjThsCce2ICjnZ/hg+vDn27eOUQBM892xr4clxnv711yVv
mR9MtiPnn/PyyMYE0AOHvASX5WTHwbH0wEZiV0A69NYaeB2USF6uCtrglYm4tEoEKJlEjxUjIlyX
JkFjoY3WUEbetTSeYrKTDlF0H57wnwMIHyg1f/58cdQqb3Z8qt5HH31U93WTySTOnXd1daM14oxf
Ps7AucwoXKqMl8GiFte+sOJcVjQuFKjx23fFUkXa1/m4WKgme2rw8/kcyb4E2t+9kYLvjpjx+8UC
eO90w9SpBBRkS7thj+Dppx5D06YK7NlD6+9tBT0jUvUap1mcnCT7hoYSgDhNxw/XasS/c45+Tlpe
MUkVVm2wSJserc1QZR7Sciuw+6BVdLxz8cHOA5lCF6HJJxCWznBZvtaClJwqHAj8zwGEU9MeHh7i
mlPUvEbZrjag5qOs+fmeNGkydNrt+DQnCTURMfiswiKttT8P4ZNiSfduugF//CaB8dkTmQJAjhr1
uHZVqq66eroQh2ITCEBUOPNZLtlngEiVbvMgx6/z42jZojkee0yBtDQpGmYnhqssOWXNUd5778lg
PG0Dxk4ykN1iKIrQiKjCP6wYkxx1wpYTpibAJ7hAAMjcBWYBzgwqOygyDokpwcoNaaKjn6cHrN+a
gXD1fQD5x16cHjAYDOI6JSWFNqF9d/2c56bNMLSq50AEid62623nn4sR73ch0fkzgkRvL3Egf5Z4
ItXoAWdnBd56S4EjR6TKIM6DcqkpP5jspXDlFacOHmquwNJlCgrBFejQuTfs5iWKIYs8L2uUWz23
wRHG8JmJd5DoFtiRztbdbgMW7kTn0w7vJQfi7u5OD8F74ppTBtnZ2Xf93FKX2fjSEopzyRKJzlHI
14f0Ii0lpbUIWDJlEp3Ao45ET6VNsiJBItHp+qw5BN/mB2Hl/Inw8ZVANyNDSgdwlRrbb80a6aHk
sl22ZbvnFAK0J9PXZ8x1QbS5goAjFwfDCwgUKqBOKhfCIzx2B+YiJrFMgAWLX3QhvH1zKMoordNx
1LHDJxsh2mJokysQFv+fAwifiuns7CxSgAzMCxYsqAPm29KvZ85izeyJuJxCtkwMFFVpl3Ii8XVp
DM5bgsU9y4X0MFwpU+FCWjDOmQNwLjUYF7NJdzgWl0qjcamQopdDCThToYX98E7IzpE2OAYRtiVH
HMwh8SbH4MKpFrYlR3VbtykwZMjDCAjxxRtvV+Gt9ypQeqgcydk8CbkU+tRi+IRmI0ydB7O1FBZr
GZIyS2lTzEVgZC5MGaXi+FyWSG0+fEN4ekAJUnMrcTD4PweQ2tpa4bjYHMKFCxeKzMKdr+zcXOxy
X4g3YyUO5KhaI5HoViOOqiQOpFapxjtpenyYm4hjcbGoVsejSh2H4xb6XKEFRwhMOIV1NE6D2OAg
jLV/RADsm29KxRtcHDNkiOTMsC25UIbBmW3pPIeikXX0mb7t4H8wFr5Budi4PYNsIKWqOGW1LyAf
GzwysMcvT9wz3+ETUoCNnpkUoeTUcSCCRPe2YtvOLHF9nwP5B19MUrJXwu+8uGwpmP8/JPrRv9Pf
QaLfKNqGt2sDMXhQcwIvyYPjhrbSUsnDY/KXF1xMDAHGC/Sg9u+MoH2uUAUuwoINGti5pf/lXHMb
v/FXEj31fz17/V4BiEqlwrZt20Tq6s60Sx2JfouAxnkmPtffQaLLBPltJPodOgaSM0kR9SS6ORjf
F4Yg0nsxJk9REGApKMKRiEl+aMPDpQ1w3TopFfgAPayus8chYO8qsrkXjNn5UKVUIJYltUIAAoMH
v8fKegaFOh19RivrbUAjPiN/v9pybwCEow72irVaLZKTk8mLXS5SgH8h0U+dxiqHcbhsCMXZOAKL
+EDxfkbtj3MJQfW6+CCcJt3Z+ACcJbufJbudTyUbkh3PpYSISrerVQn47rgJC2aMwNpXJVsyCHt7
S2DClX8MIgcPKrByJTk1Dz4Mr42u8Nu1AsnmILz9XiWOvVaKippS5JWVwFpUisyCUliLy5BVUobs
0jKKSEqQnst60hVKYqVr1mXklyKriO7r9BUICI/BDu//DECuXLmCuXPn0rNVKnhOPmP+/0yiR0nC
1/UkuqxrSKJTJMJ8iI1E5wgkR6fDoP7txBo0GiUH0WxW0D4jPeucnuavcQlvm6faYtUCF6xZtAiR
weGIj82BMrZAnHHD0YcNGDjisJHmDUl0m84GKkIXXa+7DyD/8IuJNd74bKmsvyvj1TTnTvTudTOv
uOOcU1kcebCu5vlu4ox0lpoGnej8GSbW+VApUYWVtxn4Iw/JSbtoMXUSpC57eRyJcDkkLzAm1oqK
pUqN3TsXgPtGcCMdW3xSMdg5GYMn0gIdFydP2JWAgYlyTlnxmef1I+IThW6oY/3YeD5MajB9L6ey
7mUnOufrNRqNSAPyWd53LeO9+SeWLZ6Lc0WqOlC4esyIX87niRSVrdqKo4xfzuXi+/dTcC4tSopU
8lT46VQWrn1pFVHLmcRgXCkIwrULmfDxWYaOHR/Dgw9JRPmJEwqEhCgwZowEJtxDw55eRWkY/S+O
0e9ahRTa5PZH5mO2mwmLViWLMRAMGOHxJXBbbsGcRSYExhQKHUciqzalwmmeEbspYtEmSwCydW8W
RTJGbNppvWcRCL8uXbok0oAcEZ89e/aun/mS9K7de+HkQS+c1fjiVOQ+HHaYg+IBE/CBx0acVfvi
jMoHry90R1HfsXhz6VKc0RwgIPHBe9s3oHjQRBydM59sHoSvciLww3EdPn/bSBHbRDHp4KnWUgEH
24+j3zVrFXjvfQU5WtzY2ho/XM0ntKvF1YsVOPF2OU5+WY5vvqvEx59VoKiiDMUV5dDq87DAPREb
tlqQkVOCojKKTtKLsGKtGUtXmmBOLUIh6bLySrFlewpcFxmhis1FaWU1Imjj9vb+z6uwmAfZsWMH
IiMjRdrqbq9Mazb8ty2vJ9ET43H5kxxc+jAbr+vjhO5YrBbnT2Tiyud5eCfdIJHoBBif1aTj6qlC
fFCSQrp41KiV+OS1POTnhGPs2N7iGebMAjuIVVVSpoELEfh5Z1CeOMEO314kux3JR25qKmKUVpHG
c5ipwxYvKwGCBAxrN6djqpMeK9enCWBgPUcZ02YZsGCpBb6hBUK32zcPs1wSMdvVhL3++QhT3QeQ
f/11Zyd69l060QvvINGPk66yTTck30mi53vA1nH+wfsGDBv8Mpo1kxbTiy9y1VAr8kweRKdOTTBi
eG988WWKIN3xRzY2HbCg/2SD4DCY2xg8IV6qrCJQ4LyymObLfAcDg2tyg050lQAbLuflY3T7D/x3
xrlzJ/rKNQvw41c5orqKSXPmOTh3zvn7i/kanCXA+PWyVFklSPQaA4FKJH76LFOqtmIS/YM0nDYE
1ZHobMvU5P3o+MLTeKSlAv0HkB3bPoCOLz6GkaOa4vn2LbBs+TT8el3qED5/sRwpxaWYvUjq2uU8
8ubdWdBZD2GNR4boiGb9otUpiE+vxt6QfJFTZt0UemBjzAQ0ujJBonPe3m5MLEJiSxGuL7wnAPJ/
eZ26cB7TmtGaHDUNZ6P34MTSJbQeOyNR8SIKuo7EqWBvfLxjA9Ja9hK6jMf74NPdm3Am2AsFL9oJ
HTe9vue5FmdNPrj2RaoAV7bn9k3OeKzlg3i6jQL9+ivwxBMPoVfPlhQ1U1T8/ONQxmyS1uSNSlz4
LBtvvVkgd7zX4I8bh1BzqABFRblinEb33koxGdkvMBXFxXnYss0suqRZv3GLCYWFeQiNSBN/A9Y5
z9eRI1WAkNCwRu9EP1mVgZpINc69nVVHop9+LROHIlT4pNQCW3f61VMFqNIk4M0MC/7kqjUbiW40
ojZOjZ9+4HX2Gi5dzsW4sUPwYPOmeKmzAj3oGX/iyRYYPLQFevRsgq7dXsDh2mhh969OFyMnNYUi
pVTRHMjrasI0HfzCi3EguEgcLSz4JHrf7U9goSzFxGnSOes8+XejVxZC1WVwcZdIdBb3VakI01TD
ae7m+wDybwOIrROdU1EMEEkyic7Td3l0O49wt3Wil7XuhsOkS2v7MkwPdEFKE2kmlijjzd8K3JI7
0VFBHo0G+clbkW7Zibz8ELz5uhpVuftQku6FHy4lSxvprWrgeroAkIGOJvTnTl4CgKEOemkA4zzS
M4lOOhuJzmeMSCR6zO0k+iTp7HX+GQw8jduJTgCyyg1XT8SRx7wDp1W78OtZiTC/ftFKHvJunIyg
3/stvehOv3GtCJeS/PB+4FZ8mBWEP5kkvlmNywXhOBm0BZezDhLwSOM2bn6dTQ/0fpj8VyHFuBtl
ZRF4rSIc6aEbUBLrietXsqVqpF+KceoNM1KzMrBydYIgHAfbxWDvbj10cRZ4eerEPdtyw7p4JMRa
EOhvxCh7lTgPwtVVi1h1EpRRZjhMUwvdlKlqKHmOUng85jjPazQAmdHyebw+ZRZOHtiKd5cvRXrL
3jA36YIKii6+2LMZH29di5znBpMD0xl5LwzDF14b8Ma2VUjtaofkZl2R+URffLR1DU6HeuGbw3Gi
e5q71r9/zYBCvw0w+q5HRpoPDh9W4rA1GCl+m/FGZjBFHlK1F3f9X3g3De8cociQe3F4PM+1SlQV
ZqEsOwMb1xnEeHm7URrEKVNQmZ8J/wNmMWqcHR7f/WZU5mVCr6H1aq8Vtly7xoDy3CxEBwfCmyKH
RgGQzCxoI9bjC60vjm7diJPpYbhFwPDnjWp8kRREug34MGYf/vi5VHSiX6xJQO0ODxTtoTV4Kl2A
6bcfp+LoHi8c27cVVz5OFfb5nexTq/RBxMK5UG5fiezsIByrVcG441UEzXNGrc5X2Jt/5pmqOBRF
hSBilxKjR8egD9li/mw1YnzjEXEgHg5TYoQtJ01UIXxfHNT+CVgwVxrfP3ykCj7bY6ENTMCG5RoM
INtyN/q2NVrEB5swn4/rzbLeB5B/68UpLP0d49y5fPfO0e3lbZhI74aC51/G9JaPYWyzphjdrCV0
j3ci8Ogu94GQ9/ZzOm79ZMWt78ir+d5M97TgrtNGepM871/JU/iJgONnijy+t+DWtQzc+jENuGbC
pv3JGDJPGogooge3el6DK6qGzTDKQCEfV0vX3AvSMNXFJb529DkBHo08jffmrVtwd3LAB+sX4JM1
bvh4tRu+2Lka53X78cXuNeKe9Z9tWYrzcXtxLnAL0p0nY9JzbTGu1SNY62yPT8M88Om6hfhktQtO
73XH1zn+uHpIg/MWH1wiuZoWgB9Ko/HzGwZczQnFlRR/fJ3ih4vpAfimRotLOSH4wuiHgjglTAER
OPhqGEK2hCLFlzZI3yDaJIMRtCkMvuvDkOQj6VL9ghDlGYp9a8Jg2Bci7lnidoVg7+pwaHeGII3u
9bv2iyN7G+PFKazFfQfg840b8fEmks2b8Ob8xTgyZQ4+WPsq3Uu6t5esQO3E2fhwxWoETJ0M+6db
Y/Tjj2PTiz3x7mJ3fLF3O7703YFTUftwqViNy2UaXMhQ4mq2Ej+Wx+H6+6m4/mE6fqRI8JcjRvx0
3ISf6P7XU1b88lE6LryZhreqM/H+oTR8+nYOjpVnoNiagZLMdOQmpSHoQCJiI5LIIcoQUpyWjqhA
AtsAij5S04WuNCMD8VFJCNxvRI45DRVZWVD6Nx6AZObkYPeUKTixcTuOrN2Co+s98JE6GB8qg3Bk
3TahY3kv1Befxofh8HYvLBgwBGMeaYmJ3V9Gsp8nXt9zANVrPVGzaQuOhYXi42wd3tRG4/DBQBwP
CMWJyCicLDDh49QEHA8Mw2sBYThCa+3dJDU+ydTg9ZAgFAcFwxoUg4gdcdixNg6x+3Qw+UnCpyTu
WBsvzmm36eIO6LDz1XgEeSYg0U9PooPBV499GxNwYFMCOQB6pASZsWS6+30A+TdfdyPROW3F0hBA
+P6tTj2w8ok28CXz/EySSOJEYPJmxx71neg/cCe6Ue5GN0nC13fqvrHpjLcBCI+CZ2lIogvd4tS/
kOisG73odhK9oa5RAYRk4WR6UBe44/2lq/DeMlmWrMT7tmtZ/wG9v+2+AlPad0AJ2fAayVqS3cNG
4vNV6+h7luHkzlW4kHAA51OiCUAicc4cIeR8clSd1Osixf0Fki+SolGu1aAgOArlIUqUhUSj2C8S
xb4R4p3vWV/sb9NFoCyYdKFKlARESTqS0iBJx+8ldJ+1yx+us5wbB0DOnMGyIUPwGYHF+ytX44NV
a/DRunX4eP16fLBmLenWCPmQvv75pk0oWrgYk1q0wBmy4WWSKS0eQdaCOTjpsQmfeW/Gl37bcSp8
L87EHhD80hmDH85Zgsm2TLaHE6hE4HK+ClcJYL49bMR3BCg/HjPjbK0Zb5Wm4K08E45aLahMTUJp
SgpKk5JRZEpGqSUZJXRdbBOzdF8qX9+ms0jXZSlpiD7g02gAYs3Ngdfo8Xhz0w4CDA8cWe+J2nWe
dO0prm06vn9jww4ccJyFZfKaPEwyvPUzKGHw2LgTNVs9UEPAcMgvFDX+JOSYCPELETqhp2ubrpo+
eywoAK+FhKA4JBQZgSqkh8QjJSQB5gADjH6SJAXyuexG8W7T8ddZl8xnk8g6kz+f4W4UkujPZ7hb
sGTGkvsA8m+nsLTN689E59JcbibMv4NEz2/ZDUktO6Nn8xYII/OkkgSSdGrSFNFPv4A3OnSVAOS3
XNz6vYSii8x6oKAo49bvxbj1S3Y9gHyXjFu/FeLWdYpMfkqSAGSORaShBv+FRNeLlBWX6Np0Eoke
i2GOxtsiFR6yyCQ6RyONmcLiFq75I+xRPX4m3l++Fu8tX4PD9jOR+/wwHBo1Q9y/v2INXnN0RXHH
EYjqMRydW7VCDtlQLwNI78eeQsXchfh4xSp87rEChyc5oWTwVHziv0cAybmkSLxOXndhn/F4Z8sm
Ao1oIe95bUVR3/F4beEyAhAlKhLikLttPzJ6ToF1xFwU7w0mcCAg2RUI65DZyOg7DUXbDqIkkMDB
JwLZkxYjvfsE5K/YLun8o5Drsh7pXcYj13kNSul7s3cHNBqAnDx3DvNp3b07dzHZcjXeJbAt7zsR
eR2G4bijC+kkIK4ZOR0FpNvQrT9GNm2KcrJhHMkEktmdXsJHa9fiC68teH/9WhT3tkfFKAd8Hr4P
p+N8cDY5BD98koqfT1vxVVEMvsqOxpUyNX45lYM/vi3Gzx9n4szhJJwoScXJN634/usSfHoihwAg
lYAgBbX5mbh0rgQnPyhAWXIqAUoKKjPScO6LIpz/sljMiWJdqSUVn7+Xj8v02WPFmQQu6QQgvo0H
IHm52NSpD15f64GjGzxxyH0dcrqNQ26PCahZugFHSFe7egsKBzggs4s97F/qJtZiLkk0SVcSz5ET
cWTTLtR4eKLUfQOsXceh0GExaiiKPUxAUrFpJ7J6TUau3WxU7/EV4FK90wc5Q5yQ038yar12oyQs
HGkBKmxcqsVMRw18t8ggQkDAkYYT6baviRfAYCJ94DYdZk/XYvWiOOgOSuCh3K2Hq7MWC+fEQr2X
IpCQ+wDy30OiP/dXEt3WiV78RDdaTC9hiKI5tpJpHBg4SDaRPMU9CE0ehKntC/i9wFPkim9xJ/Cf
FdJAxW/NuHWjVNLdqsatH9KkyON6gaRj8u73LMGBDJhslDiMgUoMmZBQT6IPVaHfwBgMYr7DrZ5E
5+50qRPdIjrRxYTef+lMdAaQ2f3tkPp4b9rcVuMtlyVIb9kHJkUnpD3cEyfmuQt9IQGKl6Idhiua
YA/PsiKxJ3EnaUoy+tn2BBJL8IbjDPobdKEoryNKh07FhVQlPg3ai1T6WazLem4ITsUF4Yw+FDkd
7IQu9aFX8I7fPlQZdUgf4Eh/x470Mzohd85alIZrkO2wRNyznoGlNFSNgpVesNC/w7q0F+1R7BOO
IgKaFPq/JylepPe+KPLyQ/beoEYDEOZAHJs/g8pe4/HhmnU4MmmOsIWJ1mAe2Y/B+M257kh/uBdc
FE/BkezmQdKWZDHJeJIHSTYOHoIvdnmifNAUsk8n8f1H5y3E6VhfXD2il4njI/j5FIFIlhLfHk0Q
zZyCT/q5DGcOJeLd0mRc/7lCyvv/UY3avFQU6BMJPIphGxH/VlUm8uIS8dk7ebCNRf/83Vzkxxvx
ellGne7KxRKUUTQSvXd/owFIVmE+liseR42jO45t8UY+AYVZrIFOKBw6A8e2eqNsshsMipdpHbbA
CtmGz7D9SLqQPNrsQQRNn0cgsg3pzw6h730Ryc16oHzddtSGkAPSd6rQ8doqcl6J2rAoFBDAJAmb
d0TByFkojwhH5HalKNjgs9enTdFA76tH7H49ho9S45X+KtiNVCOGQMJCkcj0qRqhY+6Ij97lqGOF
W6zQ8fdvWBqHtFALlt4HkH8fQIIJQGrlce7cVc4AktykqyjpPUoAcrh1dyxp8iy85aPFviMZInvO
niRDSVa1ehw3xSiTKgkY/iiVwIOjDY40BKhU4tb3yVIq65ccQbaLcx6uZ0gk+jSTICAFiT5FLwBk
5LykuoorBoi6TvQxcXXnrDck0UVlFgHOCGdz4wPIgOHIaj+EPOQ1eGfRcmS1HSQ2LetTA/D2gmVC
X/XKeIxRtEKxbMsakn4klZx6IRnGXrSDAz5a6IKU5q/Q979ID78LLqQp8aXSD1n0ADNYFPYejzOG
MJw1haNkwCShs7YZiA8i/VFpSEDmhAXiAbY07Y78ZR4CLPJcN4hCiCT6P+U4LENpiAqFm/chWQaL
zH6OKPGLQvG+EKS1H0k6AqV2w1G8JxjZexoXQKY/0g61wxzx4epX8doMN6Q89IqwZXF3e7xHkdx7
C5bD1GYA2asZrsi29CGZSlIq29T+kUdwbPNaHJk4m9b0y/S7d8GJZctwWnMQl4pV+POmdN7FDx8k
40JmJL6pjsfN61JH9h/fFOFUpQlvFVvw45USofv5xwocyUpGmSERpz/Kl8j2m9V4vSgNxbpEfHDE
Kp9bUoOPjmUJ3fH8VNyQz9U491kBKpMsUO1vRAApyMeKpk+jdt4qssUOFI+ZIyraWEonuOAo6Y7Q
pr+n+cuYX390oHASd5FoSHpwqvrFzqjd+v/au+6wqq7sa9qkz2RSTSyTYhKjsXexoYDSewcRkI4i
YldsIIpg59GLXWxIlV5ERUGjUZMYE42OyTiTmUmZzKT8Mpms31nnvgdPBCMiJH/c/X3ng7fffe++
u++5Z+2919nnzEVO70kSLLKfGozKOUtRu3Y9CgydJSDteuBNlE4Lk6BS4hbc2NdKLTxQJgAkZUkC
DMZqJAi42KXI1FT6ykyYTiZYJMDEKEkCClNZHo4p6DtYg+GjNYibl4HdsVmYPT1VAsoAAUILg9KQ
rQLIb4VEb1rOnVXlXLpE1naI1yd79sbWri/j5Qcfgbcwy3eifSBaD9Ee03rQbzIaefJp/JQfrpDo
3ygkemO66oudSkrrq2w93Q4tib7vJg6EtR6MHhhlNNZ3OOxUCHO9fdYNnBUSfbR2/3Pd3usjrbZh
tN2OX4UDcZtojBMO7jLtIr1kJxHmj7fGKYepEjwuiIEvbrwR/vDQw8gQNvtJmwp8QGvPl0Ub8MAD
2G5ugU8jg/HevGCcCZuJq+lxuL5L4T0+XLsMp4OD8bEAk+vkQYT+siYGp0OC8eHqSHy8OwHlqcko
iF6HfLeZSloqeqMAho2SyyjwnoN8jzAUr1gnU1VshSGLkeccIiMPne7w3CjkOQWjKGJFp6ewSKJ7
9h2I9738ZdRGW56wdEWtoQ3OePjignh9epoffPsMlFHHOdF+EC20i1IT8zajYgLIU0+hPiQQH82f
gwYXL5zx88cncUvxyZbluJoWjb+WpeLvx7fiMxF9fJazAZ8XJeKLo1vxzbld+PJoFj4pzsCp3G04
n5+FS8f24bT4vzIrExXp6ajcmolzFdloKNiJsvQMlItWkZEhAGc3zpbuQUVmJsrSMuR79bk7cK5y
L6q3Z6EycysSFy/pVA5kzhADnJqpcCBHgyJQbu6JcktP+f+JGfOQOy0Qo7q/irHCZl+L9oXWQaQt
B2ujEZfe/XBs3kJULViGYqcAVIQuUPgOciLLYgRgBKHMN1ymtSQHEhWLUu+ZqJgagBMxMSiOX4cD
sZpGEj1pWaZMVxFENouogyT6xkUZMlVFvoNAsig4HWvmpDfyIplRWViuJdEzo1UO5DdLousadfnd
esFEDHhm2ofSUTRDbYqA/1eJZi7avKeeVwDka+1y7reQ6NtaINGV1pxEb6wy15Houn3Ob6lEb2VP
9F+JRPecYorTU0WkwUHPh+QvSeAg8TcI7/sFi8jCCmYPPigfSnp1bqL1F+1h0VaLxqhk2COPYL8Y
qK8LALmxdRU+26+R6SvyH2x/2Z8go5HP9iU06vg/dXyPHEh5SjIKSYCvTZBNggIBZPWmJh25DurE
e6VxQhfLtkXRiSaPi9V+h3jdqQBy7Rq8h43ARWEzBUCabMn2wfQgzB42Eg7aPsmBz0m0l7SD3SHR
Eqh/qRvOzgjB5ciFuBKzBFc3rMDV9cvxyYZIEYWswLWta3BtZzyu74kX4ByLG4c2Si7kr3mb8HmB
BpfzktGwNx0ntybhSFYqqlKSUJGairLEZBQnpaJ4i/ibmIrSxBSUapLFX6HTpKA4QbwW7yu6FJQk
KseWCF1FchoS5i7oVABZMMEIpxlphERIHqQubL7SBHhUB4bD8pVe0n5MR1uJZqF1Dg1EqxYtQDTX
oaNRN2c+alfHoXbNOhyNXY9aSaLHCl08amO1Okmix8q/tbHxOLluDerXxaM4Lg4H1miwd20adqxO
x07yH9GZcobVLvE/XzN1xdfU77xJpxy7I0Z5zUag2R27UwWQXz0CaSTRezeub8WKcxYP1vfojfUv
9ITfffchUZhkpWififaJ1jMJ1Ya7+/gAP/4H/I8A8kMufv7hsIgsRMTxDy14kPdgGus/zUh08iDf
5QP/3oGwFbsxzGE3RkzJkPyH5DUIBm57MNI8C8MmpimV6DoS3Wab1DEKUQAkW0YqrBUZYZqpTAPu
ZBLdaYwhaoxsZLTBVmtoi8JXDXBkgg0+9A9B0JBhMiXAB5Kzr66Kdkybuz+stSVtut7YBNcXBOKY
hR3Kx1nh4pqljSR6w/QAlBpMwbtzwhWdiELOL5wjdKao956uAEhaCvLmrMCBwZbImeAqSfRSHYk+
xgkHhtnICKNUgEjxyvU4ZOaN/YPMUeA/X+pKYjYiz20G9g80FVFIiDYCWdO5JLpwYN51niYnHpwV
0UbFUFMU9RqLk9ZuEkTMX+qOIqZWRLsi2nXRNonWXetF05ZGDz2EmiB/vB8yA2WDTVA13gofRS3G
1Y3L8PG6JThi7ojy8Za4uG6ZBJG/5Cbg6/N78N2nefiyficu5aTgzJ50XKnahX9cKcCl2mzUpGag
KjVd2HIVDo60Qa65Nyo2JqIyWUQbawTQGrogZ5wTymLWozJFRCWbkpBnPR0HR1ijZP5K1KRtRdK8
RZ2XwsrPw6xX+uN00GycCJ2No16BKOhrjMJ+JjjhG4qcaf6wevgRCbp+ot3QzmRz0qaxaMcLtGW3
P6Fu3nyUe8/AoYGTcdjCC0ej1+BozFpUzVqIvMFmKBjngCORUVJXs3gFCgzsUDDMHMcXLEHZunU4
GLMFc30T4WKTiDWzUrFrlQCSqHQsC06Fs3USFgekYFd0umzxEamivyVh5tRkbF2RLo9NWpSGaY5J
8HVOQsqSNOyL3Q5ftQ7kt0uiVzwnwKT7axj3wEMyHzpZtAbRtor2uNaDPiEaPcHIP76A/xbpkeg/
VSipK4LFj/okerYCKt8XaEn0I40k+qApWhJ9aBOJzplVOhJ9yLgUZTl3190YYpAsdZJElwsqKiT6
QEmia349Ev0pLYnu6o19TzSR6O+6eENjagFLYStfLVCcES1CG81t0EZz4x95FHnOzjhtaaMl0Xui
bKSZjDAurV2G7EfflrqcbiMUEj1rHfJ6jpK67IcVEr1yazr2DbHUkuivIs9RIdFzzX2aSHQBJORA
CvwXaEn0ntj3iqGclVW8JBa7nxggOZA9Twz8FUl0Iz0S/Q1py/zuI/G+iECCBg2Vs4XYJ5O1/XKi
aM9qOZA00UwEyLw7MxgVkiN6RX6+ztoZf96yHCddPcU1vyq5owoBIte3rcbfKpLwv/9VQ+5j/3Ux
LuWm4Oy+FHz/TZmi+78qEZFsEwCSgf0DzKTNaN/DAcKT37oDeVY+0rY7uvRAngCWqqztKA6LlMdQ
d6DvFNQkZSBp/uJO5UB8uvwBRy08UT9rrpxtpSPRS0ZZ4UjwLBh17yGf7/HaPliqjeYY2dVrJ8v4
jjJAg3Ba9r84Ql7j7of6oGZGhIgw1grwMNVe9ysoc/RB/cY4lFh6NpLoxeOscXTzWqQs2Cj5i94D
NbA0TcTe6GTsWJ6MMWMVYpz8SEZkMg6tSYaNeaI8jpxHXHgS8tcmI9g9UR7HNscnUUTZGQiwdscB
FUB+XQCJ05LoshJdS6LvuU8AyAtv4vTLveH65NMyVdCNm+9oOY8HRbtftKFdHkXoYy+gthuXMokA
ftaS6P8taYFEr/gFEn2bQqIPTZBRBNNZBjoSnbOwJqY1FgxKEp2gMibp5kp08VkCjuRBPDoXQOz1
SPQzjST6K8h5ZjDOuvvKvP3AZ56XUyN/r50i2V2ba+brsfc9jg0jDHHRPxDvuDgIQOgrB74j5s4K
ib55FXJeHC4AvCcOSxI9Hn/eth7F+iT6hlUKiT7JTUuii3vqHSFJdE7N3XX/m1J/SAxwkkQPWyrB
ggOAJNFjNomIJQ7ZWhJ974sGWhJ9TacCiNXjL6J2hDkukES3dJPgqCPRP/ALRq6tE5598CH0E3Z7
VMt7PK21Zc8u98Hs0eeQZ+uMj8SgVzPeRnz2NXHtb+CUpw+ubV6BMwEBYhDsLe/PUTs3XN8Rh7+W
JGmXnzkql5z56FAqzman4l9/LZK6/3xdhrqdW1GVloGDItKQs5EeegvFc5ajKnM7CjxnSjAmYBS4
zxC6bShZEI3dj70t7ZszxlFEMFmdG4EIAPF78DnUOfiiPmwuSsbZaUn011E20RFnw+djyXhjaTvO
uPqD1paPam3Zv8sD8OjaC5U+wWgI5RRgQ3nde58ahGOz5qEhJgaHx9tJMGZfq/IMRMOa1ah08pV9
jfpKM1fUxq9G1vz1EiTeGqSBu40G+5YnYmdkIsyMFd1kIw22L07EwahEeNlp0GewBiNGabB5tga5
QjfPWyOr09mW+mmQH5MGf3M3FUB+dRL98RduJtGf4R7oSkTCnQoLuveCxaOPo9/99+NV0czuuw9d
77sfjo//EcXPimO661ei71cq0QkU/9zWRKJTx+ijUbdDIdZbItGtmpHo9jsUEt15V1PNh9MuWQOi
2/9cR6KPIrGuXXSx00l0QyOcsHdTUljTAyV5Xm1giQZ7T/manvN2CxtMfOZZvPbQQxgimuEDD6Dr
Y49h5aDROGnsiPe8A3De2xdXFgfiQnggTgeH4Gr6WoVE37MZF2OWyDTWxxujlCJDFg9uWYUGvwBc
jF6My7s1KE9NQUFUvCTBCR46roNkev7UcDkbq3h5vKJbvQmFgQtlvcfhRasbdSTPc20DUDRr+a9C
onv0GYD3SKJrJyTUCRCtGWvdOJvtPWHLZaPHwuCxx/HiQ7/DRAEmgx98EL2ffgZbRxjjrK0bLgbP
wAdhokWEi/vijtNePrgcuxRX4iJxdfNynJ01A6eCgnAlba0EEO49wuX3vzy7C59XZODSwRS8sysF
H+Rm4ErdPryTs00AQDqqUtJQtj4BhV6zUDwrEpWJaahMSkdFQgqKAuajyH8eKjYnSx1b8exlKJw6
SxZw1qR1LoCQA5k3cCTOzJyLEyHhqAsMQ8VkF1SYuuFE4CycDJmNIwEz4dG3P4b+7mF0+93vJE/3
iuibk17phfyJ9jjpGYT60AgBQDNwLGI+yq29cER8tj4qCidXRqFu8VKU2/sI8AjCyRUrhU605StR
6eaPGpdpOLNSAGxsDIpWrcfmiC1Y5JeAzIWJ2LdCaSnzErHINxGJcxKxX6vbJoBkyfRErAtLlEDD
tntpIlYGJmJVUCL2LEvEoVUqgHSIcGc37lnBZciPHz/eZhK9eSU618Oq6fkGDnZ/DXndXkNyV+Gt
vvSKQrS/3GxP9DuuRN/etkp0zzusRPe8t5Xo3ASJGx1xCfJLly61mURnCoZ/z2l1JNPrpk1HhftU
FLt4YLuVHWrdp+F9cRyP5eB4TgJIAG5sj8GNQ8n4NHuzHomuEbqkm0l0EZ1Qd+OA5mYSfV2SaIlN
JDoJc/GaehYWKrqNIjrRyBTXLSQ6dfeQRH/vvfeQlpaGbdu2yZ0H75hEpy0DFFueF8DB1+elLYNQ
7emNKg8vHHJ0QbaNvSy0/CAwFO8FB+GCOP6DmTNwaeFchURftwyfxC3HlbWRuLZlhbAdq9AT8GcB
zte3r8WnBwUgH9gi2mbcKBD3OycVZ3an4Mz2ZNRlpKFW2PWIiD6qklNRmZIp01aMMiRQEESSM2Ta
io3/64CFx8hjUzNRIz7XXgDhsvjcpiExMRE5OTmNG0m1BiCLxk/EmbB5OBEcjpOhs1EvIge2EwI8
qKvnXwEQeT7CifANQqazJ/Z6eKNOHHsqfB5OzpyjHDczFPXRUWiIXYOG1TEKWIhWHx2t6ETkQUBR
QCQK9atX4Vz8SpyLXYWqNQJAotejYM0WHIpJwMGVidi7XGmMOPJWiWuJatIdWKnoDkUr4EEdwSU3
Wmn8XwWQDhIOdJs3b5Ygwv2Sy8vLbxuBpDzSRKJXv6gl0Z9qqkRnVMLK9KIn38RR8f9JEa2wcv2w
OCbv8Tfk7oTHdBHI97lKykpEFo3RBiMP6v6do0ei71J4kG/zFBJdVqLvlvUfkkR32tUIIow0SJhz
naxGEl1EGZJEF9GKbn0sVq9zFV+FRL83y7lzx8GUlBS5fwV307t69WqrAOI81hBHTOxktEEgOGpk
j4LXxuDoRDvpSVNXb+2O4jfGo2akBS6IQZDpmLOuPijpMxElb09SPGwfP3w8zw91Ng6omGiNS2LQ
05Hop4OCUTbaDOcXzGmMQC5EzkP5GHOcElGIrERPS0H+/JU4MMwaORPF+ZbFK5XokWuRM94FB0ba
4fC8VQqIRG9ArqUvDgyyQIGIRHSV6Pmes3BggBnyRLRCYr29APLTTz/Jjc24myOXH+cOjq0NfCTR
XV55C+dcvKXN3p3mj8rhZih6Yxzqbdy1kxQCcNTQFod7jUWdiaMEE9qy3soNhUJXY2AhQYfrZp0P
CkH50MmoHm+FSysW4pP4pbgctwS1ls6oMLTGh/EEkzgJIF+e2S2X2//nie2NEcjlyh2SRL9Ys0ch
0VNEVLF0DXJG20mCnEQ5AaM8bjNyjdxxaKIrymI3KiT6lmTk2wcgZ5QtShatEgDUfhL9X//6l9xe
gNs0cIuB2NjY1gEkPw/hvQbgHS2JfmyaiEr7m6Bw4BQc8wmRurqAMBSPtEJhXyMccw/AKQEYDQJQ
yo2dkSv6aqWVhwSb+rCZqPEJRt4AE5RZT1WAIioaR8PmomCoGQ5PcMAJEY2cFJFJ3cJIFI0V92ek
GU6Ja61Zu1pExetFpLFFpq82zNJg/0oFHGKCNXCz1mBFgEYCA9uW2Rp42moQMVWDPSLy4LEZCzXw
c9Ig0FmDrSJCyVNTWB0v3GiGA2BrMi884mYS/TGFA+EWtmXPaZdzf6ppOXfuj04ddyLcpdXlPKK/
nLuORC9XUldfNCfRtZXo3xXcWolOEn2oRlnO3VhLousq0Vk0OK6pEl2u0MuiwVFaEp2V6BN1lega
jLLZfs9JdB8fH5w6darV9+2HGCD7j/0lWJy+iUR/G6edlUp0ksDM5dN2x6c4Sa+6bICxzBVTXzHM
VEQjgThp2VSJXjbaHJ+KKOPDtcux97F+UndIkuhrJQ+S96fRSiX6w33xbsxyVLISfahVUyW6U3Az
Er0nDo51lpFHYcAC7X38E/aSRBeAcnhJLPY8OVAh0cXf4gUx95RE/+KLL+TGXBwIW4z6/vkPWDzc
FVX9FBL9+GRH+RtlJXqPUbKQkJX9ex99W9p335P98Y6bj4jcAnDohWHyuN3390a9rTsuzQ1H+ZDJ
jZXodbZu+PMW4R27e8niQtqt0tAG13esxd8qUptI9K9K8FFuGs7uS9OS6LX48Qc9En2geSOJXhQ4
X0ui+0p+gPo8C28ZeTDFtVOch7oDb09BjQCa5HtIojPDQDBuTQrLSxUS3dIT9SKaKBqiI9FfRfEo
K6mrmOIq+xr1ua9PwMkZEah185fFm9Tt++NgHPedgZPBwTjw4vBG7qc2KFxGHfkCjJTrFv3X3hun
RDRSZu6u7dMvo2SMNY7Gr0ZKxHr5bJLvsJqikWmo7UsSMVbLixiM0SB9gRKJ2JgqOvIda2doZDQS
7Kro2OZ4qRxIu4U7461ZswYrVqxobAkJCXIDJMr58+fltqHNd9DjHsorV66UO5mNGjYcGx/o3liJ
nv+EMgNrt5ZEZyV68dOKjq34jwqAsNCQxxBAGIUoABIhvr1aS6KXNs3C+r/DCmEuK9H3KACiT6L/
oJDog80UEp3LjQ+fkqEACEl0ARIEC+73IQFENM7IkgAigGSMs3YpE2N9Er1tAEJg0Lcj24EDTfsM
7Nu3DzNnzpTbseoLN5havHgxFi1ZghFd/4TcHspSGyx4O/jsEDloHXhqkBjgvKW+6PVxcuDisiOs
sGalddUI88bq4BrxsL0nBoR3nBzEA/yWHCCrpzhIAPl4UzQOPjdU2RfjLUNcy1wnSfTD/SfJB/XA
04NxYb1Cou+f4KKQ6Pe/gXyv2TJ1xSm5uurgQ5O9JIleODMSux/tJ4/d389Mpq8kif7iaFmdnv3C
SBQvaVslen5+/i22rK+vb3yfrxkh3+ItC486MjISIcLOkx98BkeHm0v7sIhwjxiwaLfDwiMmgNCe
tCvtm/PsUGlvAnTBywZy4Nr7aF+cEiBzac4sVI+1UirRxSDZ4D4N1zavxDv+/gJk3pSfr7V20ZLo
yfjv98qyJd9/XohLJNH3puLfnx+Wum//VSG3eZUk+jgnaZ9dD/ZG8eylqM7ajgK3UO19FEDnEqyQ
6POjsFsAO4/NEZHfkdSsOwYQ7taYmpp6iy35/FK++uor6dRwp0x9+e677+Q4wOfbQUTNQb/riuMO
Pjg5a64YzG0b+1qZoaPUVYloYvcDvaWNCvtPlgBy1CsIe38/UNry4Esjcdx/Jk6GhuBQr/ESVLLF
e0fD5slUVpH8zldlX6vyCEBD7GpUOPrI1wTPislOEkBIoo8yUMhxV6smEn2KkUZWnRtPVCILAoiH
iFL6DtFg2CgNNoVrZNqKoKEj0SP9ElUAaa/Qg+PeyNXV1Y2NDyr3m7548aLsXPzbXLh7Gff4Pn/+
Aqa6uiHryRcbSfQj3RXAYIShvyc69wRh06W12LhHOo+t7f5GEwdCEp31HqzzaKw63yV0OUr00ciB
7FCI9W/230yiW29Tajt0JLqHlkQ3z2oi0VmJLoCFutH6JLrLbpnuGm3TdhKdXIe+Hdnef/99+V5B
QQFCQkLwzTff3PK5f/zjH3JnuNOiWY8cLclaXR1Ig50HqkQIX2/roXAbIjKhp1w92gLHTZ0UrkTo
znr5yYp11o0wXXPOezquLBLvzfRHvV+AnK6rq0R/P2oxTkz1wUfrVzauyktgOenliw9WLMTl3Qmo
YCX6yjjk2vrLVBSjCnIdJVHrke82Q66NJdNa2qrzAr95yBXe82ERaZBAp47kea7wogtnRLaZRP/w
ww9vsiO3U6YTw365fv166fS0JNyh8N1330VeURHc3uwnK9FlVb+wE6M12k1GGlr70q5VI82FnT21
9uXsNW9UjzIXEZwTLgSFKiT67HDUCZBoEFHH5dWRkkTnEu9nQoNRP90PV2hfASCfHtiEvx/JxFfn
9uDzyswmEj0vE1cb9uNM7jZtCisNZXFbJGAcDl2k5TrSULElBYW+ESicFq5HoqfJqbwFriEoX7sJ
R9pAonOP89OnT9/SL9kP+eyHhYVJDqSldCHvwYULFxC3YT3mDxqNMzPmKCS6fxjKjZxQbuIsCXXq
yG9UWnqgdIK9iDRCpY7keo0AgZKxNqgVoKCksGbg2Ox5KBXRRY3fTNSv1JLoiyJRZjNVkuYnl6+Q
JPoJ8bfC2RfV9h44s2IZqrUk+sbZWzDXOwEZCzSNhHnS3ETMnaZBQkSTLmtRIuZ7i+gjVCP5D4LN
rkgNlvlpsDxAiV5yVQ6kg2axXL6MQYMGISYmRj68n3zySesprFnhd7yce2u6uyPRt7WfRPfseBL9
8OHD6Nevn8zdl5WVSa+vNZlqavaLJDqL4KQuQE8nPOr3WiLRd7RAoh/Q4EZO0i2V6NT9Iom+ugUS
nYR5fGLLJDo/L6KUe0Wisz+OHTsWxcXFsl9ygGxJrgmw8R7eConuF9Sku419f4lEv9pGEv14cxI9
NRNVWTvk9F19Ep2RSHULJHrVPSTRyR2Rj/P09JSA0tDQ0OqxuYUFt5Lo4fNkTYiORCdg8DX1jD6k
jqR52BxFdzckelQU6teswrt6JHphKyR6Tgsk+sHWSPRVCom+TyXRO05I9DKE5SwNpgroxbRKos8I
Q+rDCoAQCEii5z3xBg4/JUChhwIOtd0UEp01IrXaehG+V/zHN2X6qpqLLvZ4Hd9zT/QfckUrEqCw
DxBAIdu/shWdiEzwxXalfbVbxOjcZCpf6JXl3Ic57sEI0ywMN9aR6AoQjLTcphDr9jsblznhVN3h
k9LllF/dEiasXudx3ENdqURvPwfCiI6z2dhoS+7p3VodCEn02sn2cs0rgsIxYwcUvT4WxybZaaf2
BkkSmGmYauE5M2fP41h0WNJ3Esr6GclUzHlfP1ye74cTto6oEp/9KH4FPpP7gmyS62CVj7PABTEo
Sp1o7y2dj4pxljjtH4iPd4kIJC0V+fOjcXC4LQ4ZeaBkebxSib5sLXIM3XBwtAOK56+SOkYneVZ+
OCjsVBS8WBLmpYxKps7GgcEWyHefKXW57QQQzhxiaot9csuWLZKXa51E/7Mk0c+7+Ej7cB8Vpvlo
twZGc7pJChNtFfsKO5/X2pxpwaLXx6NmjIUEkIuzwnAhOAQVw6agxtAGH69chE/WLcWV+EgctXJB
5SRbXFonorld8fgsZzO+PEsSPRdf1O3ARyICIYBcrtgpSfQPa7IlgFSnpqNkWSwOjXFAvojyKkW0
UZWSIfdPyTPxlER6eewmoctEpYhKChwDkWNgj9LFMTiS3n4SnRmErVu3SiKdfZKpv9uR6LN7DcSZ
4NkCPCJw3DsYhQMmo2iQKY77hErdiYAwlIyyRkGfSZL7oI4RSIWxM/J7G6LKylMCT8OsmajxDUH+
oCkot/GSEUh9VDSOCZApHGaBEkNHnFiyTOrqFkfK+pDi0eY4rSPRBYAsnp4ATzsNNoYrM60IBKtD
lJRVVKBClrMlRCTCy14jIxNGGzw2a2EiApw1CHLRyGm+Kon+G5CZQSGI7vI0Sp/uiYrne2LPAz2Q
2qUH0kXLf7InKrv2xMFHFB3b/od7SF3+75VjqNt9Xw+UP9sNX+wLwXc/lODb70vx7b/z8e1nafj2
01R8+/UhqfvxxzJ8+9et4gFNxrdf7FWO+64EP3y1EwEL0vHWhCT07heP3n3Xot/YLRjqkIXBFml4
awB1ceg7fCOG2mZiiE0G+gzZIHV9Bq3HEKt0eezbozcrnx20EUNMU4VuG3r2McGNv1zvcDsSQKz6
D8PO3/fBSTcvHLN1xfbfvYnkLl2x7YHXcdTaWer3Pj8YKUKX3kXYdoIVGrx8kP/WOGHHl2Qr7D8R
p7y8cMRksjwmucvzyB9mjI+y1uJs1AJse+gNqTvQfTg+2LwCFxOjsbfbUKnben8vnFi+AIVJW7Ct
/2Txfc8jTXxnts104bWtxx4TD/ma+l0jbJAbFY/9XuHiPH8S+uewrYeB3DjqYMRyZD7cR+iex44n
+iNn1lLsnrsc9uaWnRNBf3odpg8+i5Le43FKRHQVEyylLWi3fS8Mxkl3LzH4Owu79pL23f6wcGjs
XHHSdSr2PN1f6jK7vIwaU3ucDQ1CQb8J4rMvSvtWmtvjYtwiHHF0FtfXTeheRKn4/g9TVuCT/I34
zzeF+F70068+O4h3BTjXbduEf97IxQ8/luKrLwpRk5mMok0J2N7XuNG+B33CUZSUguwpnuJ1V6nf
O9kdRZoU5ATOE7ru0pbZb09G8QYN1s+cjTkRczrFlvsFgHh1+T3KTZxQEzgDB/tNktdMWxwaPFnq
Cg1ttc9yV+z90yhUTw9GqZ2nsGEvafPtT/RFhft0VPv4YOczA4TuBfHeayj1DsKRpZHY28dQ6rLE
PSqy9sCR5cuQZ+QgbUN97ogpKItahs0hq9Cnfzxe7h0PU8N4ZM1bh9SIdRgxXOjeisewYfHQzFqH
nYvWwXxSPF4RujfFeBDlF4/sJesw3U7R9eq7HuHuG7A3cjOmCidi34H9KoD8WhItQs3+XbvBY8Ik
uE8whPMYQzgZKM11nKHQG8JlbJPOZYyi43s6HT/jPt4Qvq5W8PN3h58fmxv8fJyUxv9FMzQcAZ9p
DkLnCL/prtrj3OE/3QWWNk6YZOKISZPsMclINBMHGJs5wWiKo/JaNqEzdZKtSWcvjnGSx04Snqix
eFB6vT4Mo8aYwcTCBZNNrfD553/reAARHra9lTXGvPompllawWOKGZzGTGy0EV97mlvAedwkRTfa
EG7GUzDVwhIuE4yFboJsrobGQmcBdyMTeZyj0LkI3TQne0y1toaz0FkPHY1h3V7BNAc7eInmPFbv
PFZWcHNyhJPedzqbmMHVzgHORqZNuomTpc7FzFL8FkXnNM4IrtZ2cLWyVc4t9EOEs+AkjnGxsUWg
f4DkMTpa/vLXGxjQ602YDx6BabweYafGvibsRztK+2p1XIPMw1TY18z8Jlu4m5jCS3zeVc8W/K5p
9rZwn2wq+vJEGL01ABPe6gcfFwd4uzs29snp093g5eoIT2cH+b9O5+niBDcHYd/xRsp3Chu5mFoI
mzvB2VjPvkZT4OboCFdzK/naasgoDOv5GjwcnEQ/sZJTmTtDqmtq8MbzL8JJ9CEP0T/Zl3S/0WWi
iewvrrTvaK19xXV5iD7pNsVcz74T4W4mbC76pX6fdqPO1hbOwr4uYydhVM9eMB9pgKn29sp36p3H
3c4WdpZ2MBTP90TRTEzs4WittMbnWDR7S3vR18T7xspxbNYC9F1E9Gs2RRxj7IiBgwwxZJAB3O2d
YSbOU1lVqQLIryUkN4NCQ++ZFy7G0ab2s9I45vz008/w9vbFN9/8R76+6bj/3dtrWrJ4Ic6dO9vp
tjxcXIwNW5TZRc2H2Z9b0KGNOp3++o2/IHjmjFbPcy+jKh9/PxEpftf5js2qVahtpQj253to38KS
YmzWJDTq9fvkz63o7kauffopQsPCfpVn3C8wAP9shbu7U5u1JvrHroxZhWN1dR1+PYWFeUhKSuws
86kA8kuzj4KDgzvlXNOnT5f5246WRYsW4ezZzgeQkpKSTvEsOY2Ts8I6Whht+Pr63jJ1uTNklQAQ
zjDs+MGoUHIyHS3Xrl3DjBkzfpVn3N/fX9bedLRERUX94soX90Ly8vIkl6YCyG9AODh0xk2ncPmF
H3/8scPPw5qO2y2V0VHyqfAyOXWyo4Ug3Bn3jADCe9babKmOFDoArU1YuNdgzCVWOlo49bauE7zz
loRArKsN60jhdPa//a3j08UE4w8++EAFEFVUUUUVVX7TogJIS0LSl2Ht559/3iIxyipYvscU15df
fnlX5+DnWvssC6FYhNdeD/nrr7+WXk9LXjKjnb///e/yGtp7rtsJz0NbtZYm4OKW9Kb5O+42hcfv
b+2zjLZaWxbkToXFZ/we2qslYX+gnXkNtHlHCauoaauWijZ5v1mHc+PGDdlut4jg7e4Vr6OlSJjP
BO3Ma22P8Hfxe1rr+7w2/n7aktfbUcI+QVu2FH3weeH95m/gb/3fXRCR7I/8bEvCc9LO7FftzZDw
Glrq++wPtDGvgfbsoEhZBZCWpLS0FH5+fjI/yiUPmt+g1atXw97eXi7WxtVT2ypcyNHNzU02VnLr
C9Mv1Ht4eCAjI+Our4HV9Pz9QUFBCA0NvQUkuBSJiYkJFixYICug/3ev2XrtwMuVerkekbe3t5yf
rw/IPKeXl5e09dy5c+XijG0RPhRcz4xFY2zNQ/fMzEy5XA1bezgD2oq2JE/Fe9/8YVyyZIk8B/uD
/hIv9zrNs3TpUnk/aTOmz/SFKULez9mzZ8vf0drClq0JwYfL0XCBUfIR+kDIQZ/npo3J++iWC7kb
4f0KDAyU18AFJJsPrFwHjOePiIjAO++80yG2/Pjjj+U5aEv+Flb560tlZSWMjIwwf/58REdHt5nn
Yj+krfgMczFH/WeLwMH+Tjvz2btbp4kAyHtNvm/atGm31LOxQNrQ0FD2BbYOSp+pANKS0FvmA8sB
kIN5847MAYNrPDGv2dapm/S4CT7sxKyKd3R0bHxY6fnxwWI+mB6QnZ3dLWt1tWXA0XEdc+bMQXZ2
9k3vZ2VlycGAxYDt9SpvJzqPlg+ptbW1vH59AGDVMAf62y0H35pwaQ8XFxfpqbJgLDw8vPE9DnK0
MwdG2pMP7N1Os2XkwQed18F70vy38iGOi4uToN1RQlvpBgFOSCCgNR8wzMzM5IoA9DrbKgT3hQsX
SrDgmlv6zgtXrOagxwGeBC3XnLpb0XnDBDgbG5ubogwO1LwGLkHC56OjhPdS51DRIWi+9hgnD7Bf
st+0FO39knBgJzjy2ggk+oN7fHw81q1bJ+1MEGvuQLYlWqQtKbm5uRL89YXLNNGhoKPRWiSkAkg7
hSEeDa3fdDeFQkKKANL8geRNpyfFm0YgaUsoyu/koMfBjJ2AXopuORUCCTuuLt3DQeJ2SzHcKZCw
EzefecVOzdk8/P2MENqbeqHdmttSf2kTDnocaPW9d3pm6enp8qEicLY1muODw9+v8yppSx1IcCFH
epc6G9Cz1QevuxF6luwPzVNi/B30NOnRckmS9kRz7EscXPXtyLWb9EGeYLVp06ZbUnW0I/ulk5PT
TQs03onQKdJVbfN6CCY6IWjozkdnio5He4WRGqMMfVtxUGUFOa+Ddm5pLau2CG320Ucf3WTLK1eu
NPYRPn/sI4w49IUTB3g/CZTsU23x3vnd/O10DilcmHXv3r2N7zMbcOTIEfk/+z6j//YKf2fzbAVB
g9dAgGR/4OKxKoDcYyE6c9G1WbNmycb/d+zYId8jaHBQ43o6txNGEHzA71ToGRMk+OCwAzP1oQuh
OTARXHSRAx/U9oTx9LTo5ezcufO2x3Hgo+faHuGeIM1teezYMfkeBzOCGMGzNaENGDG0JV1AIF+g
XfaCAwXPoRMCr24pb4IjAaQ9U24J8vz+2y1ZT4CytbW9qwhA3wsnCOjbkpGVznbcwIuOy+1SHwQA
Ds5tEaaouKoyhUCiA2YKl1bRDXS0K1N57RGukMtn63YzyRjdc/Buj/BZIxDqbMm/TEkxkiJQM9Jq
DsTNhdPedWPCnQIIn2n2R8qyZctuSmvy3nGtMwrTu790/l8SLiPEa7zdDE6CC1PxKoB0kjCfzE7A
9Yl0HhLDUXrtfM2HmYMFPVJzc/M2DRj8HnoE9JDZeB5670x/sFNz0ON52QE5GLVG3N5JdEWPnx4d
vX5dxENAoqfH1BgjBP7lwN1Wj/VOhSBCkOXqvTpb0qOjN8jr5cDMQZODHm3RlimVBG7+dtqfS3tz
EOT/jEbogTHdRE+Q9mQK5m6F94KgT09V573SdrxnvCZGDBzQeT8tLS07rK6AaUcO3jy3LurVRc08
PwdM9kvWHDC6bIvs379fesfsbxzkCCb8br7W9VPeN34vUzB3K4xEXV1d5X3X9Qc6D4wMeO/5P/sD
U2q328ujPcLv56BLMOGzoLMlnw0d+c3r5l9GE1w0tK3RHNfbY1/ks85+QkDk9RGMCc78fq4I3jz6
aUtKk6k33ivec9018DmjA8rnnwBN54kp7Ja2CFABpIOEOfkxY8bIAZgDDx9M5kzpxfBGsbiKN58p
Jq6e2lZhbpWkMr+DHYs5dXpDukGRDw49tLZ2XH1hmDxixAj5XfydJOf5cNAzZaeiV8QIh9fH1FF7
Z4S0lo6hzUxNTaUtmRvmAMyojh4tHwISfBwUGSnploi/U+EAxOiKkQEfJD44LKQimFB4b8h98Prb
MzeeA+aECRNkUSl/JwcG/lYCFn8DUy60JdMhbZ0I0BaHwMLCQkaojBh1EQE9WE76YB/lvWTjANZW
EGO6h+k3ev26gZWpMh1ZT2+Z75FYvtuZhxTeKysrK2lLesU8DyMegiMjcF1/YNSlSwPda2E6l88G
z8Pno6ioSOr5bNCO7J98PtlvCARtrc8ioLM/0l7sn7xGDuIEYD6DjGr4Hgtr77b2i/fAwMBAfg/7
HccsCtNWdAbZP2lj9gc6FO2diagCyF0OgGwtka8dMWupI4S/87dwDTpbtvYb2yOdsQbVb6k/8De0
dr6OtOW9tHNHXsO9eDaoa+/1doYt+T2t2ZLvdbAtVQBRRRVVVFFFBRBVVFFFFVVUAFFFFVVUUUUF
EBVAVFFFFVVUAFEBRBVVVFFFFRVAVFFFFVVUUQFEFVVUUUUVFUBUUUUVVVRRAUQFEFVUUUUVFUBU
AFFFFVVUUUUFEFVUUUUVVVQAUUUVVVRRRQUQVVRRRRVVVABRAUQVVVRRRQUQFUBUUUUVVVRRAUQV
VVRRRRUVQFRRRRVVVFEBRBVVVFFFFRVAVABRRRVVVFEBRAUQVVRRRRVVVABRRRVVVFHltwEg/w/O
7Ay3o9V5uQAAAABJRU5ErkJggg==

------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://scikit-learn.org/stable/_images/sphx_glr_plot_multi_metric_evaluation_thumb.png

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
JEkCSJzb/wdlMmBT+p92OQAAAABJRU5ErkJggg==

------MultipartBoundary--fXGgGnVmPNGRD3jZfr1PVDHWBACOyr0AfOT7Z4GnIp------
